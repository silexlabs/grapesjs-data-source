{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@silexlabs/grapesjs-data-source/webpack/universalModuleDefinition","webpack://@silexlabs/grapesjs-data-source/../../node_modules/dedent-js/lib/index.js","webpack://@silexlabs/grapesjs-data-source/webpack/bootstrap","webpack://@silexlabs/grapesjs-data-source/webpack/runtime/compat get default export","webpack://@silexlabs/grapesjs-data-source/webpack/runtime/define property getters","webpack://@silexlabs/grapesjs-data-source/webpack/runtime/hasOwnProperty shorthand","webpack://@silexlabs/grapesjs-data-source/webpack/runtime/make namespace object","webpack://@silexlabs/grapesjs-data-source/./src/types.ts","webpack://@silexlabs/grapesjs-data-source/./src/model/state.ts","webpack://@silexlabs/grapesjs-data-source/../../node_modules/@lit/reactive-element/css-tag.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/@lit/reactive-element/reactive-element.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit/node_modules/lit-html/lit-html.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit-element/node_modules/lit-html/lit-html.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit-element/lit-element.js","webpack://@silexlabs/grapesjs-data-source/./src/model/token.ts","webpack://@silexlabs/grapesjs-data-source/./src/datasources/graphql-introspection-query.ts","webpack://@silexlabs/grapesjs-data-source/./src/datasources/GraphQL.ts","webpack://@silexlabs/grapesjs-data-source/./src/model/dataSourceRegistry.ts","webpack://@silexlabs/grapesjs-data-source/./src/utils.ts","webpack://@silexlabs/grapesjs-data-source/./src/model/DataTree.ts","webpack://@silexlabs/grapesjs-data-source/./src/filters/liquid.ts","webpack://@silexlabs/grapesjs-data-source/./src/model/queryBuilder.ts","webpack://@silexlabs/grapesjs-data-source/./src/model/previewDataLoader.ts","webpack://@silexlabs/grapesjs-data-source/./src/model/dataSourceManager.ts","webpack://@silexlabs/grapesjs-data-source/./src/commands.ts","webpack://@silexlabs/grapesjs-data-source/./src/storage.ts","webpack://@silexlabs/grapesjs-data-source/./src/view/defaultStyles.ts","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit/node_modules/lit-html/directive-helpers.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit/node_modules/lit-html/directive.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit/node_modules/lit-html/async-directive.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit/node_modules/lit-html/directives/ref.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit/node_modules/lit-html/directives/repeat.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/@lit/reactive-element/decorators/property.js","webpack://@silexlabs/grapesjs-data-source/./src/view/settings.ts","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit/node_modules/lit-html/directives/class-map.js","webpack://@silexlabs/grapesjs-data-source/../expression-input/dist/styles.js","webpack://@silexlabs/grapesjs-data-source/../expression-input/dist/input-chain.js","webpack://@silexlabs/grapesjs-data-source/../expression-input/dist/expression-input.js","webpack://@silexlabs/grapesjs-data-source/../expression-input/dist/popin-overlay.js","webpack://@silexlabs/grapesjs-data-source/../expression-input/dist/popin-form.js","webpack://@silexlabs/grapesjs-data-source/../../node_modules/lit/node_modules/lit-html/directives/style-map.js","webpack://@silexlabs/grapesjs-data-source/./src/model/completion.ts","webpack://@silexlabs/grapesjs-data-source/./src/view/state-editor.ts","webpack://@silexlabs/grapesjs-data-source/./src/view/properties-editor.ts","webpack://@silexlabs/grapesjs-data-source/./src/view/custom-states-editor.ts","webpack://@silexlabs/grapesjs-data-source/./src/view/canvas.ts","webpack://@silexlabs/grapesjs-data-source/./src/view/index.ts","webpack://@silexlabs/grapesjs-data-source/./src/api.ts","webpack://@silexlabs/grapesjs-data-source/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@silexlabs/grapesjs-data-source\"] = factory();\n\telse\n\t\troot[\"@silexlabs/grapesjs-data-source\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ","module.exports = function dedent(templateStrings) {\r\n    var values = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        values[_i - 1] = arguments[_i];\r\n    }\r\n    var matches = [];\r\n    var strings = typeof templateStrings === 'string' ? [templateStrings] : templateStrings.slice();\r\n    // 1. Remove trailing whitespace.\r\n    strings[strings.length - 1] = strings[strings.length - 1].replace(/\\r?\\n([\\t ]*)$/, '');\r\n    // 2. Find all line breaks to determine the highest common indentation level.\r\n    for (var i = 0; i < strings.length; i++) {\r\n        var match = void 0;\r\n        if (match = strings[i].match(/\\n[\\t ]+/g)) {\r\n            matches.push.apply(matches, match);\r\n        }\r\n    }\r\n    // 3. Remove the common indentation from all strings.\r\n    if (matches.length) {\r\n        var size = Math.min.apply(Math, matches.map(function (value) { return value.length - 1; }));\r\n        var pattern = new RegExp(\"\\n[\\t ]{\" + size + \"}\", 'g');\r\n        for (var i = 0; i < strings.length; i++) {\r\n            strings[i] = strings[i].replace(pattern, '\\n');\r\n        }\r\n    }\r\n    // 4. Remove leading whitespace.\r\n    strings[0] = strings[0].replace(/^\\r?\\n/, '');\r\n    // 5. Perform interpolation.\r\n    var string = strings[0];\r\n    for (var i = 0; i < values.length; i++) {\r\n        string += values[i] + strings[i + 1];\r\n    }\r\n    return string;\r\n};\r\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { Component, Editor } from 'grapesjs'\nimport { TemplateResult } from 'lit'\nimport { DataSourceManagerState } from './model/dataSourceManager'\nimport { Button } from 'grapesjs'\n\n\nexport interface DataSourceEditorViewOptions {\n  el?: HTMLElement | string | undefined | (() => HTMLElement)\n  settingsEl?: HTMLElement | string | (() => HTMLElement)\n  button?: Button | (() => Button)\n  styles?: string\n  optionsStyles?: string\n  defaultFixed?: boolean\n  disableStates?: boolean\n  disableAttributes?: boolean\n  disableProperties?: boolean\n}\n\n/**\n * Options for the DataSourceEditor plugin\n */\nexport interface DataSourceEditorOptions {\n  dataSources: IDataSourceOptions[],\n  view: DataSourceEditorViewOptions,\n  filters: Filter[] | string,\n  previewActive: boolean,\n}\n\n// Queries\nexport type PageId = string // GrapesJs page id type\nexport interface Query {\n  expression: Expression\n}\n\n/**\n * Tree structure for creating query from components states\n */\nexport interface Tree {\n  token: Property\n  children: Tree[]\n}\n\n// Data sources must implement this interface\nexport type DataSourceId = string | number\nexport interface IDataSource {\n  // For reference in expressions\n  id: DataSourceId\n  \n  // Basic properties\n  label: string\n  url: string\n  type: DataSourceType\n  method?: string\n  headers?: Record<string, string>\n\n  // Hide from users settings\n  hidden?: boolean\n  readonly?: boolean\n\n  // Initialization\n  connect(): Promise<void>\n  isConnected(): boolean\n\n  // Introspection\n  getTypes(): Type[]\n  getQueryables(): Field[]\n  getQuery(trees: Tree[]): string\n\n  // Access data\n  fetchValues(query: string): Promise<unknown>\n  \n  // Event handling\n  on?(event: any, callback?: any, context?: any): any\n  off?(event?: any, callback?: any, context?: any): any\n  trigger?(event: any, ...args: unknown[]): any\n}\nexport const DATA_SOURCE_READY = 'data-source:ready'\nexport const DATA_SOURCE_ERROR = 'data-source:error'\nexport const DATA_SOURCE_CHANGED = 'data-source:changed'\nexport const COMPONENT_STATE_CHANGED = 'component:state:changed'\nexport const COMMAND_REFRESH = 'data-source:refresh'\nexport const COMMAND_PREVIEW_ACTIVATE = 'data-source:preview:activate'\nexport const COMMAND_PREVIEW_DEACTIVATE = 'data-source:preview:deactivate'\nexport const COMMAND_PREVIEW_REFRESH = 'data-source:preview:refresh'\nexport const DATA_SOURCE_DATA_LOAD_START = 'data-source:data-load:start'\nexport const DATA_SOURCE_DATA_LOAD_END = 'data-source:data-load:end'\nexport const DATA_SOURCE_DATA_LOAD_CANCEL= 'data-source:data-load:cancel'\n\n\nexport type DataSourceType = 'graphql'\n\n// Options of a data source\nexport interface IDataSourceOptions {\n  id: DataSourceId\n  label: string\n  type: DataSourceType\n  readonly?: boolean\n}\n\n// Types\nexport type TypeId = string\nexport type Type = {\n  id: TypeId\n  label: string\n  fields: Field[]\n  dataSourceId?: DataSourceId // Not required for builtin types\n}\n\n// From https://graphql.org/graphql-js/basic-types/\nexport const builtinTypeIds = ['String', 'Int', 'Float', 'Boolean', 'ID', 'Unknown']\nexport const builtinTypes: Type[] = builtinTypeIds.map(id => ({\n  id,\n  label: id,\n  fields: [],\n}))\n\n// Fileds\nexport type FieldId = string\nexport type FieldKind = 'scalar' | 'object' | 'list' | 'unknown'\nexport interface FieldArgument {\n  name: string\n  typeId: TypeId\n  defaultValue?: unknown\n}\nexport interface Field {\n  id: FieldId\n  label: string\n  typeIds: TypeId[]\n  kind: FieldKind\n  dataSourceId?: DataSourceId\n  arguments?: FieldArgument[]\n  previewIndex?: number\n}\n\n// **\n// Data tree\n/**\n * A token can be a property or a filter\n */\nexport type Token = Property | Filter | State\n\n/**\n * Stored tokens are how the tokens are stored in the component as JSON\n * Use DataTree#fromStored to convert them back to tokens\n */\nexport type StoredToken = StoredProperty | StoredFilter | State\nexport type Options = Record<string, unknown>\n\n/**\n * A property is used to make expressions and access data from the data source\n */\nexport interface BaseProperty {\n  type: 'property'\n  propType: /*'type' |*/ 'field'\n  dataSourceId?: DataSourceId\n}\n\nexport type PropertyOptions = Record<string, unknown>\nexport interface StoredProperty extends BaseProperty {\n  typeIds: TypeId[]\n  fieldId: FieldId\n  label: string\n  kind: FieldKind\n  options?: PropertyOptions\n  previewIndex?: number\n}\nexport interface Property extends StoredProperty {\n  optionsForm?: (selected: Component, input: Field | null, options: Options, stateName: string) => TemplateResult | null\n}\n\n/**\n * A filter is used to alter data in an expression\n * It is provided in the options\n */\nexport type FilterId = string\nexport interface StoredFilter {\n  type: 'filter'\n  id: FilterId\n  filterName?: FilterId // Override the id for the filter name if present\n  label: string\n  options: Options\n  quotedOptions?: string[]\n  optionsKeys?: string[] // Optional, used to set a specific order\n  previewIndex?: number\n}\nexport interface Filter extends StoredFilter {\n  optionsForm?: (selected: Component, input: Field | null, options: Options, stateName: string) => TemplateResult | null\n  validate: (input: Field | null) => boolean\n  output: (input: Field | null, options: Options) => Field | null\n  apply: (input: unknown, options: Options) => unknown\n}\n\n/**\n * A component state\n */\nexport type StateId = string\nexport interface State {\n  type: 'state'\n  storedStateId: StateId // Id of the state stored in the component\n  previewIndex?: number\n  label: string\n  componentId: string\n  exposed: boolean\n  forceKind?: FieldKind\n}\n\n///**\n// * A fixed value\n// */\n//export interface Fixed extends Step {\n//  type: 'fixed'\n//  options: {\n//    value: string\n//    inpuType: FixedType\n//  }\n//}\n\n/**\n * A context is a list of available tokens for a component\n */\nexport type Context = Token[]\n\n\n/**\n * An expression is a list of tokens which can be evaluated to a value\n * It is used to access data from the data source\n */\nexport type Expression = StoredToken[]\n\n/**\n * Operators for condition in visibility property\n */\nexport enum UnariOperator {\n  TRUTHY = 'truthy',\n  FALSY = 'falsy',\n  EMPTY_ARR = 'empty array',\n  NOT_EMPTY_ARR = 'not empty array',\n}\n\n/**\n * Operators for condition in visibility property\n */\nexport enum BinariOperator {\n  EQUAL = '==',\n  NOT_EQUAL = '!=',\n  GREATER_THAN = '>',\n  LESS_THAN = '<',\n  GREATER_THAN_OR_EQUAL = '>=',\n  LESS_THAN_OR_EQUAL = '<=',\n}\n\n/**\n * Properties of elements\n * What is not a property is an attribute or a state\n */\nexport enum Properties {\n  innerHTML = 'innerHTML',\n  condition = 'condition',\n  condition2 = 'condition2',\n  __data = '__data',\n}\n\nexport interface ComponentExpression {\n  expression: Expression\n  component: Component\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { Component, Editor } from 'grapesjs'\nimport { Expression, StateId, State } from '../types'\n\n/**\n * @fileoverview This file contains the model for components states\n * A state is a value which can be used in expressions\n * If exported it will be available in the context of child components\n */\n\n// Keys to store the states in the component\nconst EXPORTED_STATES_KEY = 'publicStates'\nconst PRIVATE_STATES_KEY = 'privateStates'\n\n/**\n * Persistant ID is used to identify a component reliably\n * It will be stored with the website data\n */\nconst PERSISTANT_ID_KEY = 'id-plugin-data-source'\n\n/**\n * Override the prefix of state names\n */\nexport const COMPONENT_NAME_PREFIX = 'nameForDataSource'\n\n/**\n * Types\n */\nexport interface StoredState {\n  label?: string\n  hidden?: boolean\n  expression: Expression\n}\n\nexport interface StoredStateWithId extends StoredState {\n  id: StateId\n}\n\nexport type PersistantId = string\n\n/**\n * Get the persistant ID of a component\n */\nexport function getPersistantId(component: Component): PersistantId | null {\n  return component.get(PERSISTANT_ID_KEY) ?? null\n}\n\n/**\n * Get the persistant ID of a component and create it if it does not exist\n */\nexport function getOrCreatePersistantId(component: Component): PersistantId {\n  const persistantId = component.get(PERSISTANT_ID_KEY)\n  if(persistantId) return persistantId\n  const newPersistantId = `${component.ccid}-${Math.round(Math.random() * 10000)}` as PersistantId\n  component.set(PERSISTANT_ID_KEY, newPersistantId)\n  return newPersistantId\n}\n\n/**\n * Find a component by its persistant ID in the current page\n */\nexport function getComponentByPersistentId(id: PersistantId, editor: Editor): Component | null {\n  const pages = editor.Pages.getAll()\n  for(const page of pages) {\n    const body = page.getMainComponent()\n    const component = getChildByPersistantId(id, body)\n    if(component) return component\n  }\n  return null\n}\n\n/**\n * Find a component by its persistant ID in\n */\nexport function getChildByPersistantId(id: PersistantId, parent: Component): Component | null {\n  if(getPersistantId(parent) === id) return parent\n  for(const child of parent.components()) {\n    const component = getChildByPersistantId(id, child)\n    if(component) return component\n  }\n  return null\n}\n\n/**\n * Find a component by its persistant ID in the current page\n */\nexport function getParentByPersistentId(id: PersistantId, component: Component | undefined): Component | null {\n  if(!component) return null\n  if(getPersistantId(component) === id) return component\n  return getParentByPersistentId(id, component.parent())\n}\n\n/**\n * Get the display name of a state\n */\nexport function getStateDisplayName(child: Component, state: State): string {\n  const component = getParentByPersistentId(state.componentId, child)\n  //const name = component?.getName() ?? '[Not found]'\n  const prefix = component?.get(COMPONENT_NAME_PREFIX) ?? '' // `${name}'s`\n  return  `${prefix ? prefix + ' ' : ''}${state.label || state.storedStateId}`\n}\n\n/**\n * Callbacks called when a state is changed\n * @returns A function to remove the callback\n */\nconst _callbacks: ((state: StoredState | null, component: Component) => void)[] = []\nexport function onStateChange(callback: (state: StoredState | null, component: Component) => void): () => void {\n  _callbacks.push(callback)\n  return () => {\n    const index = _callbacks.indexOf(callback)\n    if(index >= 0) _callbacks.splice(index, 1)\n  }\n}\nfunction fireChange(state: StoredState | null, component: Component) {\n  _callbacks.forEach(callback => callback(state, component))\n}\n\n/**\n * List all exported states\n */\nexport function getStateIds(component: Component, exported: boolean = true, before?: StateId): StateId[] {\n  try {\n    const states = component.get(exported ? EXPORTED_STATES_KEY : PRIVATE_STATES_KEY) as StoredStateWithId[] ?? []\n    const allStates = states\n      .sort(a => a.hidden ? -1 : 0) // Hidden states first\n      .map(state => state.id)\n    if(before) {\n      const index = allStates.indexOf(before)\n      if(index < 0) return allStates\n      return allStates.slice(0, index)\n    }\n    return allStates\n  } catch(e) {\n    // this happens when the old deprecated state system is used\n    console.error('Error while getting state ids', e)\n    return []\n  }\n}\n\n/**\n * List all exported states\n */\nexport function getStates(component: Component, exported: boolean = true): StoredState[] {\n  const states = component.get(exported ? EXPORTED_STATES_KEY : PRIVATE_STATES_KEY) as StoredStateWithId[] ?? []\n  return states.map(state => ({\n    label: state.label,\n    hidden: state.hidden,\n    expression: state.expression,\n  }))\n}\n\n/**\n * Get the name of a state variable\n * Useful to generate code\n */\nexport function getStateVariableName(componentId: string, stateId: StateId): string {\n  return `state_${ componentId }_${ stateId }`\n}\n\n/**\n * Get a state\n */\nexport function getState(component: Component, id: StateId, exported: boolean = true): StoredState | null {\n  const states = component.get(exported ? EXPORTED_STATES_KEY : PRIVATE_STATES_KEY) as StoredStateWithId[] ?? []\n  const state = states.find(state => state.id === id) ?? null\n  if(!state) {\n    return null\n  }\n  return {\n    label: state.label,\n    hidden: state.hidden,\n    expression: state.expression,\n  }\n}\n\n/**\n * Set a state\n * The state will be updated or created at the end of the list\n * Note: index is not used in this project anymore (maybe in apps using this plugins)\n */\nexport function setState(component: Component, id: StateId, state: StoredState, exported = true, index = -1): void {\n  const key = exported ? EXPORTED_STATES_KEY : PRIVATE_STATES_KEY\n  const states = component.get(key) as StoredStateWithId[] ?? []\n  const existing = states.find(s => s.id === id) ?? null\n  if(existing) {\n    component.set(key, states.map(s => s.id !== id ? s : {\n      id,\n      ...state,\n    }))\n  } else {\n    component.set(key, [\n      ...states,\n      {\n        id,\n        ...state,\n      }\n    ])\n  }\n  // Set the index if needed\n  if(index >= 0) {\n    const states = [...component.get(key) as StoredStateWithId[]]\n    const state = states.find(s => s.id === id)\n    if(state && index < states.length) {\n      states.splice(states.indexOf(state), 1)\n      states.splice(index, 0, state)\n      component.set(key, states)\n    }\n  }\n  // Notify the change\n  fireChange({\n    label: state.label,\n    hidden: state.hidden,\n    expression: state.expression,\n  }, component)\n}\n\n/**\n * Remove a state\n */\nexport function removeState(component: Component, id: StateId, exported: boolean = true): void {\n  const key = exported ? EXPORTED_STATES_KEY : PRIVATE_STATES_KEY\n  const states = component.get(key) as StoredStateWithId[] ?? []\n  const newStates = states.filter(s => s.id !== id)\n  component.set(key, newStates)\n  fireChange(null, component)\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,e=t.ShadowRoot&&(void 0===t.ShadyCSS||t.ShadyCSS.nativeShadow)&&\"adoptedStyleSheets\"in Document.prototype&&\"replace\"in CSSStyleSheet.prototype,s=Symbol(),o=new WeakMap;class n{constructor(t,e,o){if(this._$cssResult$=!0,o!==s)throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");this.cssText=t,this.t=e}get styleSheet(){let t=this.o;const s=this.t;if(e&&void 0===t){const e=void 0!==s&&1===s.length;e&&(t=o.get(s)),void 0===t&&((this.o=t=new CSSStyleSheet).replaceSync(this.cssText),e&&o.set(s,t))}return t}toString(){return this.cssText}}const r=t=>new n(\"string\"==typeof t?t:t+\"\",void 0,s),i=(t,...e)=>{const o=1===t.length?t[0]:e.reduce(((e,s,o)=>e+(t=>{if(!0===t._$cssResult$)return t.cssText;if(\"number\"==typeof t)return t;throw Error(\"Value passed to 'css' function must be a 'css' function result: \"+t+\". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\")})(s)+t[o+1]),t[0]);return new n(o,t,s)},S=(s,o)=>{if(e)s.adoptedStyleSheets=o.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet));else for(const e of o){const o=document.createElement(\"style\"),n=t.litNonce;void 0!==n&&o.setAttribute(\"nonce\",n),o.textContent=e.cssText,s.appendChild(o)}},c=e?t=>t:t=>t instanceof CSSStyleSheet?(t=>{let e=\"\";for(const s of t.cssRules)e+=s.cssText;return r(e)})(t):t;export{n as CSSResult,S as adoptStyles,i as css,c as getCompatibleStyle,e as supportsAdoptingStyleSheets,r as unsafeCSS};\n//# sourceMappingURL=css-tag.js.map\n","import{getCompatibleStyle as t,adoptStyles as s}from\"./css-tag.js\";export{CSSResult,css,supportsAdoptingStyleSheets,unsafeCSS}from\"./css-tag.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{is:i,defineProperty:e,getOwnPropertyDescriptor:h,getOwnPropertyNames:r,getOwnPropertySymbols:o,getPrototypeOf:n}=Object,a=globalThis,c=a.trustedTypes,l=c?c.emptyScript:\"\",p=a.reactiveElementPolyfillSupport,d=(t,s)=>t,u={toAttribute(t,s){switch(s){case Boolean:t=t?l:null;break;case Object:case Array:t=null==t?t:JSON.stringify(t)}return t},fromAttribute(t,s){let i=t;switch(s){case Boolean:i=null!==t;break;case Number:i=null===t?null:Number(t);break;case Object:case Array:try{i=JSON.parse(t)}catch(t){i=null}}return i}},f=(t,s)=>!i(t,s),b={attribute:!0,type:String,converter:u,reflect:!1,useDefault:!1,hasChanged:f};Symbol.metadata??=Symbol(\"metadata\"),a.litPropertyMetadata??=new WeakMap;class y extends HTMLElement{static addInitializer(t){this._$Ei(),(this.l??=[]).push(t)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(t,s=b){if(s.state&&(s.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(t)&&((s=Object.create(s)).wrapped=!0),this.elementProperties.set(t,s),!s.noAccessor){const i=Symbol(),h=this.getPropertyDescriptor(t,i,s);void 0!==h&&e(this.prototype,t,h)}}static getPropertyDescriptor(t,s,i){const{get:e,set:r}=h(this.prototype,t)??{get(){return this[s]},set(t){this[s]=t}};return{get:e,set(s){const h=e?.call(this);r?.call(this,s),this.requestUpdate(t,h,i)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this.elementProperties.get(t)??b}static _$Ei(){if(this.hasOwnProperty(d(\"elementProperties\")))return;const t=n(this);t.finalize(),void 0!==t.l&&(this.l=[...t.l]),this.elementProperties=new Map(t.elementProperties)}static finalize(){if(this.hasOwnProperty(d(\"finalized\")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(d(\"properties\"))){const t=this.properties,s=[...r(t),...o(t)];for(const i of s)this.createProperty(i,t[i])}const t=this[Symbol.metadata];if(null!==t){const s=litPropertyMetadata.get(t);if(void 0!==s)for(const[t,i]of s)this.elementProperties.set(t,i)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const i=this._$Eu(t,s);void 0!==i&&this._$Eh.set(i,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(s){const i=[];if(Array.isArray(s)){const e=new Set(s.flat(1/0).reverse());for(const s of e)i.unshift(t(s))}else void 0!==s&&i.push(t(s));return i}static _$Eu(t,s){const i=s.attribute;return!1===i?void 0:\"string\"==typeof i?i:\"string\"==typeof t?t.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise((t=>this.enableUpdating=t)),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach((t=>t(this)))}addController(t){(this._$EO??=new Set).add(t),void 0!==this.renderRoot&&this.isConnected&&t.hostConnected?.()}removeController(t){this._$EO?.delete(t)}_$E_(){const t=new Map,s=this.constructor.elementProperties;for(const i of s.keys())this.hasOwnProperty(i)&&(t.set(i,this[i]),delete this[i]);t.size>0&&(this._$Ep=t)}createRenderRoot(){const t=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return s(t,this.constructor.elementStyles),t}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach((t=>t.hostConnected?.()))}enableUpdating(t){}disconnectedCallback(){this._$EO?.forEach((t=>t.hostDisconnected?.()))}attributeChangedCallback(t,s,i){this._$AK(t,i)}_$ET(t,s){const i=this.constructor.elementProperties.get(t),e=this.constructor._$Eu(t,i);if(void 0!==e&&!0===i.reflect){const h=(void 0!==i.converter?.toAttribute?i.converter:u).toAttribute(s,i.type);this._$Em=t,null==h?this.removeAttribute(e):this.setAttribute(e,h),this._$Em=null}}_$AK(t,s){const i=this.constructor,e=i._$Eh.get(t);if(void 0!==e&&this._$Em!==e){const t=i.getPropertyOptions(e),h=\"function\"==typeof t.converter?{fromAttribute:t.converter}:void 0!==t.converter?.fromAttribute?t.converter:u;this._$Em=e,this[e]=h.fromAttribute(s,t.type)??this._$Ej?.get(e)??null,this._$Em=null}}requestUpdate(t,s,i){if(void 0!==t){const e=this.constructor,h=this[t];if(i??=e.getPropertyOptions(t),!((i.hasChanged??f)(h,s)||i.useDefault&&i.reflect&&h===this._$Ej?.get(t)&&!this.hasAttribute(e._$Eu(t,i))))return;this.C(t,s,i)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(t,s,{useDefault:i,reflect:e,wrapped:h},r){i&&!(this._$Ej??=new Map).has(t)&&(this._$Ej.set(t,r??s??this[t]),!0!==h||void 0!==r)||(this._$AL.has(t)||(this.hasUpdated||i||(s=void 0),this._$AL.set(t,s)),!0===e&&this._$Em!==t&&(this._$Eq??=new Set).add(t))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const t=this.scheduleUpdate();return null!=t&&await t,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[t,s]of this._$Ep)this[t]=s;this._$Ep=void 0}const t=this.constructor.elementProperties;if(t.size>0)for(const[s,i]of t){const{wrapped:t}=i,e=this[s];!0!==t||this._$AL.has(s)||void 0===e||this.C(s,void 0,i,e)}}let t=!1;const s=this._$AL;try{t=this.shouldUpdate(s),t?(this.willUpdate(s),this._$EO?.forEach((t=>t.hostUpdate?.())),this.update(s)):this._$EM()}catch(s){throw t=!1,this._$EM(),s}t&&this._$AE(s)}willUpdate(t){}_$AE(t){this._$EO?.forEach((t=>t.hostUpdated?.())),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(t)),this.updated(t)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(t){return!0}update(t){this._$Eq&&=this._$Eq.forEach((t=>this._$ET(t,this[t]))),this._$EM()}updated(t){}firstUpdated(t){}}y.elementStyles=[],y.shadowRootOptions={mode:\"open\"},y[d(\"elementProperties\")]=new Map,y[d(\"finalized\")]=new Map,p?.({ReactiveElement:y}),(a.reactiveElementVersions??=[]).push(\"2.1.0\");export{y as ReactiveElement,s as adoptStyles,u as defaultConverter,t as getCompatibleStyle,f as notEqual};\n//# sourceMappingURL=reactive-element.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.0\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t=globalThis,i=t.trustedTypes,s=i?i.createPolicy(\"lit-html\",{createHTML:t=>t}):void 0,e=\"$lit$\",h=`lit$${Math.random().toFixed(9).slice(2)}$`,o=\"?\"+h,n=`<${o}>`,r=document,l=()=>r.createComment(\"\"),c=t=>null===t||\"object\"!=typeof t&&\"function\"!=typeof t,a=Array.isArray,u=t=>a(t)||\"function\"==typeof t?.[Symbol.iterator],d=\"[ \\t\\n\\f\\r]\",f=/<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g,v=/-->/g,_=/>/g,m=RegExp(`>|${d}(?:([^\\\\s\"'>=/]+)(${d}*=${d}*(?:[^ \\t\\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`,\"g\"),p=/'/g,g=/\"/g,$=/^(?:script|style|textarea|title)$/i,y=t=>(i,...s)=>({_$litType$:t,strings:i,values:s}),x=y(1),b=y(2),w=y(3),T=Symbol.for(\"lit-noChange\"),E=Symbol.for(\"lit-nothing\"),A=new WeakMap,C=r.createTreeWalker(r,129);function P(t,i){if(!a(t)||!t.hasOwnProperty(\"raw\"))throw Error(\"invalid template strings array\");return void 0!==s?s.createHTML(i):i}const V=(t,i)=>{const s=t.length-1,o=[];let r,l=2===i?\"<svg>\":3===i?\"<math>\":\"\",c=f;for(let i=0;i<s;i++){const s=t[i];let a,u,d=-1,y=0;for(;y<s.length&&(c.lastIndex=y,u=c.exec(s),null!==u);)y=c.lastIndex,c===f?\"!--\"===u[1]?c=v:void 0!==u[1]?c=_:void 0!==u[2]?($.test(u[2])&&(r=RegExp(\"</\"+u[2],\"g\")),c=m):void 0!==u[3]&&(c=m):c===m?\">\"===u[0]?(c=r??f,d=-1):void 0===u[1]?d=-2:(d=c.lastIndex-u[2].length,a=u[1],c=void 0===u[3]?m:'\"'===u[3]?g:p):c===g||c===p?c=m:c===v||c===_?c=f:(c=m,r=void 0);const x=c===m&&t[i+1].startsWith(\"/>\")?\" \":\"\";l+=c===f?s+n:d>=0?(o.push(a),s.slice(0,d)+e+s.slice(d)+h+x):s+h+(-2===d?i:x)}return[P(t,l+(t[s]||\"<?>\")+(2===i?\"</svg>\":3===i?\"</math>\":\"\")),o]};class N{constructor({strings:t,_$litType$:s},n){let r;this.parts=[];let c=0,a=0;const u=t.length-1,d=this.parts,[f,v]=V(t,s);if(this.el=N.createElement(f,n),C.currentNode=this.el.content,2===s||3===s){const t=this.el.content.firstChild;t.replaceWith(...t.childNodes)}for(;null!==(r=C.nextNode())&&d.length<u;){if(1===r.nodeType){if(r.hasAttributes())for(const t of r.getAttributeNames())if(t.endsWith(e)){const i=v[a++],s=r.getAttribute(t).split(h),e=/([.?@])?(.*)/.exec(i);d.push({type:1,index:c,name:e[2],strings:s,ctor:\".\"===e[1]?H:\"?\"===e[1]?I:\"@\"===e[1]?L:k}),r.removeAttribute(t)}else t.startsWith(h)&&(d.push({type:6,index:c}),r.removeAttribute(t));if($.test(r.tagName)){const t=r.textContent.split(h),s=t.length-1;if(s>0){r.textContent=i?i.emptyScript:\"\";for(let i=0;i<s;i++)r.append(t[i],l()),C.nextNode(),d.push({type:2,index:++c});r.append(t[s],l())}}}else if(8===r.nodeType)if(r.data===o)d.push({type:2,index:c});else{let t=-1;for(;-1!==(t=r.data.indexOf(h,t+1));)d.push({type:7,index:c}),t+=h.length-1}c++}}static createElement(t,i){const s=r.createElement(\"template\");return s.innerHTML=t,s}}function S(t,i,s=t,e){if(i===T)return i;let h=void 0!==e?s._$Co?.[e]:s._$Cl;const o=c(i)?void 0:i._$litDirective$;return h?.constructor!==o&&(h?._$AO?.(!1),void 0===o?h=void 0:(h=new o(t),h._$AT(t,s,e)),void 0!==e?(s._$Co??=[])[e]=h:s._$Cl=h),void 0!==h&&(i=S(t,h._$AS(t,i.values),h,e)),i}class M{constructor(t,i){this._$AV=[],this._$AN=void 0,this._$AD=t,this._$AM=i}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(t){const{el:{content:i},parts:s}=this._$AD,e=(t?.creationScope??r).importNode(i,!0);C.currentNode=e;let h=C.nextNode(),o=0,n=0,l=s[0];for(;void 0!==l;){if(o===l.index){let i;2===l.type?i=new R(h,h.nextSibling,this,t):1===l.type?i=new l.ctor(h,l.name,l.strings,this,t):6===l.type&&(i=new z(h,this,t)),this._$AV.push(i),l=s[++n]}o!==l?.index&&(h=C.nextNode(),o++)}return C.currentNode=r,e}p(t){let i=0;for(const s of this._$AV)void 0!==s&&(void 0!==s.strings?(s._$AI(t,s,i),i+=s.strings.length-2):s._$AI(t[i])),i++}}class R{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(t,i,s,e){this.type=2,this._$AH=E,this._$AN=void 0,this._$AA=t,this._$AB=i,this._$AM=s,this.options=e,this._$Cv=e?.isConnected??!0}get parentNode(){let t=this._$AA.parentNode;const i=this._$AM;return void 0!==i&&11===t?.nodeType&&(t=i.parentNode),t}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(t,i=this){t=S(this,t,i),c(t)?t===E||null==t||\"\"===t?(this._$AH!==E&&this._$AR(),this._$AH=E):t!==this._$AH&&t!==T&&this._(t):void 0!==t._$litType$?this.$(t):void 0!==t.nodeType?this.T(t):u(t)?this.k(t):this._(t)}O(t){return this._$AA.parentNode.insertBefore(t,this._$AB)}T(t){this._$AH!==t&&(this._$AR(),this._$AH=this.O(t))}_(t){this._$AH!==E&&c(this._$AH)?this._$AA.nextSibling.data=t:this.T(r.createTextNode(t)),this._$AH=t}$(t){const{values:i,_$litType$:s}=t,e=\"number\"==typeof s?this._$AC(t):(void 0===s.el&&(s.el=N.createElement(P(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===e)this._$AH.p(i);else{const t=new M(e,this),s=t.u(this.options);t.p(i),this.T(s),this._$AH=t}}_$AC(t){let i=A.get(t.strings);return void 0===i&&A.set(t.strings,i=new N(t)),i}k(t){a(this._$AH)||(this._$AH=[],this._$AR());const i=this._$AH;let s,e=0;for(const h of t)e===i.length?i.push(s=new R(this.O(l()),this.O(l()),this,this.options)):s=i[e],s._$AI(h),e++;e<i.length&&(this._$AR(s&&s._$AB.nextSibling,e),i.length=e)}_$AR(t=this._$AA.nextSibling,i){for(this._$AP?.(!1,!0,i);t&&t!==this._$AB;){const i=t.nextSibling;t.remove(),t=i}}setConnected(t){void 0===this._$AM&&(this._$Cv=t,this._$AP?.(t))}}class k{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(t,i,s,e,h){this.type=1,this._$AH=E,this._$AN=void 0,this.element=t,this.name=i,this._$AM=e,this.options=h,s.length>2||\"\"!==s[0]||\"\"!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=E}_$AI(t,i=this,s,e){const h=this.strings;let o=!1;if(void 0===h)t=S(this,t,i,0),o=!c(t)||t!==this._$AH&&t!==T,o&&(this._$AH=t);else{const e=t;let n,r;for(t=h[0],n=0;n<h.length-1;n++)r=S(this,e[s+n],i,n),r===T&&(r=this._$AH[n]),o||=!c(r)||r!==this._$AH[n],r===E?t=E:t!==E&&(t+=(r??\"\")+h[n+1]),this._$AH[n]=r}o&&!e&&this.j(t)}j(t){t===E?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,t??\"\")}}class H extends k{constructor(){super(...arguments),this.type=3}j(t){this.element[this.name]=t===E?void 0:t}}class I extends k{constructor(){super(...arguments),this.type=4}j(t){this.element.toggleAttribute(this.name,!!t&&t!==E)}}class L extends k{constructor(t,i,s,e,h){super(t,i,s,e,h),this.type=5}_$AI(t,i=this){if((t=S(this,t,i,0)??E)===T)return;const s=this._$AH,e=t===E&&s!==E||t.capture!==s.capture||t.once!==s.once||t.passive!==s.passive,h=t!==E&&(s===E||e);e&&this.element.removeEventListener(this.name,this,s),h&&this.element.addEventListener(this.name,this,t),this._$AH=t}handleEvent(t){\"function\"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,t):this._$AH.handleEvent(t)}}class z{constructor(t,i,s){this.element=t,this.type=6,this._$AN=void 0,this._$AM=i,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(t){S(this,t)}}const Z={M:e,P:h,A:o,C:1,L:V,R:M,D:u,V:S,I:R,H:k,N:I,U:L,B:H,F:z},j=t.litHtmlPolyfillSupport;j?.(N,R),(t.litHtmlVersions??=[]).push(\"3.3.0\");const B=(t,i,s)=>{const e=s?.renderBefore??i;let h=e._$litPart$;if(void 0===h){const t=s?.renderBefore??null;e._$litPart$=h=new R(i.insertBefore(l(),t),t,void 0,s??{})}return h._$AI(t),h};export{Z as _$LH,x as html,w as mathml,T as noChange,E as nothing,B as render,b as svg};\n//# sourceMappingURL=lit-html.js.map\n","import{ReactiveElement as t}from\"@lit/reactive-element\";export*from\"@lit/reactive-element\";import{render as e,noChange as r}from\"lit-html\";export*from\"lit-html\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=globalThis;class i extends t{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const t=super.createRenderRoot();return this.renderOptions.renderBefore??=t.firstChild,t}update(t){const r=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=e(r,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return r}}i._$litElement$=!0,i[\"finalized\"]=!0,s.litElementHydrateSupport?.({LitElement:i});const o=s.litElementPolyfillSupport;o?.({LitElement:i});const n={_$AK:(t,e,r)=>{t._$AK(e,r)},_$AL:t=>t._$AL};(s.litElementVersions??=[]).push(\"4.2.0\");export{i as LitElement,n as _$LE};\n//# sourceMappingURL=lit-element.js.map\n","import { Component } from 'grapesjs'\nimport { Expression, Field, FieldArgument, Filter, Options, Property, PropertyOptions, StoredToken, Token, Type, TypeId } from '../types'\nimport { DataTree } from './DataTree'\nimport { getParentByPersistentId, getState } from './state'\nimport { TemplateResult, html } from 'lit'\n\n/**\n * Add missing methonds to the filter\n * When filters are stored they lose their methods\n * @throws Error if the filter is not found\n */\nexport function getFilterFromToken(token: Filter, filters: Filter[]): Filter {\n  if(token.type !== 'filter') throw new Error('Token is not a filter')\n  const filter = filters.find(filter => filter.id === token.id)\n  if (!filter) {\n    console.error('Filter not found', token)\n    throw new Error(`Filter ${token.id} not found`)\n  }\n  return {\n    ...token,\n    ...filter,\n    // Keep the options as they are stored\n    options: token.options,\n  }\n}\n\n/**\n * Get the token from its stored form\n * @throws Error if the token type is not found\n */\nexport function fromStored<T extends Token = Token>(token: StoredToken, dataTree: DataTree, componentId: string | null): T {\n  switch (token.type) {\n  case 'filter': {\n    if ((token as Filter).optionsForm) return token as T\n    const original = dataTree.filters.find(filter => filter.id === token.id) as T | undefined\n    if (!original) {\n      console.error('Filter not found', token)\n      throw new Error(`Filter ${token.id} not found`)\n    }\n    return {\n      ...original,\n      ...token,\n    } as T\n  }\n  case 'property': {\n    if ((token as Property).optionsForm) return token as T\n    const field = propertyToField(token, dataTree, componentId)\n    if (!field) {\n      console.error('Field not found for token', token)\n      throw new Error(`Field ${token.fieldId} not found`)\n    }\n    return {\n      ...getTokenOptions(field) ?? {},\n      ...token,\n    } as T\n  }\n  case 'state':\n    return token as T\n  default:\n    console.error('Unknown token type (reading type)', token)\n    throw new Error('Unknown token type')\n  }\n}\n\n/**\n * Get the type corresponding to a token\n */\nexport function tokenToField(token: Token, prev: Field | null, component: Component, dataTree: DataTree): Field | null {\n  switch (token.type) {\n  case 'filter': {\n    try {\n      const filter = getFilterFromToken(token, dataTree.filters)\n      try {\n        if (filter.validate(prev)) {\n          return filter.output(prev, filter.options ?? {})\n        }\n      } catch (e) {\n        console.warn('Filter validate error:', e, {token, prev})\n        return null\n      }\n      return null\n    } catch {\n      // FIXME: notify user\n      console.error('Error while getting filter result type', {token, prev, component, dataTree})\n      return null\n    }\n  }\n  case 'property':\n    try {\n      return propertyToField(token, dataTree, component.getId())\n    } catch {\n      // FIXME: notify user\n      console.error('Error while getting property result type', {token, component, dataTree})\n      return null\n    }\n  case 'state': {\n    const parent = getParentByPersistentId(token.componentId, component)\n    if (!parent) {\n      console.warn('Component not found for state', token)\n      // TODO: notification\n      return null\n    }\n    const expression = getState(parent, token.storedStateId, token.exposed)?.expression\n    if (!expression) {\n      console.warn('State is not defined on component', { component: parent, token })\n      // TODO: notification\n      return null\n    }\n    try {\n      const field = getExpressionResultType(expression, parent, dataTree)\n      return field ? {\n        ...field,\n        kind: token.forceKind ?? field.kind,\n      } : null\n    } catch {\n      // FIXME: notify user\n      console.error('Error while getting expression result type in tokenToField', {expression, parent, dataTree, component, token, prev})\n      return null\n    }\n  }\n  default:\n    console.error('Unknown token type (reading type)', token)\n    throw new Error('Unknown token type')\n  }\n}\n\n/**\n * Get the type corresponding to a property\n * @throws Error if the type is not found\n */\nexport function propertyToField(property: Property, dataTree: DataTree, componentId: string | null): Field {\n  const typeNames = property.typeIds\n    .map((typeId: TypeId) => dataTree.getType(typeId, property.dataSourceId ?? null, componentId))\n    .map((type: Type | null) => type?.label)\n\n  const args = property.options ? Object.entries(property.options).map(([name, value]) => ({\n    typeId: 'JSON', // FIXME: Why is this hardcoded?\n    name,\n    defaultValue: value, // FIXME: Why is this value, it should keep the inital default\n  })) : undefined\n  return {\n    id: property.fieldId,\n    label: typeNames.join(', '),\n    typeIds: property.typeIds,\n    kind: property.kind,\n    dataSourceId: property.dataSourceId,\n    arguments: args,\n    previewIndex: property.previewIndex,\n  }\n}\n\n/**\n * Evaluate the types of each token in an expression\n */\nexport function expressionToFields(expression: Expression, component: Component, dataTree: DataTree): Field[] {\n  // Resolve type of the expression 1 step at a time\n  let prev: Field | null = null\n  const unknownField: Field = {\n    id: 'unknown',\n    label: 'unknown',\n    typeIds: [],\n    kind: 'scalar',\n  }\n  return expression.map((token) => {\n    try {\n      const field = tokenToField(fromStored(token, dataTree, component.getId()), prev, component, dataTree)\n      if (!field) {\n        console.warn('Type not found for token in expressionToFields', { token, expression })\n        return unknownField\n      }\n      prev = field\n      return field\n    } catch {\n      // FIXME: notify user\n      console.error('Error while getting expression result type in expressionToFields', {expression, component, dataTree, token, prev})\n      return unknownField\n    }\n  })\n}\n\n/**\n * Evaluate an expression to a type\n * This is used to validate expressions and for autocompletion\n * @throws Error if the token type is not found\n */\nexport function getExpressionResultType(expression: Expression, component: Component, dataTree: DataTree): Field | null {\n  // Resolve type of the expression 1 step at a time\n  return expression.reduce((prev: Field | null, token: StoredToken) => {\n    return tokenToField(fromStored(token, dataTree, component.getId()), prev, component, dataTree)\n  }, null)\n}\n\n/**\n * Get the options of a token\n */\nexport function getTokenOptions(field: Field): { optionsForm: (selected: Component, input: Field | null, options: Options) => TemplateResult, options: Options } | null {\n  if (field.arguments && field.arguments.length > 0) {\n    return {\n      optionsForm: optionsToOptionsForm(field.arguments.map((arg) => ({ name: arg.name, value: arg.defaultValue }))),\n      options: field.arguments.reduce((options: Record<string, unknown>, arg: FieldArgument) => {\n        options[arg.name] = arg.defaultValue\n        return options\n      }, {}),\n    }\n  }\n  return null\n}\n\n/**\n * Get the options of a token or a field\n */\nexport function optionsToOptionsForm(arr: { name: string, value: unknown }[]): (selected: Component, input: Field | null, options: Options) => TemplateResult {\n  return (selected: Component, input: Field | null, options: Options) => {\n    return html`\n              ${arr.map((obj) => {\n    const value = options[obj.name] ?? obj.value ?? ''\n    return html`<label>${obj.name}</label><input type=\"text\" name=${obj.name} .value=${value}>`\n  })\n}\n          `\n  }\n}\n\n/**\n * Utility function to shallow compare two objects\n * Used to compare options of tree items\n */\nexport function getOptionObject(option1: PropertyOptions | undefined, option2: PropertyOptions | undefined): { error: boolean, result: PropertyOptions | undefined } {\n  // Handle the case where one or both are undefined or empty\n  if(!option1 && !option2) return { error: false, result: undefined }\n  if(isEmpty(option1) && isEmpty(option2)) return { error: false, result: undefined }\n  // Handle the case where one is undefined or empty and the other is not\n  if(!option1 || !option2) return { error: true, result: undefined }\n  if(isEmpty(option1) || isEmpty(option2)) return { error: true, result: undefined }\n\n  const keys1 = Object.keys(option1)\n  const keys2 = Object.keys(option2)\n\n  if (keys1.length !== keys2.length) {\n    return { error: true, result: undefined }\n  }\n\n  for (const key of keys1) {\n    if (option1[key] !== option2[key]) {\n      return { error: true, result: undefined }\n    }\n  }\n\n  return { error: false, result: option1 }\n}\n\nfunction isJson(str: string) {\n  if(typeof str !== 'string') return false\n  if(str.length === 0) return false\n  try {\n    JSON.parse(str)\n  } catch {\n    return false\n  }\n  return true\n}\n\nfunction isEmpty(value: unknown): boolean {\n  if(value === null || typeof value === 'undefined') return true\n  const isString = typeof value === 'string'\n  const isJsonString = isString && isJson(value)\n  if (isString && !isJsonString) return value === ''\n  const json = isJsonString ? JSON.parse(value) : value\n  if (Array.isArray(json)) return json.length === 0\n  if (typeof json === 'object') return Object.values(json).filter(v => !!v).length === 0\n  return false\n}\n\nexport function buildArgs(options: PropertyOptions | undefined): string {\n  const args = options ? `(${Object\n    .keys(options)\n    .map(key => ({ key, value: options![key] }))\n    .filter(({ value }) => !isEmpty(value))\n    .map(({ key, value }) => {\n      //return typeof value === 'string' && !isJson(value) ? `${key}: \"${value}\"` : `${key}: ${value}`\n      return `${key}: ${value}`\n    })\n    .join(', ')\n  })` : ''\n  // Valid args for GraphQL canot be just ()\n  const validArgs = args === '()' ? '' : args\n  return validArgs\n}\n","export default `\n  query IntrospectionQuery {\n    __schema {\n      queryType {\n        name\n      }\n      types {\n        ...FullType\n      }\n    }\n  }\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n  fragment InputValue on __InputValue {\n    name\n    description\n    type {\n      ...TypeRef\n    }\n    defaultValue\n  }\n  fragment TypeRef on __Type {\n    kind\n    name\n    possibleTypes {\n      kind\n      name\n    }\n    ofType {\n      kind\n      name\n      possibleTypes {\n        kind\n        name\n      }\n      ofType {\n        kind\n        name\n        possibleTypes {\n          kind\n          name\n        }\n        ofType {\n          kind\n          name\n          possibleTypes {\n            kind\n            name\n          }\n          ofType {\n            kind\n            name\n            possibleTypes {\n              kind\n              name\n            }\n            ofType {\n              kind\n              name\n              possibleTypes {\n                kind\n                name\n              }\n              ofType {\n                kind\n                name\n                possibleTypes {\n                  kind\n                  name\n                }\n                ofType {\n                  kind\n                  name\n                  possibleTypes {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { IDataSourceOptions, Type, Field, Tree, TypeId, IDataSource, DATA_SOURCE_ERROR, builtinTypeIds, builtinTypes, FieldKind, DATA_SOURCE_READY, DATA_SOURCE_CHANGED } from '../types'\nimport graphqlIntrospectionQuery from './graphql-introspection-query'\nimport dedent from 'dedent-js'\nimport { FIXED_TOKEN_ID } from '../utils'\nimport { buildArgs } from '../model/token'\n\n/**\n * @fileoverview GraphQL DataSource implementation\n */\n\n/**\n * GraphQL Data source options\n */\ninterface GraphQLQueryOptions {\n  url: string\n  headers: Record<string, string>\n  method: 'GET' | 'POST'\n  queryable?: TypeId[]\n  readonly?: boolean\n}\n\n/**\n * GraphQL Data source options with server to server options\n */\nexport interface GraphQLOptions extends GraphQLQueryOptions, IDataSourceOptions {\n  serverToServer?: GraphQLQueryOptions\n  hidden?: boolean\n}\n\n// GraphQL specific types\n// Exported for unit tests\nexport type GQLKind = 'SCALAR' | 'OBJECT' | 'LIST' | 'NON_NULL' | 'UNION'\n\nexport interface GQLOfType {\n  name?: string,\n  kind: GQLKind,\n  ofType?: GQLOfType,\n  possibleTypes?: {name: string, kind: GQLKind}[],\n}\nexport interface GQLField {\n  name: string,\n  type: GQLOfType,\n  args?: {\n    name: string,\n    type: GQLOfType,\n    defaultValue?: string,\n  }[],\n}\nexport interface GQLType {\n  name: string,\n  fields: GQLField[],\n}\n\n/**\n * GraphQL DataSource implementation\n * Simple JS object that implements IDataSource interface\n */\nexport default class GraphQL implements IDataSource {\n  id: string\n  label: string\n  url: string\n  type = 'graphql' as const\n  method: 'GET' | 'POST' = 'POST'\n  headers: Record<string, string> = {}\n  queryable?: TypeId[]\n  readonly?: boolean\n  hidden?: boolean\n\n  protected types: Type[] = []\n  protected queryables: Field[] = []\n  protected queryType: string = ''\n  protected ready = false\n  private eventListeners: Record<string, ((...args: unknown[]) => void)[]> = {}\n\n  constructor(options: GraphQLOptions) {\n    this.id = options.id.toString()\n    this.label = options.label\n    this.url = options.url\n    this.type = options.type\n    this.method = options.method || 'POST'\n    this.headers = options.headers || {}\n    this.queryable = options.queryable\n    this.readonly = options.readonly\n    this.hidden = options.hidden\n  }\n\n  // Simple event handling\n  on(event: string, callback: (...args: unknown[]) => void): void {\n    if (!this.eventListeners[event]) {\n      this.eventListeners[event] = []\n    }\n    this.eventListeners[event].push(callback)\n  }\n\n  off(event: string, callback?: (...args: unknown[]) => void): void {\n    if (!this.eventListeners[event]) return\n    if (callback) {\n      this.eventListeners[event] = this.eventListeners[event].filter(cb => cb !== callback)\n    } else {\n      this.eventListeners[event] = []\n    }\n  }\n\n  trigger(event: string, ...args: unknown[]): void {\n    if (!this.eventListeners[event]) return\n    this.eventListeners[event].forEach(callback => callback(...args))\n  }\n\n  /**\n   * @throws Error\n   */\n  protected triggerError<T>(message: string): T {\n    console.error('GraphQL error:', message)\n    this.trigger(DATA_SOURCE_ERROR, message, this)\n    throw new Error(message)\n  }\n  protected async loadData(): Promise<[Type[], Field[], string]> {\n    try {\n      const result = await this.call(graphqlIntrospectionQuery) as {data: {__schema: {types: GQLType[], queryType: {name: string}}}}\n      if (!result.data?.__schema?.types) return this.triggerError(`Invalid response: ${JSON.stringify(result)}`)\n      const allTypes = result.data.__schema.types.map((type: GQLType) => type.name)\n        .concat(builtinTypeIds)\n\n      const queryType: string = result.data.__schema.queryType?.name\n      if(!queryType) return this.triggerError(`Invalid response, queryType not found: ${JSON.stringify(result)}`)\n\n      const query: GQLType | undefined = result.data.__schema.types.find((type: GQLType) => type.name === queryType)\n      if(!query) return this.triggerError(`Invalid response, query not found: ${JSON.stringify(result)}`)\n\n      // Get non-queryable types\n      const nonQueryables = result.data.__schema.types\n        // Filter out Query, Mutation, Subscription\n        //.filter((type: GQLType) => !['Query', 'Mutation', 'Subscription'].includes(type.name))\n        // Filter out introspection types\n        .filter((type: GQLType) => !type.name.startsWith('__'))\n        // Filter out types that are not in Query\n        //.map((type: GQLType) => query?.fields.find((field: GQLField) => field.name === type.name) ?? type)\n        // Filter out types that are in Query (the queryables are handled separately)\n        .filter((type: GQLType) => !query?.fields.find((field: GQLField) => field.name === type.name))\n\n        // Map to Type\n        .map((type: GQLType) => this.graphQLToType(allTypes, type, 'SCALAR', false))\n        // Add builtin types\n        .concat(builtinTypes)\n\n      if(!query) {\n        return this.triggerError('Query type not found in GraphQL schema')\n      }\n\n      // Get queryable types\n      const queryableTypes = query.fields\n        // Map to GQLType, keeping kind for later\n        .map((field: GQLField) => ({\n          type: {\n            ...result.data.__schema.types.find((type: GQLType) => type.name === this.getOfTypeProp<string>('name', field.type, field.name)),\n            name: field.name,\n          } as GQLType,\n          kind: this.ofKindToKind(field.type),\n        }))\n        // Map to Type\n        .map(({type, kind}) => this.graphQLToType(allTypes, type, kind, true))\n\n      // Get all queryables as fields\n      const queryableFields = query.fields\n        // Map to Field\n        .map((field: GQLField) => this.graphQLToField(field))\n\n      // Return all types, queryables and non-queryables\n      return [queryableTypes.concat(nonQueryables), queryableFields, queryType]\n    } catch (e) {\n      return this.triggerError(`GraphQL introspection failed: ${(e as Error).message}`)\n    }\n  }\n  protected graphQLToField(field: GQLField): Field {\n    const kind = this.ofKindToKind(field.type)\n    return {\n      id: field.name,\n      dataSourceId: this.id,\n      label: field.name,\n      typeIds: this.graphQLToTypes(field),\n      kind: kind ? this.graphQLToKind(kind) : 'unknown',\n      arguments: field.args?.map(arg => ({\n        name: arg.name,\n        typeId: this.getOfTypeProp<string>('name', arg.type, arg.name),\n        defaultValue: arg.defaultValue,\n      })),\n    }\n  }\n\n  /**\n   * Recursively search for a property on a GraphQL type\n   * Check the deepest values in ofType first\n   */\n  protected getOfTypeProp<T>(prop: string, type: GQLOfType, defaultValue?: T): T {\n    const result = this.getOfTypePropRecursive<T>(prop, type)\n    if(result) return result\n    if(defaultValue) return defaultValue\n    throw new Error(`Type ${JSON.stringify(type)} has no property ${prop} and no default was provided`)\n  }\n\n  protected getOfTypePropRecursive<T>(prop: string, type: GQLOfType): T | undefined {\n    if(!type) {\n      console.error('Invalid type', type)\n      throw new Error('Invalid type')\n    }\n    if(type.ofType) {\n      const ofTypeResult = this.getOfTypePropRecursive<T>(prop, type.ofType)\n      if(ofTypeResult) return ofTypeResult\n    }\n    return type[prop as keyof GQLOfType] as T\n  }\n\n  /**\n   * Recursively search for a property on a GraphQL type\n   * Handles Union types with possibleTypes\n   * Handles list and object and non-null types with ofType\n   */\n  protected graphQLToTypes(field: GQLField): TypeId[] {\n    const possibleTypes = this.getOfTypeProp<{name: string, kind: GQLKind}[]>('possibleTypes', field.type, [])\n    if(possibleTypes.length > 0) return possibleTypes.map(type => type.name)\n    return [this.getOfTypeProp<string>('name', field.type, field.name)]\n  }\n\n  /**\n   * Convert GraphQL kind to FieldKind\n   * @throws Error if kind is not valid or is NON_NULL\n   */\n  protected graphQLToKind(kind: GQLKind): FieldKind {\n    switch(kind) {\n    case 'LIST': return 'list'\n    case 'OBJECT': return 'object'\n    case 'SCALAR': return 'scalar'\n    case 'UNION':\n    case 'NON_NULL':\n    default:\n      throw new Error(`Unable to find a valid kind for ${kind}`)\n    }\n  }\n\n  /**\n   * Check if a GraphQL kind has a valid FieldKind equivalent\n   */\n  protected validKind(kind: GQLKind): boolean {\n    return ['LIST', 'OBJECT', 'SCALAR'].includes(kind)\n  }\n\n  /**\n   * Recursively search for a GraphQL kind of type list, object or scalar\n   */\n  protected ofKindToKind(ofKind: GQLOfType): GQLKind | null {\n    if(ofKind.possibleTypes) {\n      const foundKind = ofKind.possibleTypes\n        .reduce((prev: GQLKind | null, type: {kind: GQLKind, name: string}) => {\n          if(!prev) return type.kind as GQLKind\n          if(prev !== type.kind) {\n            throw new Error(`Unable to find a valid kind for ${ofKind.kind}. Union types with different kind is not supported`)\n          }\n          return prev as GQLKind\n        }, null)\n      if(!foundKind) {\n        console.error('Unable to find a valid kind (1)', ofKind)\n        return null\n      }\n      return foundKind\n    }\n    if(this.validKind(ofKind.kind)) return ofKind.kind\n    if(ofKind.ofType) return this.ofKindToKind(ofKind.ofType)\n    // This happens when the type is missing\n    // Remove the warning because it happens with directus and polutes the logs\n    // console.error('Unable to find a valid kind (2)', ofKind)\n    return null\n  }\n\n  /**\n   * Convert a GraphQL type to a Type\n   */\n  protected graphQLToType(allTypes: TypeId[], type: GQLType, kind: GQLKind | null, queryable: boolean): Type {\n    const queryableOverride = this.queryable\n    const result = {\n      id: type.name,\n      dataSourceId: this.id,\n      label: type.name,\n      fields: type.fields\n        // Do not include fields that are not in the schema\n        // FIXME: somehow this happens with fields of type datetime_functions for directus\n        //?.filter((field: {name: string, type: any}) => allTypes.includes(field.name))\n        ?.filter((field) => allTypes.includes(this.getOfTypeProp<string>('name', field.type, field.name)))\n        ?.map(field => this.graphQLToField(field))\n        ?? [],\n      queryable: queryable && (!queryableOverride || queryableOverride!.includes(type.name)),\n    }\n    return result\n  }\n\n  /**\n   * Connect to the GraphQL endpoint and load the schema\n   * This has to be implemented as it is a DataSource method\n   */\n  async connect(): Promise<void> {\n    try {\n      // const result = await this.call(`\n      //     query {\n      //       __typename\n      //     }\n      //   `) as any\n      // if (!result?.data?.__typename) return this.triggerError(`Invalid response: ${JSON.stringify(result)}`)\n      const [types, fields, queryType] = await this.loadData()\n      if(types.length === 0) return this.triggerError('No types found in GraphQL schema')\n      if(fields.length === 0) return this.triggerError('No fields found in GraphQL schema')\n      if(!queryType) return this.triggerError('No query type found in GraphQL schema')\n      this.types = types\n      this.queryables = fields\n      this.queryType = queryType\n      if (this.ready) {\n        this.trigger(DATA_SOURCE_CHANGED, this)\n      } else {\n        this.ready = true\n        this.trigger(DATA_SOURCE_READY, this)\n      }\n    } catch (e) {\n      return this.triggerError(`GraphQL connection failed: ${(e as Error).message}`)\n    }\n  }\n\n  /**\n   * Check if the DataSource is ready\n   * This has to be implemented as it is a DataSource method\n   */\n  isConnected(): boolean {\n    return this.ready\n  }\n\n  /**\n   * Get all types\n   * This has to be implemented as it is a DataSource method\n   */\n  getTypes(): Type[] {\n    if (!this.ready) {\n      console.error('DataSource is not ready. Attempted to get types before ready status was achieved.')\n      throw new Error('DataSource is not ready. Ensure it is connected and ready before querying.')\n    }\n\n    if (this.types.length === 0) {\n      console.error('No types available. It seems the data source may not be connected or the schema is incomplete.', this.ready)\n      throw new Error('No types found. The data source may not be connected or there might be an issue with the schema.')\n    }\n    return this.types\n  }\n\n  /**\n   * Get all queryable fields\n   * This has to be implemented as it is a DataSource method\n   */\n  getQueryables(): Field[] {\n    return this.queryables\n  }\n\n  /**\n   * Call the GraphQL endpoint\n   */\n  protected async call(query: string): Promise<unknown> {\n    // Retrieve the URL for the GraphQL endpoint\n    const url = this.url\n    if (!url) return this.triggerError('Missing GraphQL URL') // Ensure the URL is provided\n\n    // Retrieve the headers for the GraphQL request\n    const headers = this.headers\n    if (!headers) return this.triggerError('Missing GraphQL headers') // Ensure headers are provided\n\n    // Ensure the Content-Type header is set to 'application/json', normalizing the case\n    const key = Object.keys(headers).find(name => name.toLowerCase() === 'content-type')\n    headers[key || 'Content-Type'] = headers[key || 'Content-Type'] || 'application/json'\n\n    // Retrieve the HTTP method (defaulting to 'POST' for GraphQL queries)\n    const method = this.method ?? 'POST'\n\n    // Make the HTTP request to the GraphQL endpoint\n    const response = await fetch(url, {\n      method,\n      headers,\n      // Include a body only for POST requests\n      ...(method === 'POST' ? {\n        body: JSON.stringify({ query }),\n      } : {}),\n    })\n\n    // Handle non-OK responses with detailed error logging\n    if (!response?.ok) {\n      console.error('GraphQL call failed', response?.status, response?.statusText, query)\n      return this.triggerError(`GraphQL call failed with \\`${response?.statusText}\\` and status ${response?.status}`)\n    }\n\n    // Return the parsed JSON response\n    return response.json()\n  }\n\n  /**\n   * Build a GraphQL query from a tree\n   */\n  getQuery(children: Tree[]): string {\n    return this.getQueryRecursive({\n      // Add the main query object which is the root of the tree\n      token: {\n        dataSourceId: this.id,\n        fieldId: 'query',\n        kind: 'object',\n        typeIds: [this.queryType],\n      },\n      children,\n    } as Tree)\n  }\n\n  protected getQueryRecursive(tree: Tree, indent = '', fragment = ''): string {\n    // Check if the tree is a fragment\n    const typeOrFragment = fragment ? `...on ${fragment}` : `${tree.token.fieldId}${buildArgs(tree.token.options)}`\n\n    // Build the value\n    switch(tree.token.kind) {\n    case 'scalar':\n      if(tree.token.fieldId === FIXED_TOKEN_ID) return ''\n      return indent + typeOrFragment\n    case 'object':\n    case 'list': {\n      const types = this.getTypes().filter(t => tree.token.typeIds?.includes(t.id))\n      if(types.length === 0) {\n        throw new Error(`Type not found for ${tree.token.fieldId} (${tree.token.typeIds})`)\n      } else if(types.length > 1) throw new Error(`Multiple types found for ${tree.token.fieldId}`)\n      const type = types[0] as Type\n      const fieldTypes = tree.children\n        .map(child => {\n          const fieldType = type.fields.find(f => f.id === child.token.fieldId)\n          if(!fieldType) {\n            // Not a queryable type\n            return null\n          }\n          return {\n            fieldType,\n            child,\n          }\n        })\n          // Remove non-queryable types\n        .filter(fieldType => fieldType !== null) as {fieldType: Field, child: Tree}[]\n\n      // Handle fragments\n      const fragments = fieldTypes\n        .filter(({fieldType}) => fieldType.typeIds.length > 1)\n        .map(({child}) => {\n          return {\n            query: this.getQueryRecursive(child, indent + '  ', child.token.typeIds[0]),\n            child,\n          }\n        })\n\n      const fragmentsQuery = fragments\n        .map(({query, child}) => dedent`\n            ${indent}${child.token.fieldId} {\n              ${query}\n            }\n          `)\n        .join('\\n')\n\n      // Handle simple case, no fragment\n      const childQuery = fieldTypes\n        .filter(({fieldType}) => fieldType.typeIds.length === 1)\n        .map(({child}) => {\n          return this.getQueryRecursive(child, indent + '  ')\n        })\n        .join('\\n')\n\n      return dedent`${indent}${typeOrFragment} {\n        ${indent}  __typename\n        ${childQuery}\n        ${fragmentsQuery}\n        ${indent}}`\n    }\n    default:\n      console.error('Unable to build GraphQL query', tree)\n      throw new Error(`Unable to build GraphQL query: unable to build tree ${JSON.stringify(tree)}`)\n    }\n  }\n\n  async fetchValues(query: string): Promise<unknown[]> {\n    const result = await this.call(query) as { data: unknown[] }\n    return result.data\n  }\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { DataSourceId, IDataSource, DATA_SOURCE_CHANGED } from '../types'\nimport { Editor } from 'grapesjs'\n\n/**\n * Data source registry state\n */\ninterface DataSourceRegistryState {\n  dataSources: IDataSource[]\n  editor: Editor\n}\n\n// Global registry instance\nlet globalRegistry: DataSourceRegistryState | null = null\n\n/**\n * Initialize the data source registry\n */\nexport function initializeDataSourceRegistry(editor: Editor): void {\n  globalRegistry = {\n    dataSources: [],\n    editor\n  }\n}\n\n/**\n * Get the global registry (throws if not initialized)\n */\nfunction getRegistry(): DataSourceRegistryState {\n  if (!globalRegistry) {\n    throw new Error('DataSourceRegistry not initialized. Call initializeDataSourceRegistry first.')\n  }\n  return globalRegistry\n}\n\n/**\n * Get all data sources\n */\nexport function getAllDataSources(): IDataSource[] {\n  return [...getRegistry().dataSources]\n}\n\n/**\n * Add a data source\n */\nexport function addDataSource(dataSource: IDataSource): void {\n  const registry = getRegistry()\n  registry.dataSources.push(dataSource)\n  registry.editor.trigger(DATA_SOURCE_CHANGED)\n}\n\n/**\n * Remove a data source\n */\nexport function removeDataSource(dataSource: IDataSource): void {\n  const registry = getRegistry()\n  const index = registry.dataSources.indexOf(dataSource)\n  if (index > -1) {\n    registry.dataSources.splice(index, 1)\n    registry.editor.trigger(DATA_SOURCE_CHANGED)\n  }\n}\n\n/**\n * Get a data source by ID\n */\nexport function getDataSource(id: DataSourceId): IDataSource | undefined {\n  return getRegistry().dataSources.find(ds => ds.id === id)\n}\n\n/**\n * Set all data sources (replaces existing)\n */\nexport function setDataSources(dataSources: IDataSource[]): void {\n  const registry = getRegistry()\n  registry.dataSources = [...dataSources]\n  registry.editor.trigger(DATA_SOURCE_CHANGED)\n}\n\n/**\n * Convert to JSON for storage\n */\nexport function dataSourcesToJSON(): unknown[] {\n  return getRegistry().dataSources.map(ds => ({\n    id: ds.id,\n    label: ds.label,\n    url: ds.url,\n    type: ds.type,\n    method: ds.method,\n    headers: ds.headers,\n    readonly: ds.readonly,\n    hidden: ds.hidden\n  }))\n}\n","import { Expression, Field, FieldKind, IDataSource, Options, Token, TypeId } from './types'\nimport { Editor } from 'grapesjs'\nimport { getParentByPersistentId, getStateDisplayName } from './model/state'\nimport { TemplateResult, html } from 'lit'\nimport { Component } from 'grapesjs'\nimport { fromStored, getExpressionResultType } from './model/token'\nimport GraphQL, { GraphQLOptions } from './datasources/GraphQL'\nimport { getDataTree as getGlobalDataTree } from './model/dataSourceManager'\nimport { getDataSource } from './model/dataSourceRegistry'\n\nexport const NOTIFICATION_GROUP = 'Data source'\n\n/**\n * Get the DataTree instance using the global manager\n * Uses the new functional approach\n */\nexport function getDataTreeFromUtils(editor?: Editor) {\n  return getGlobalDataTree()\n}\n\n/**\n * Get the display name of a field\n */\nexport function cleanStateName(name: string | null) {\n  return name?.toLowerCase()\n    ?.replace(/[^a-z-1-9:]/g, '-')\n    ?.replace(/-+$/g, '') // do not end with -\n}\n\n/**\n * Get the display type of a field\n * For the dropdown in expressions\n * @example \"String\", \"String [ ]\", \"String { }\"\n */\nfunction getTypeDisplayName(typeIds: TypeId[], kind: FieldKind | null): string {\n  const typeIdsStr = typeIds.join(', ').toLowerCase()\n  return kind === 'list' ? ` (${typeIdsStr}[])` : kind === 'object' ? ` (${typeIdsStr}{})` : ` (${typeIdsStr})`\n}\n\nexport function getComponentDebug(component: Component): string {\n  const parent = component.parent()\n  const parentName = parent?.getName()\n  const parentTagName = parent?.get('tagName')\n  const parentDebug = parentName ? `${parentName} (${parentTagName})` : parentTagName\n  const id = component.cid\n  const tagName = component.get('tagName')\n  const classes = component.getClasses()\n  const classesStr = classes.length ? `.${classes.join('.')}` : ''\n  const name = component.getName()\n  return `${parentDebug} > ${name} (${tagName}#${id}${classesStr})`\n}\n\n/**\n * Concatenate strings to get a desired length string as result\n * Exported for tests\n */\nexport function concatWithLength(desiredNumChars: number, ...strings: string[]): string {\n  // const diff = desiredNumChars - `${token.label} ${type}`.length\n  // return `${token.label}${'\\xA0'.repeat(diff * 2)} ${type} ${desiredNumChars}`\n  // Get current string length\n  const len = strings.reduce((acc, str) => acc + str.length, 0)\n  const diff = Math.max(desiredNumChars - len, 0)\n  // Give the fist string the desired length\n  const [first, ...rest] = strings\n  const newFirst = first + '\\xA0'.repeat(diff)\n  // Return the concatenated string\n  return [newFirst, ...rest].join('')\n}\n\n/**\n * Get the label for a token\n * This is mostly about formatting a string for the dropdowns\n */\nexport function getTokenDisplayName(component: Component, token: Token): string {\n  switch (token.type) {\n  case 'property': {\n    const type = getTypeDisplayName(token.typeIds, token.kind)\n    return `${token.label} ${type}`\n  }\n  case 'filter': return token.label\n  case 'state':\n    return getStateDisplayName(component, token)\n  default:\n    console.error('Unknown token type (reading type)', token)\n    throw new Error('Unknown token type')\n  }\n}\n\n/**\n * Group tokens by type\n * This is used to create the groups in dropdowns\n */\nexport function groupByType(editor: Editor, component: Component, completion: Token[], expression: Expression): Record<string, Token[]> {\n  return completion\n    .reduce((acc, token) => {\n      let label\n      switch (token.type) {\n      case 'filter': label = 'Filters'; break\n      case 'property': {\n        if(token.dataSourceId) {\n          if(expression.length > 0) {\n            try {\n              const type = getExpressionResultType(expression, component, getDataTreeFromUtils(editor))\n              label = type?.label ?? type?.id ?? 'Unknown'\n            } catch(e) {\n              // FIXME: notify user\n              console.error('Error while getting expression result type in groupByType', {expression, component, dataTree: getDataTreeFromUtils(editor)})\n              label = 'Unknown'\n            }\n          } else {\n            const dataSource = getDataSource(token.dataSourceId)\n            if(dataSource) {\n              label = (dataSource as any).label || (dataSource as any).get?.('label') || token.dataSourceId\n            } else {\n              console.error('Data source not found', token.dataSourceId)\n              editor.runCommand('notifications:add', {\n                type: 'error',\n                group: NOTIFICATION_GROUP,\n                message: `Data source not found: ${token.dataSourceId}`,\n              })\n              throw new Error(`Data source not found: ${token.dataSourceId}`)\n            }\n          }\n        } else {\n          label = 'Fields'\n        }\n        break\n      }\n      case 'state': {\n        const parent = getParentByPersistentId(token.componentId, component)\n        const name = parent?.get('tagName') === 'body' ? 'Website' : parent?.getName()\n        label = name ? `${name}'s states` : 'States'\n        break\n      }\n      default:\n        console.error('Unknown token type (reading type)', token)\n        throw new Error('Unknown token type')\n      }\n      if (!acc[label]) acc[label] = []\n      acc[label].push(token)\n      return acc\n    }, {} as Record<string, Token[]>)\n}\n\n/**\n * Create a \"fixed\" token\n * It is a hard coded content with which you can start an expression\n */\nexport const FIXED_TOKEN_ID = 'fixed'\nexport function getFixedToken(value: string): Token {\n  return {\n    type: 'property',\n    propType: 'field',\n    fieldId: FIXED_TOKEN_ID,\n    label: 'Fixed value',\n    kind: 'scalar',\n    typeIds: ['String'],\n    options: {\n      value,\n    },\n    optionsForm: () => html`\n        <label>Value\n          <input type=\"text\" name=\"value\" .value=${value}>\n        </label>\n    `,\n  }\n}\n\n/**\n * Convert a token to a string\n * This is used to store the token in the component\n */\nexport function toValue(token: Token): string {\n  return JSON.stringify({\n    ...token,\n  })\n}\n\n/**\n * Convert a token to an option's tag value (json string)\n */\nexport function toId(token: Token): string {\n  switch (token.type) {\n  case 'property': return `property__${token.dataSourceId || ''}__${token.fieldId}__${token.kind}__${token.typeIds.join(',')}`\n  case 'filter': return `filter____${token.id}`\n  case 'state': return `state__${token.componentId}__${token.storedStateId}`\n  default:\n    console.error('Unknown token type (reading type)', token)\n    throw new Error('Unknown token type')\n  }\n}\n\n/**\n * Revert an option's tag value to a token\n * @throws Error if the token type is not found\n */\nexport function fromString(editor: Editor, id: string, componentId: string | null): Token {\n  return fromStored(JSON.parse(id), getDataTreeFromUtils(editor), componentId) as Token\n}\n\n/**\n * Check if a json is an expression, i.e. an array of tokens\n */\nexport function isExpression(json: unknown): boolean {\n  if(typeof json === 'string') throw new Error('json must be parsed')\n  if (!Array.isArray(json)) return false\n  return json.every(token => {\n    if (typeof token !== 'object') return false\n    if (!token.type) return false\n    switch (token.type) {\n    case 'property': {\n      if (!token.fieldId) return false\n      if (token.fieldId === FIXED_TOKEN_ID) {\n        if (!token.options?.value) return false\n      }\n      break\n    }\n    case 'state': {\n      if (!token.componentId) return false\n      if (!token.storedStateId) return false\n      break\n    }\n    case 'filter': {\n      if (!token.id) return false\n      break\n    }\n    }\n    return true\n  })\n}\n\n/**\n * Convert a json to an expression\n */\nexport function toExpression(json: unknown | string): Expression | null {\n  try {\n    if(typeof json === 'string') json = JSON.parse(json)\n    if(isExpression(json)) return json as Expression\n    return null\n  } catch(e) {\n    return null\n  }\n}\n\n/**\n * Apply a kind to a field\n */\nexport function convertKind(field: Field | null, from: FieldKind, to: FieldKind): Field | null {\n  if (!field) {\n    return null\n  }\n  if (field.kind !== from) {\n    console.error(`Field is not a ${from}`, field)\n    throw new Error(`Field ${field.label} is not a ${from}`)\n  }\n  return {\n    ...field,\n    kind: to,\n  }\n}\n\n/**\n * Get the type of a field, as provided by the data source\n * @throws Error if the field has a token with an unknown type\n */\nexport function getFieldType(editor: Editor, field: Field | null, key: string | undefined, componentId: string | null): Field | null {\n  const dataTree = getDataTreeFromUtils(editor)\n  if (!field || !key) return null\n  const types = field.typeIds.map(typeId => dataTree.getType(typeId, field.dataSourceId ?? null, componentId))\n  const fields = types.map(type => type?.fields.find(field => field.label === key))\n  switch (fields.length) {\n  case 0: return null\n  case 1: return fields[0]!\n  default: return {\n    id: `${field.id}.${key}`,\n    label: `${field.label}.${key}`,\n    typeIds: fields.reduce((typeIds, field) => typeIds\n    // Add typeIds of the field if not already present\n      .concat(field!.typeIds.filter(t => !typeIds.includes(t)))\n    , [] as string[]),\n    kind: 'object',\n    dataSourceId: field.dataSourceId,\n  }\n  }\n}\n\n/**\n * Generate a form to edit the options of a token\n * @throws Error if the field has a token with an unknown type\n */\nexport function optionsFormKeySelector(editor: Editor, field: Field | null, options: Options, name: string): TemplateResult {\n  const dataTree = getDataTreeFromUtils(editor)\n  if (!field) return html`\n      <label>${name}\n        <input type=\"text\" name=${name} />\n      </label>\n    `\n  return html`\n      <select name=${name}>\n        <option value=\"\">Select a ${name}</option>\n        ${field ? field.typeIds\n    .flatMap(typeId => dataTree.getType(typeId, field.dataSourceId ?? null, null)!.fields)\n    .map(f => html`<option value=${f.label} .selected=${f.label === options.key}>${f.label}</option>`)\n    : html``\n}\n      </select>\n    `\n}\n\n/**\n * Get a container element from an option\n * @throws Error if the option is not a string or an HTMLElement or a function\n * @throws Error if the element is not found\n */\nexport function getElementFromOption(option: HTMLElement | string | (() => HTMLElement) | undefined, optionNameForError: string): HTMLElement {\n  // Get the container element for the UI\n  if (typeof option === 'undefined') {\n    // This should never happen as we set a default value in /index.ts\n    throw new Error('el option must be set')\n  } else if (typeof option === 'string') {\n    const el = document.querySelector(option)\n    if (!el) throw new Error(`Element ${option} not found`)\n    return el as HTMLElement\n  } else if (typeof option === 'function') {\n    const el = option()\n    if (!el) throw new Error('el option must be a returned by the provided function')\n    return el\n  } else if (option instanceof HTMLElement) {\n    return option\n  }\n  throw new Error(`${optionNameForError} must be a string or an HTMLElement or a function`)\n}\n\nexport function getDefaultOptions(postFix = Math.random().toString(36).slice(2, 8)): GraphQLOptions {\n  return {\n    id: `ds-${postFix}`,\n    label: 'New data source',\n    type: 'graphql',\n    url: '',\n    method: 'POST',\n    headers: {},\n    readonly: false,\n  }\n}\n\nexport function createDataSource(opts: Partial<GraphQLOptions> = {}, postFix?: string): IDataSource {\n  const options = {\n    ...getDefaultOptions(postFix),\n    ...opts,\n  }\n  switch (options.type) {\n    case 'graphql':\n      return new GraphQL(options)\n    default:\n      throw new Error(`Unknown data source type: ${options.type}`)\n  }\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { Component, Page, Editor } from 'grapesjs'\nimport { ComponentExpression, DATA_SOURCE_CHANGED, DATA_SOURCE_READY, DataSourceId, Expression, Field, Filter, IDataSource, Property, State, StoredToken, Tree, Type, TypeId } from '../types'\nimport { getState, getParentByPersistentId, getStates, getPersistantId } from './state'\nimport { fromStored, getOptionObject } from './token'\nimport { FIXED_TOKEN_ID, getComponentDebug, NOTIFICATION_GROUP, toExpression } from '../utils'\n\n/**\n * Options of the data tree\n * They can be set on the instance too\n */\nexport interface DataTreeOptions {\n  filters: Partial<Filter>[] | string\n  dataSources: IDataSource[]\n}\n\nexport const STANDARD_TYPES: Type[] = [\n  {\n    id: 'string',\n    label: 'String',\n    fields: [],\n  },\n  {\n    id: 'number',\n    label: 'Number',\n    fields: [],\n  },\n  {\n    id: 'boolean',\n    label: 'Boolean',\n    fields: [],\n  },\n  {\n    id: 'date',\n    label: 'Date',\n    fields: [],\n  },\n  {\n    id: 'unknown',\n    label: 'Unknown',\n    fields: [],\n  },\n]\n\n///**\n// * TODO\n// * Error thrown when a query cannot be built\n// */\n//export interface BuildQueryErrorOptions {\n//  expression: Expression\n//  component: Component\n//  token: Token\n//}\n//export class BuildQueryError extends Error {\n//  public expression: Expression\n//  public component: Component\n//  public token: Token\n//\n//  constructor(message: string, options: BuildQueryErrorOptions) {\n//    super(message)\n//    this.expression = options.expression\n//    this.component = options.component\n//    this.token = options.token\n//  }\n//}\n\nexport class DataTree {\n  public dataSources: IDataSource[] = []\n  // Preview data returned by all APIs (for canvas preview only)\n  public previewData: Record<DataSourceId, unknown> = {}\n  public filters: Filter[] = []\n\n  /**\n   * All types from all data sources\n   * Read only, updated when data sources are updated\n   */\n  protected _allTypes: Type[] = []\n  public get allTypes(): Type[] {\n    return this._allTypes\n  }\n\n  /**\n   * All queryable fields from all data sources\n   */\n  protected _queryables: Field[] = []\n  public get queryables(): Field[] {\n    return this._queryables\n  }\n\n  constructor(protected editor: Editor, protected options: {dataSources: IDataSource[], filters: Filter[]}) {\n    this.dataSources = options.dataSources\n    this.filters = options.filters\n\n    // Check that all filters have required fields\n    this.filters.forEach((filter: Filter) => {\n      if(!filter.id) throw new Error('Filter id is required')\n      if(!filter.label) throw new Error('Filter name is required')\n      if(!filter.validate) throw new Error('Filter validate is required')\n      if(!filter.output) throw new Error('Filter outputType is required')\n      if(!filter.apply) throw new Error('Filter apply is required')\n    })\n    editor.on(`${DATA_SOURCE_CHANGED} ${DATA_SOURCE_READY}`, () => {\n      this._allTypes = this.getAllTypes()\n      this._queryables = this.getAllQueryables()\n    })\n  }\n\n  /**\n   * Get type from typeId and dataSourceId\n   */\n  getTypes(dataSourceId?: DataSourceId): Type[] {\n    // Get the data source\n    const ds = this.dataSources\n      .find((dataSource: IDataSource) => dataSource.id === dataSourceId)\n    if(!ds) throw new Error(`Data source not found ${dataSourceId}`)\n    if(!ds.isConnected()) throw new Error(`Data source ${dataSourceId} is not ready (not connected)`)\n    return ds.getTypes()\n  }\n\n  /**\n   * Get type from typeId and dataSourceId\n   * @throws Error if type is not found\n   * @param componentId is used for error messages\n   */\n  getType(typeId: TypeId, dataSourceId: DataSourceId | null, componentId: string | null): Type {\n    if(dataSourceId) {\n      // Get the data source\n      const dataSource = this.dataSources\n        .find((dataSource: IDataSource) => !dataSourceId || dataSource.id === dataSourceId)\n      if(!dataSource) throw new Error(`Data source not found ${dataSourceId}`)\n      // Get its types\n      const types = dataSource?.getTypes()\n      // Return the requested type\n      const type = types.find((type: Type) => type.id === typeId)\n      if (!type) {\n        this.editor.runCommand('notifications:add', {\n          type: 'error',\n          group: NOTIFICATION_GROUP,\n          message: `Type not found ${dataSourceId ?? ''}.${typeId}`,\n          componentId,\n        })\n        throw new Error(`Type not found ${dataSourceId ?? ''}.${typeId}`)\n      }\n      return type\n    } else {\n      // No data source id: search in standard types\n      const standardType = STANDARD_TYPES.find(type => type.id === typeId.toLowerCase())\n      if(standardType) return standardType\n      // No data source id: search in all types\n      const type = this.allTypes.find(type => type.id === typeId)\n      if (!type) throw new Error(`Unknown type ${typeId}`)\n      return type\n    }\n  }\n\n  /**\n   * Get all types from all data sources\n   */\n  getAllTypes(): Type[] {\n    return this.dataSources\n      .filter((dataSource: IDataSource) => dataSource.isConnected())\n      .flatMap((dataSource: IDataSource) => {\n        return dataSource.getTypes()\n      })\n  }\n\n  /**\n   * Get all queryable fields from all data sources\n   */\n  getAllQueryables(): Field[] {\n    return this.dataSources\n      .filter((dataSource: IDataSource) => dataSource.isConnected())\n      .flatMap((dataSource: IDataSource) => {\n        return dataSource.getQueryables()\n      })\n  }\n\n  /**\n   * Evaluate an expression to a value\n  */\n  getValue(\n    expression: Expression,\n    component: Component,\n    resolvePreviewIndex = true, // False only for loop\n    prevValues: unknown = null,\n  ): unknown {\n    if (expression.length === 0) {\n      return prevValues\n    }\n\n    const [token, ...rest] = expression\n\n    switch (token.type) {\n    case 'state': {\n      const state = token as State\n      const resolvedExpression = this.resolveState(state, component)\n      if (!resolvedExpression) {\n        throw new Error(`Unable to resolve state: ${JSON.stringify(state)}`)\n      }\n\n      // Special handling for items state - always wrap result in array when resolvePreviewIndex is true\n      const previewIndex = resolvedExpression[resolvedExpression.length - 1].previewIndex\n      if (state.storedStateId === 'items' && typeof previewIndex !== 'undefined') {\n        // @ts-expect-error - Adding runtime property for items state handling\n        resolvedExpression[0].isItems = true\n      }\n      return this.getValue(resolvedExpression.concat(...rest), component, resolvePreviewIndex, prevValues)\n    }\n\n    case 'property': {\n      // Handle the case of a \"fixed\" property (hard coded string set by the user)\n      if (token.fieldId === FIXED_TOKEN_ID) {\n        return this.getValue(rest, component, resolvePreviewIndex, token.options?.value)\n      }\n\n      // Handle the case where the property refers to the first level of the data source\n      // Or it can be a key in the previewly computed data\n      let prevObj\n      if (typeof prevValues === 'undefined' || prevValues === null) {\n        if (!token.dataSourceId) {\n          throw new Error(`Data source ID is missing for token: ${JSON.stringify(token)}`)\n        }\n        prevObj = this.previewData[token.dataSourceId]\n      } else {\n        prevObj = prevValues\n      }\n\n      // Now get the next value\n      let value = prevObj ? (prevObj as Record<string, unknown>)[token.fieldId] : null\n\n      // Always handle preview index if resolvePreviewIndex is true\n      if (resolvePreviewIndex) {\n        value = this.handlePreviewIndex(value, token)\n      }\n      \n      // For non-final tokens, always handle preview index regardless of resolvePreviewIndex\n      if (rest.length > 0 && !resolvePreviewIndex) {\n        value = this.handlePreviewIndex(value, token)\n      }\n      // @ts-expect-error - Runtime property check for items handling\n      if (token.isItems && typeof token.previewIndex !== 'undefined') {\n        if(rest.length > 0) {\n          value = [value]\n        }\n      }\n      return this.getValue(rest, component, resolvePreviewIndex, value)\n    }\n    case 'filter': {\n      const options = Object.entries(token.options).reduce((acc, [key, value]) => {\n        acc[key] = this.getValue(toExpression(value) || [], component, resolvePreviewIndex, null)\n        return acc\n      }, {} as Record<string, unknown>)\n\n      const filter = this.filters.find(f => f.id === token.id)\n      if (!filter) {\n        throw new Error(`Filter not found: ${token.id}`)\n      }\n\n      let value\n      try {\n        // value = filter.apply([prevValues], options)\n        value = filter.apply(prevValues, options)\n      } catch(e) {\n        console.warn(`Filter \"${filter.id}\" error:`, e, {\n          filter: filter.id,\n          prevValues,\n          options,\n          valueType: typeof prevValues,\n          isArray: Array.isArray(prevValues),\n          isNull: prevValues === null\n        })\n        // Mimic behavior of liquid - return the input value unchanged\n        return this.getValue(rest, component, resolvePreviewIndex, prevValues)\n      }\n\n      // Always handle preview index if resolvePreviewIndex is true, or if there are more tokens\n      if (resolvePreviewIndex || rest.length > 0) {\n        value = this.handlePreviewIndex(value, token)\n      }\n\n      return this.getValue(rest, component, resolvePreviewIndex, value)\n    }\n\n    default:\n      throw new Error(`Unsupported token type: ${token}`)\n    }\n  }\n\n  /**\n   * Handle preview index for a given value and token\n   */\n  handlePreviewIndex(value: unknown, token: StoredToken): unknown {\n    if (typeof token.previewIndex === 'undefined') {\n      return value\n    }\n\n    if(Array.isArray(value)) {\n      return value[token.previewIndex]\n    }\n    return value\n  }\n\n  /**\n   * Get all expressions used in all pages\n   */\n  getAllPagesExpressions(): { page: Page, expressions: ComponentExpression[] }[] {\n    return this.editor.Pages.getAll()\n      .map((page: Page) => ({\n        page,\n        expressions: this.getPageExpressions(page),\n      }))\n  }\n\n  /**\n   * Get all expressions used in a page\n   * This will be used to fetch data for the page\n   */\n  getPageExpressions(page: Page): ComponentExpression[] {\n    return this.getComponentExpressionsRecursive(page.getMainComponent())\n  }\n\n  /**\n   * Get all expressions used by a component and its children\n   */\n  getComponentExpressionsRecursive(component: Component): ComponentExpression[] {\n    const queries = [] as ComponentExpression[]\n    queries.push(...this.getComponentExpressions(component))\n    component.components()\n      .forEach((child: Component) => {\n        queries.push(...this.getComponentExpressionsRecursive(child))\n      })\n    return queries\n  }\n\n  /**\n   * Get all expressions used by a component\n   */\n  getComponentExpressions(component: Component): ComponentExpression[] {\n    const publicStates = getStates(component, true)\n    const privateStates = getStates(component, false)\n\n    return ([] as ComponentExpression[])\n      // Visible states (custom / user defined)\n      .concat(\n        // For each state\n        publicStates\n          // Add the component\n          .map(({expression}) => ({expression, component}))\n      )\n      // Hidden states (loop / internals)\n      .concat(\n        // For each state\n        privateStates\n          // Add the component\n          .map(({expression}) => ({expression, component}))\n      )\n  }\n\n  /**\n   * Build a tree of expressions\n   */\n  getTrees({expression, component}: ComponentExpression, dataSourceId: DataSourceId): Tree[] {\n    if(expression.length === 0) return []\n    const next = expression[0]\n    switch(next.type) {\n    case 'property': {\n      if(next.dataSourceId !== dataSourceId) return []\n      const trees = this.getTrees({expression: expression.slice(1), component}, dataSourceId)\n      if(trees.length === 0) return [{\n        token: next,\n        children: [],\n      }]\n      return trees\n        .flatMap(tree => {\n          // Check if this is a \"relative\" property or \"absolute\" (a root type)\n          if(this.isRelative(next, tree.token, dataSourceId)) {\n            return {\n              token: next,\n              children: [tree],\n            }\n          } else {\n            return [{\n              token: next,\n              children: [],\n            }, tree]\n          }\n        })\n    }\n    case 'filter': {\n      const options = Object.values(next.options)\n        .map((value: unknown) => toExpression(value))\n        .filter((exp: Expression | null) => !!exp && exp.length > 0)\n        .flatMap(exp => this.getTrees({expression: exp!, component}, dataSourceId))\n\n      const trees = this.getTrees({expression: expression.slice(1), component}, dataSourceId)\n      if(trees.length === 0) return options\n      return trees.flatMap(tree => [tree, ...options])\n    }\n    case 'state': {\n      const resolved = this.resolveState(next, component)\n      if(!resolved) {\n        this.editor.runCommand('notifications:add', {\n          type: 'error',\n          group: NOTIFICATION_GROUP,\n          message: `Unable to resolve state <pre>${JSON.stringify(next)}</pre>`,\n          componentId: component.getId(),\n        })\n        throw new Error(`Unable to resolve state ${JSON.stringify(next)}. State defined on component ${getComponentDebug(component)}`)\n      }\n      return this.getTrees({expression: resolved, component}, dataSourceId)\n    }\n    default:\n      this.editor.runCommand('notifications:add', {\n        type: 'error',\n        group: NOTIFICATION_GROUP,\n        message: `Invalid expression <pre>${JSON.stringify(expression)}</pre>`,\n        componentId: component.getId(),\n      })\n      throw new Error(`Invalid expression ${JSON.stringify(expression)}. Expression used on component ${getComponentDebug(component)}`)\n    }\n  }\n\n  /**\n   * Check if a property is relative to a type\n   * A type is \"relative\" if parent has a type which has a field of type tree.token\n   * FIXME: need a better way to check if a property is relative, e.g. have a \"relative\" flag on the property, set depending on <state-editor root-type\n   */\n  isRelative(parent: Property, child: Property, dataSourceId: DataSourceId): boolean {\n    const parentTypes = this.getTypes(dataSourceId).filter(t => parent.typeIds.includes(t.id))\n    const parentFieldsTypes = parentTypes.flatMap(t => t.fields.map(f => f.typeIds).flat())\n    return parentFieldsTypes.length > 0 && child.typeIds.some(typeId => parentFieldsTypes.includes(typeId))\n  }\n\n  /**\n   * From expressions to a tree\n   */\n  toTrees(expressions: ComponentExpression[], dataSourceId: DataSourceId): Tree[] {\n    if(expressions.length === 0) return []\n    return expressions\n      // From Expression to Tree\n      .flatMap(expression => this.getTrees(expression, dataSourceId))\n      // Group by root token\n      .reduce((acc: Tree[][], tree: Tree) => {\n        const existing = acc.find(t => t[0].token.fieldId === tree.token.fieldId && (!tree.token.dataSourceId || t[0].token.dataSourceId === tree.token.dataSourceId))\n        if(existing) {\n          existing.push(tree)\n        } else {\n          acc.push([tree])\n        }\n        return acc\n      }, [] as Tree[][])\n      // Merge all trees from the root\n      .map((grouped: Tree[]) => {\n        try {\n          const merged = grouped.reduce((acc, tree) => this.mergeTrees(acc, tree))\n          return merged\n        } catch(e) {\n          this.editor.runCommand('notifications:add', {\n            type: 'error',\n            group: NOTIFICATION_GROUP,\n            message: `Unable to merge trees <pre>${JSON.stringify(grouped)}</pre>`,\n            componentId: expressions[0].component.getId(),\n          })\n          throw e\n        }\n      })\n  }\n\n  /**\n   * Recursively merge two trees\n   */\n  protected mergeTrees(tree1: Tree, tree2: Tree): Tree {\n    // Check if the trees have the same fieldId\n    if (tree1.token.dataSourceId !== tree2.token.dataSourceId\n    // Don't check for kind because it can be different for the same fieldId\n    // For example `blog` collection (kind: list) for a loop/repeat\n    //   and `blog` item (kind: object) from inside the loop\n    // FIXME: why is this?\n    // || tree1.token.kind !== tree2.token.kind\n    ) {\n      console.error('Unable to merge trees', tree1, tree2)\n      throw new Error(`Unable to build GraphQL query: unable to merge trees ${JSON.stringify(tree1)} and ${JSON.stringify(tree2)}`)\n    }\n\n    // Check if there are children with the same fieldId but different options\n    // FIXME: we should use graphql aliases: https://graphql.org/learn/queries/#aliases but then it changes the variable name in the result\n    const errors = tree1.children\n      .filter(child1 => tree2.children.find(child2 =>\n        child1.token.fieldId === child2.token.fieldId\n        && getOptionObject(child1.token.options, child2.token.options).error\n      ))\n      .map(child1 => {\n        const child2 = tree2.children.find(child2 => child1.token.fieldId === child2.token.fieldId)\n        return `${child1.token.fieldId} appears twice with different options: ${JSON.stringify(child1.token.options)} vs ${JSON.stringify(child2?.token.options)}`\n      })\n\n    if(errors.length > 0) {\n      console.error('Unable to merge trees', errors)\n      throw new Error(`Unable to build GraphQL query: unable to merge trees: \\n* ${errors.join('\\n* ')}`)\n    }\n\n    const different = tree1.children\n      .filter(child1 => !tree2.children.find(child2 =>\n        child1.token.fieldId === child2.token.fieldId\n        && child1.token.typeIds.join(',') === child2.token.typeIds.join(',')\n        && !getOptionObject(child1.token.options, child2.token.options).error\n      ))\n      .concat(tree2.children\n        .filter(child2 => !tree1.children.find(child1 =>\n          child1.token.fieldId === child2.token.fieldId\n          && child1.token.typeIds.join(',') === child2.token.typeIds.join(',')\n          && !getOptionObject(child1.token.options, child2.token.options).error\n        ))\n      )\n    const same = tree1.children\n      .filter(child1 => tree2.children.find(child2 =>\n        child1.token.fieldId === child2.token.fieldId\n        && child1.token.typeIds.join(',') === child2.token.typeIds.join(',')\n        && !getOptionObject(child1.token.options, child2.token.options).error\n      ))\n\n    return {\n      token: tree1.token,\n      children: different\n        .concat(same\n          .map(child1 => {\n            const child2 = tree2.children.find(child2 => child1.token.fieldId === child2.token.fieldId)\n            return this.mergeTrees(child1, child2!)\n          })),\n    }\n  }\n\n  /**\n   * Get all expressions used by a component\n   * Resolves all states token as expressions recursively\n   * Resulting expressions contain properties and filters only, no states anymore\n   */\n  resolveState(state: State, component: Component): Expression | null {\n    const parent = getParentByPersistentId(state.componentId, component)\n    if (!parent) {\n      console.error('Component not found for state', state, component.get('id-plugin-data-source'), component.parent()?.get('id-plugin-data-source'), getPersistantId(component.parent()!))\n      return null\n    }\n    // Get the expression of the state\n    const storedState = getState(parent, state.storedStateId, state.exposed)\n    if (!storedState?.expression) {\n      console.warn('State is not defined on component', parent.getId(), state, storedState)\n      return null\n    }\n    return storedState.expression\n      .flatMap((token: StoredToken) => {\n        switch (token.type) {\n        case 'state': {\n          return this.resolveState(fromStored(token, this, component.getId()), parent) ?? []\n        }\n        default:\n          return token\n        }\n      })\n  }\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { Field, Filter, Options } from '../types'\nimport { html } from 'lit'\nimport { convertKind, getFieldType } from '../utils'\nimport { Component, Editor } from 'grapesjs'\n\n/**\n * Check if a field is a number\n */\nfunction isNumber(field: Field | null, scalarOnly = true): boolean {\n  if (!field || (scalarOnly && field.kind !== 'scalar')) return false\n  const typeIds = field.typeIds.map(typeId => typeId.toLowerCase())\n  return typeIds.includes('number') || typeIds.includes('int')\n}\n\n/**\n * Check if a field is a string\n * Exported for testing\n */\nexport function isString(field: Field | null, scalarOnly = true): boolean {\n  if (!field || (scalarOnly && field.kind !== 'scalar')) return false\n  return field.typeIds.map(typeId => typeId.toLowerCase()).includes('string')\n}\n\n/**\n * Check if a field is a date\n * Exported for testing\n */\nexport function isDate(field: Field | null, scalarOnly = true): boolean {\n  if (!field || (scalarOnly && field.kind !== 'scalar')) return false\n  return field.typeIds.map(typeId => typeId.toLowerCase()).some(typeId => ['date', 'instant'].includes(typeId))\n}\n\n/**\n * Liquid filters\n */\nexport default function(editor: Editor): Filter[] {\n  return [\n    {\n      type: 'filter',\n      id: 'strip_html',\n      label: 'strip_html',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str) => (str as string).replace(/<[^>]*>/g, ''),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'append',\n      label: 'append',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => `${str}${options.value}`,\n      options: {\n        value: '',\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options, stateName: string) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          name=\"value\"\n          parent-name=${stateName}\n          data-is-input\n          no-filters\n          class=\"ds-state-editor__options\"\n          value=${options.value || '[]'}\n        >\n          <label slot=\"label\">Suffix</label>\n        </state-editor>\n      `,\n    }, {\n      type: 'filter',\n      id: 'prepend',\n      label: 'prepend',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => `${options.state}${str}`,\n      options: {\n        value: '',\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options, stateName: string) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          name=\"value\"\n          parent-name=${stateName}\n          data-is-input\n          no-filters\n          class=\"ds-state-editor__options\"\n          value=${options.value || '[]'}\n        >\n          <label slot=\"label\">Prefix</label>\n        </state-editor>\n      `,\n    }, {\n      type: 'filter',\n      id: 'where',\n      label: 'where',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: field => field,\n      apply: (arr, options) => {\n        const { key, value } = options as { key: string, value: string }\n        return (arr as Record<string, unknown>[]).filter(item => item[key] === value)\n      },\n      options: {\n        key: '',\n        value: '',\n      },\n      quotedOptions: ['key'],\n      optionsKeys: ['key', 'value'],\n      optionsForm: (selected: Component, field: Field | null, options: Options, stateName: string) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.key || []}\n          name=\"key\"\n          root-type=${field?.typeIds[0] ?? ''}\n        >\n          <label slot=\"label\">Key to filter on</label>\n        </state-editor>\n        <p>==</p>\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          parent-name=${stateName}\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.value || []}\n          name=\"value\"\n        >\n          <label slot=\"label\">Value to match</label>\n        </state-editor>\n    `,\n    }, {\n    // FIXME: the fields used in the expression are not available in the query\n    //   // https://liquidjs.com/filters/where_exp.html\n    //   type: 'filter',\n    //   id: 'where_exp',\n    //   label: 'where_exp',\n    //   validate: (field: Field | null) => !!field && field.kind === 'list',\n    //   output: field => field,\n    //   apply: (arr, options) => {\n    //     const { objectName, expression } = options as { objectName: string, expression: string }\n    //     return (arr as Record<string, unknown>[]).filter(item => {\n    //       // eslint-disable-next-line no-new-func\n    //       const fn = new Function(objectName, `return ${expression}`)\n    //       return fn(item)\n    //     })\n    //   },\n    //   options: {\n    //     objectName: 'item',\n    //     expression: 'item.key === \"value\"',\n    //   },\n    //   quotedOptions: ['objectName', 'expression'],\n    //   optionsKeys: ['objectName', 'expression'],\n    //   optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n    //     <label>Object name\n    //       <input type=\"text\" name=\"objectName\" placeholder=\"Object name\" .value=${options.objectName || 'item'}/>\n    //     </label>\n    //     <label>Expression (JS)\n    //       <input type=\"text\" name=\"expression\" placeholder=\"Expression\" .value=${options.expression || 'item.key === \"value\"'}/>\n    //     </label>\n    //   `,\n    // }, {\n      // https://liquidjs.com/filters/find.html\n      type: 'filter',\n      id: 'find',\n      label: 'find',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: field => convertKind(field, 'list', 'object'),\n      apply: (arr, options) => {\n        const { key, value } = options as { key: string, value: string }\n        return (arr as Record<string, unknown>[]).find(item => item[key] === value)\n      },\n      options: {\n        key: '',\n        value: '',\n      },\n      quotedOptions: ['key'],\n      optionsKeys: ['key', 'value'],\n      optionsForm: (selected: Component, field: Field | null, options: Options, stateName: string) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.key || []}\n          name=\"key\"\n          root-type=${field?.typeIds[0] ?? ''}\n        >\n          <label slot=\"label\">Key to filter on</label>\n        </state-editor>\n        <p>==</p>\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          parent-name=${stateName}\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.value || []}\n          name=\"value\"\n        >\n          <label slot=\"label\">Value to match</label>\n        </state-editor>\n      `,\n    }, {\n    // FIXME: the fields used in the expression are not available in the query\n    //   // https://liquidjs.com/filters/find_exp.html\n    //   type: 'filter',\n    //   id: 'find_exp',\n    //   label: 'find_exp',\n    //   validate: (field: Field | null) => !!field && field.kind === 'list',\n    //   output: field => convertKind(field, 'list', 'object'),\n    //   apply: (arr, options) => {\n    //     const { objectName, expression } = options as { objectName: string, expression: string }\n    //     return (arr as Record<string, unknown>[]).find(item => {\n    //       // eslint-disable-next-line no-new-func\n    //       const fn = new Function(objectName, `return ${expression}`)\n    //       return fn(item)\n    //     })\n    //   },\n    //   options: {\n    //     objectName: 'item',\n    //     expression: 'item.key === \"value\"',\n    //   },\n    //   quotedOptions: ['objectName', 'expression'],\n    //   optionsKeys: ['objectName', 'expression'],\n    //   optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n    //     <label>Object name\n    //       <input type=\"text\" name=\"objectName\" placeholder=\"Object name\" .value=${options.objectName || 'item'}/>\n    //     </label>\n    //     <label>Expression (JS)\n    //       <input type=\"text\" name=\"expression\" placeholder=\"Expression\" .value=${options.expression || 'item.key === \"value\"'}/>\n    //     </label>\n    //   `,\n    // }, {\n      type: 'filter',\n      id: 'first',\n      label: 'first',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: (field: Field | null) => convertKind(field, 'list', 'object'),\n      apply: (arr) => (arr as unknown[])[0],\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'last',\n      label: 'last',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: (field: Field | null) => convertKind(field, 'list', 'object'),\n      apply: (arr) => (arr as unknown[])[(arr as unknown[]).length - 1],\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'join',\n      label: 'join',\n      validate: (field: Field | null) => isString(field, false) && field?.kind === 'list',\n      output: (field: Field | null) => convertKind(field, 'list', 'scalar'),\n      apply: (arr, options) => (arr as string[]).join(options.separator as string ?? ','),\n      options: {\n        separator: ',',\n      },\n      quotedOptions: ['separator'],\n      optionsForm: (selected: Component, field: Field | null, options: Options, stateName: string) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          parent-name=${stateName}\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.separator || []}\n          name=\"separator\"\n        >\n          <label slot=\"label\">Separator</label>\n        </state-editor>\n    `,\n    }, {\n      type: 'filter',\n      id: 'split',\n      label: 'split',\n      validate: (field: Field | null) => isString(field),\n      output: (field: Field | null) => convertKind(field, 'scalar', 'list'),\n      apply: (str, options) => (str as string).split(options.separator as string ?? ','),\n      options: {\n        separator: ',',\n      },\n      quotedOptions: ['separator'],\n      optionsForm: (selected: Component, field: Field | null, options: Options, stateName: string) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          parent-name=${stateName}\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.separator || []}\n          name=\"separator\"\n        >\n          <label slot=\"label\">Separator</label>\n        </state-editor>\n    `,\n    }, {\n      type: 'filter',\n      id: 'map',\n      label: 'map',\n      validate: (field: Field | null) => !!field && (field.kind === 'list' || field.kind === 'object'),\n      output: (field, options) => getFieldType(editor, field, options['key'] as string | undefined, null),\n      apply: (arr, options) => (arr as Record<string, unknown>[]).map(item => item[options.key as string]),\n      options: {\n        key: '',\n      },\n      quotedOptions: ['key'],\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.key || []}\n          name=\"key\"\n          root-type=${field?.typeIds[0] ?? ''}\n        >\n          <label slot=\"label\">Key to map</label>\n        </state-editor>\n      `,\n    // This is a dynamic key, but it's not working yet\n    // The problem is that output method can only return a single field, but we need to return a list of fields\n    // This was an attempt returning the first field only but this makes it impossible to select fields inside the result object and the query will not include the content of the fields we should return\n    // }, {\n    //   type: 'filter',\n    //   id: 'map-dynamic',\n    //   filterName: 'map',\n    //   label: 'map (dynamic key)',\n    //   validate: (field: Field | null) => !!field && (field.kind === 'list' || field.kind === 'object'),\n    //   // Any field can be chosen, so we return the first one\n    //   // Is multiple fields necessary? We will probably always have the same data structure there\n    //   output: (field) => field ? editor.DataSourceManager.getDataTree()\n    //     .getType(field.typeIds[0], field.dataSourceId ?? null)?.fields[0] ?? null : null,\n    //   apply: (arr, options) => (arr as Record<string, unknown>[]).map(item => item[options.key as string]),\n    //   options: {\n    //     key: '',\n    //   },\n    //   quotedOptions: [],\n    //   optionsForm: (field: Field | null, options: Options) => html`\n    //     <state-editor\n    //       no-filters\n    //       data-is-input\n    //       class=\"ds-state-editor__options\"\n    //       value=${options.key || []}\n    //       name=\"key\"\n    //       ${ref(el => el && (el as StateEditor).setEditor(editor))}\n    //     >\n    //       <label slot=\"label\">Key to map (dyanamic)</label>\n    //     </state-editor>\n    //   `,\n    }, {\n      type: 'filter',\n      id: 'reverse',\n      label: 'reverse',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: field => field,\n      apply: (arr) => (arr as unknown[]).reverse(),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'size',\n      label: 'size',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: () => ({\n        id: 'Int',\n        label: 'Int',\n        typeIds: ['Int'],\n        kind: 'scalar',\n      }),\n      apply: (arr) => (arr as unknown[]).length,\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'at',\n      label: 'at',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: field => convertKind(field, 'list', 'object'),\n      apply: (arr, options) => (arr as unknown[])[options.index as number],\n      options: {\n        index: 0,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Index\n          <input type=\"number\" name=\"index\" placeholder=\"Index\" .value=${options.index}/>\n        </label>\n    `,\n    }, {\n      type: 'filter',\n      id: 'slice',\n      label: 'slice',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: field => field,\n      apply: (arr, options) => (arr as unknown[]).slice(options.start as number, options.end as number),\n      options: {\n        start: 0,\n        end: 0,\n      },\n      optionsKeys: ['start', 'end'],\n      optionsForm: (selected: Component, field: Field | null, options: Options, stateName: string) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          parent-name=${stateName}\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.start || []}\n          name=\"start\"\n        >\n          <label slot=\"label\">Start index</label>\n        </state-editor>\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          parent-name=${stateName}\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.end || []}\n          name=\"end\"\n        >\n          <label slot=\"label\">End index</label>\n        </state-editor>\n      `,\n    }, {\n      type: 'filter',\n      id: 'sort',\n      label: 'sort',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: field => field,\n      apply: (arr, options) => (arr as Record<string, string | number>[]).sort((a, b) => {\n        if (a[options.key as string] < b[options.key as string]) {\n          return -1\n        }\n        if (a[options.key as string] > b[options.key as string]) {\n          return 1\n        }\n        return 0\n      }),\n      quotedOptions: ['key'],\n      options: {\n        key: '',\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          no-filters\n          data-is-input\n          class=\"ds-state-editor__options\"\n          value=${options.key || []}\n          name=\"key\"\n          root-type=${field?.typeIds[0] ?? ''}\n        >\n          <label slot=\"label\">Key to sort on</label>\n        </state-editor>\n      `,\n    }, {\n      type: 'filter',\n      id: 'plus',\n      label: 'plus',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num, options) => (num as number) + (options.value as number),\n      options: {\n        value: 0,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Value\n          <input type=\"number\" name=\"value\" placeholder=\"Value\" .value=${options.value}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'minus',\n      label: 'minus',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num, options) => (num as number) - (options.value as number),\n      options: {\n        value: 0,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Value\n          <input type=\"number\" name=\"value\" placeholder=\"Value\" .value=${options.value}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'times',\n      label: 'times',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num, options) => (num as number) * (options.value as number),\n      options: {\n        value: 0,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Value\n          <input type=\"number\" name=\"value\" placeholder=\"Value\" .value=${options.value}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'divided_by',\n      label: 'divided_by',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num, options) => (num as number) / (options.value as number),\n      options: {\n        value: 0,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Value\n          <input type=\"number\" name=\"value\" placeholder=\"Value\" .value=${options.value}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'modulo',\n      label: 'modulo',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num, options) => (\n        (num as number) % (options.value as number)\n      ),\n      options: {\n        value: 0,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Value\n          <input type=\"number\" name=\"value\" placeholder=\"Value\" .value=${options.value}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'abs',\n      label: 'abs',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num) => Math.abs(num as number),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'ceil',\n      label: 'ceil',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num) => Math.ceil(num as number),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'floor',\n      label: 'floor',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num) => Math.floor(num as number),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'round',\n      label: 'round',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num) => Math.round(num as number),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'at_least',\n      label: 'at_least',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num, options) => Math.max(num as number, options.value as number),\n      options: {\n        value: 0,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Value\n          <input type=\"number\" name=\"value\" placeholder=\"Value\" .value=${options.value}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'at_most',\n      label: 'at_most',\n      validate: (field: Field | null) => isNumber(field),\n      output: type => type,\n      apply: (num, options) => Math.min(num as number, options.value as number),\n      options: {\n        value: 0,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Value\n          <input type=\"number\" name=\"value\" placeholder=\"Value\" .value=${options.value}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'compact',\n      label: 'compact',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: field => field,\n      apply: (arr) => (arr as unknown[]).filter(item => !!item),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'default',\n      label: 'default',\n      validate: (field: Field | null) => !!field && field.kind === 'scalar',\n      output: field => field,\n      apply: (value, options) => value || options.value,\n      options: {\n        value: '',\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options, stateName: string) => html`\n        <state-editor\n          .selected=${selected}\n          .editor=${editor}\n          name=\"value\"\n          parent-name=${stateName}\n          data-is-input\n          no-filters\n          class=\"ds-state-editor__options\"\n          value=${options.value || '[]'}\n        >\n          <label slot=\"label\">Default value</label>\n        </state-editor>\n      `,\n    }, {\n      type: 'filter',\n      id: 'escape',\n      label: 'escape',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str) => (str as string).replace(/\"/g, '\\\\\"'),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'escape_once',\n      label: 'escape_once',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str) => (str as string).replace(/\"/g, '\\\\\"'),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'newline_to_br',\n      label: 'newline_to_br',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str) => (str as string).replace(/\\n/g, '<br />'),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'strip_newlines',\n      label: 'strip_newlines',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str) => (str as string).replace(/\\n/g, ''),\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'truncate',\n      label: 'truncate',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => (str as string).slice(0, options.length as number),\n      options: {\n        length: 50,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Length\n          <input type=\"number\" name=\"length\" placeholder=\"Length\" .value=${options.length}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'truncatewords',\n      label: 'truncatewords',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => (str as string).split(' ').slice(0, options.length as number).join(' '),\n      options: {\n        length: 15,\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Length\n          <input type=\"number\" name=\"length\" placeholder=\"Length\" .value=${options.length}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'date',\n      label: 'date',\n      validate: (field: Field | null) => isDate(field),\n      output: () => ({\n        id: 'String',\n        label: 'String',\n        typeIds: ['String'],\n        kind: 'scalar',\n      }),\n      apply: (date, options) => {\n        const d = new Date(date as string)\n        return d.toLocaleDateString(options.format as string)\n      },\n      options: {\n        format: '%a, %b %d, %y', // Fri, Jul 17, 15\n        timeZone: '',\n      },\n      optionsKeys: ['format', 'timeZone'],\n      quotedOptions: ['format', 'timeZone'],\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Format\n          <input type=\"text\" name=\"format\" placeholder=\"Format\" .value=${options.format || '%a, %b %d, %y'}/>\n        </label>\n        <label>Time zone\n          <input type=\"text\" name=\"timeZone\" placeholder=\"Time zone\" .value=${options.timeZone || '' }/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'replace',\n      label: 'replace',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => (str as string).replace(options.search as string, options.replace as string),\n      options: {\n        search: '',\n        replace: '',\n      },\n      quotedOptions: ['search', 'replace'],\n      optionsKeys: ['search', 'replace'],\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Search\n          <input type=\"text\" name=\"search\" placeholder=\"Search\" .value=${options.search}/>\n        </label>\n        <label>Replace\n          <input type=\"text\" name=\"replace\" placeholder=\"Replace\" .value=${options.replace}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'replace_first',\n      label: 'replace_first',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => (str as string).replace(options.search as string, options.replace as string),\n      options: {\n        search: '',\n        replace: '',\n      },\n      quotedOptions: ['search', 'replace'],\n      optionsKeys: ['search', 'replace'],\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Search\n          <input type=\"text\" name=\"search\" placeholder=\"Search\" .value=${options.search}/>\n        </label>\n        <label>Replace\n          <input type=\"text\" name=\"replace\" placeholder=\"Replace\" .value=${options.replace}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'replace_last',\n      label: 'replace_last',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => {\n        const index = (str as string).lastIndexOf(options.search as string)\n        if (index === -1) return str\n        return (str as string).slice(0, index) + (options.replace as string) + (str as string).slice(index + (options.search as string).length)\n      },\n      options: {\n        search: '',\n        replace: '',\n      },\n      quotedOptions: ['search', 'replace'],\n      optionsKeys: ['search', 'replace'],\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Search\n          <input type=\"text\" name=\"search\" placeholder=\"Search\" .value=${options.search}/>\n        </label>\n        <label>Replace\n          <input type=\"text\" name=\"replace\" placeholder=\"Replace\" .value=${options.replace}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'remove',\n      label: 'remove',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => (str as string).replace(options.search as string, ''),\n      options: {\n        search: '',\n      },\n      quotedOptions: ['search'],\n      optionsKeys: ['search'],\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Search\n          <input type=\"text\" name=\"search\" placeholder=\"Search\" .value=${options.search}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'remove_first',\n      label: 'remove_first',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => (str as string).replace(options.search as string, ''),\n      options: {\n        search: '',\n      },\n      quotedOptions: ['search'],\n      optionsKeys: ['search'],\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Search\n          <input type=\"text\" name=\"search\" placeholder=\"Search\" .value=${options.search}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'remove_last',\n      label: 'remove_last',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str, options) => {\n        const index = (str as string).lastIndexOf(options.search as string)\n        if (index === -1) return str\n        return (str as string).slice(0, index) + (str as string).slice(index + (options.search as string).length)\n      },\n      options: {\n        search: '',\n      },\n      quotedOptions: ['search'],\n      optionsKeys: ['search'],\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Search\n          <input type=\"text\" name=\"search\" placeholder=\"Search\" .value=${options.search}/>\n        </label>\n      `,\n    }, {\n      type: 'filter',\n      id: 'downcase',\n      label: 'downcase',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str) => str ? (str as string).toLowerCase() : '',\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'upcase',\n      label: 'upcase',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str) => str ? (str as string).toUpperCase() : '',\n      options: {},\n    }, {\n      type: 'filter',\n      id: 'capitalize',\n      label: 'capitalize',\n      validate: (field: Field | null) => isString(field),\n      output: type => type,\n      apply: (str) => (str as string).charAt(0).toUpperCase() + (str as string).slice(1).toLowerCase(),\n      options: {},\n    }, {\n      // Pick a random value from an array. Optionally, pick multiple values, default is 1 value.\n      // https://jekyllrb.com/docs/liquid/filters/\n      type: 'filter',\n      id: 'sample',\n      label: 'sample',\n      validate: (field: Field | null) => !!field && field.kind === 'list',\n      output: field => field,\n      apply: (arr, options) => {\n        const count = parseInt(options.count as string || '1')\n        console.log({count, options})\n        return (arr as unknown[])\n          .sort(() => 0.5 - Math.random())\n          .slice(0, count)\n      },\n      options: {\n        count: '1',\n      },\n      optionsForm: (selected: Component, field: Field | null, options: Options) => html`\n        <label>Count\n          <input type=\"number\" name=\"count\" placeholder=\"Count\" .value=${options.count}/>\n        </label>\n      `,\n    },\n  ]\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { DataSourceId, Property, StoredToken, ComponentExpression } from '../types'\nimport { DataTree } from './DataTree'\nimport { getAllDataSources } from './dataSourceRegistry'\nimport { Page, Editor } from 'grapesjs'\nimport { getComponentDebug, NOTIFICATION_GROUP } from '../utils'\n\n/**\n * Get page query for both preview and production use\n * Used by preview system and 11ty site generation\n * @param page - The page to get queries for\n * @param editor - The GrapesJS editor instance\n * @param dataTree - The DataTree instance to use for query generation\n */\nexport function getPageQuery(page: Page, editor: Editor, dataTree: DataTree): Record<DataSourceId, string> {\n  const expressions = dataTree.getPageExpressions(page)\n  const dataSources = getAllDataSources()\n\n  return dataSources\n    .map(ds => {\n      if (!ds.isConnected()) {\n        console.error('The data source is not yet connected, the value for this page can not be loaded')\n        return {\n          dataSourceId: ds.id.toString(),\n          query: '',\n        }\n      }\n\n      const dsExpressions = expressions\n        // Resolve all states\n        .map((componentExpression: ComponentExpression) => ({\n          component: componentExpression.component,\n          expression: componentExpression.expression.flatMap((token: StoredToken) => {\n            switch(token.type) {\n            case 'property':\n            case 'filter':\n              return token\n            case 'state': {\n              const resolved = dataTree.resolveState(token, componentExpression.component)\n              if (!resolved) {\n                editor.runCommand('notifications:add', {\n                  type: 'error',\n                  group: NOTIFICATION_GROUP,\n                  message: `Unable to resolve state ${JSON.stringify(token)}. State defined on component ${getComponentDebug(componentExpression.component)}`,\n                  componentId: componentExpression.component.getId(),\n                })\n                throw new Error(`Unable to resolve state ${JSON.stringify(token)}. State defined on component ${getComponentDebug(componentExpression.component)}`)\n              }\n              return resolved\n            }\n            }\n          })\n        }))\n        // Keep only the expressions for the current data source\n        .filter((componentExpression: ComponentExpression) => {\n          const e = componentExpression.expression\n          if(e.length === 0) return false\n          // We resolved all states\n          // An expression can not start with a filter\n          // So this is a property\n          const first = e[0] as Property\n          // Keep only the expressions for the current data source\n          return first?.dataSourceId === ds.id\n        })\n\n      const trees = dataTree.toTrees(dsExpressions, ds.id)\n      if(trees.length === 0) {\n        return {\n          dataSourceId: ds.id.toString(),\n          query: '',\n        }\n      }\n\n      const query = ds.getQuery(trees)\n      return {\n        dataSourceId: ds.id.toString(),\n        query,\n      }\n    })\n    .filter(obj => !!obj.query)\n    .reduce((acc, { dataSourceId, query }) => {\n      acc[dataSourceId] = query\n      return acc\n    }, {} as Record<DataSourceId, string>)\n}\n\n/**\n * Build queries for multiple pages\n * Useful for batch operations like site generation\n * @param pages - Array of pages to build queries for\n * @param editor - The GrapesJS editor instance\n * @param dataTree - The DataTree instance to use for query generation\n */\nexport function buildPageQueries(pages: Page[], editor: Editor, dataTree: DataTree): Record<string, Record<DataSourceId, string>> {\n  return pages.reduce((acc, page) => {\n    acc[page.getId()] = getPageQuery(page, editor, dataTree)\n    return acc\n  }, {} as Record<string, Record<DataSourceId, string>>)\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { DataSourceId, DATA_SOURCE_DATA_LOAD_START, DATA_SOURCE_DATA_LOAD_END, DATA_SOURCE_DATA_LOAD_CANCEL } from '../types'\nimport { DataTree } from './DataTree'\nimport { getAllDataSources } from './dataSourceRegistry'\nimport { getPageQuery } from './queryBuilder'\nimport { Page, Editor } from 'grapesjs'\nimport { NOTIFICATION_GROUP } from '../utils'\n\n/**\n * Preview data loader state\n */\ninterface PreviewDataLoaderState {\n  editor: Editor\n  dataTree: DataTree\n  currentUpdatePid: number\n  lastQueries: Record<DataSourceId, string>\n}\n\n// Global loader instance\nlet globalLoader: PreviewDataLoaderState | null = null\n\n/**\n * Initialize the preview data loader\n */\nexport function initializePreviewDataLoader(editor: Editor, dataTree: DataTree): void {\n  globalLoader = {\n    editor,\n    dataTree,\n    currentUpdatePid: 0,\n    lastQueries: {}\n  }\n}\n\n/**\n * Get the global loader (throws if not initialized)\n */\nfunction getLoader(): PreviewDataLoaderState {\n  if (!globalLoader) {\n    throw new Error('PreviewDataLoader not initialized. Call initializePreviewDataLoader first.')\n  }\n  return globalLoader\n}\n\n/**\n * Compare two query objects to see if they are equal\n */\nfunction areQueriesEqual(queries1: Record<DataSourceId, string>, queries2: Record<DataSourceId, string>): boolean {\n  const keys1 = Object.keys(queries1).sort()\n  const keys2 = Object.keys(queries2).sort()\n  \n  // Check if they have the same number of keys\n  if (keys1.length !== keys2.length) {\n    return false\n  }\n  \n  // Check if all keys are the same\n  if (!keys1.every(key => keys2.includes(key))) {\n    return false\n  }\n  \n  // Check if all values are the same\n  return keys1.every(key => queries1[key] === queries2[key])\n}\n\n/**\n * Load preview data for the current page\n * @param forceRefresh - If true, bypass query comparison and force refresh\n */\nexport async function loadPreviewData(forceRefresh: boolean = false): Promise<void> {\n  const loader = getLoader()\n  loader.editor.trigger(DATA_SOURCE_DATA_LOAD_START)\n  \n  const page = loader.editor.Pages.getSelected()\n  if (!page) return\n  \n  // Get current queries\n  const currentQueries = getPageQuery(page, loader.editor, loader.dataTree)\n  \n  // Compare with last queries to see if we need to refresh\n  const queriesChanged = !areQueriesEqual(loader.lastQueries, currentQueries)\n  \n  if (!forceRefresh && !queriesChanged) {\n    // Queries haven't changed, no need to refresh data sources\n    // But still trigger load end to maintain expected event flow\n    loader.editor.trigger(DATA_SOURCE_DATA_LOAD_END, loader.dataTree.previewData)\n    return\n  }\n  \n  // Update last queries\n  loader.lastQueries = { ...currentQueries }\n  \n  loader.currentUpdatePid++\n  const data = await fetchPagePreviewData(page)\n  \n  if (data !== 'interrupted') {\n    loader.editor.trigger(DATA_SOURCE_DATA_LOAD_END, data)\n  } else {\n    console.warn(`Preview data update process for PID ${loader.currentUpdatePid} was interrupted.`)\n    loader.editor.trigger(DATA_SOURCE_DATA_LOAD_CANCEL, data)\n  }\n}\n\n/**\n * Fetch preview data for a specific page\n * @param page - The page object for which preview data needs to be fetched\n * @return The preview data returned by all data sources, or 'interrupted' if cancelled\n */\nexport async function fetchPagePreviewData(page: Page): Promise<Record<DataSourceId, unknown> | 'interrupted'> {\n  const loader = getLoader()\n  const myPid = loader.currentUpdatePid\n  const queries = getPageQuery(page, loader.editor, loader.dataTree)\n  \n  // Reset preview data\n  loader.dataTree.previewData = {}\n\n  try {\n    const results = await Promise.all(\n      Object.entries(queries)\n        .map(async ([dataSourceId, query]) => {\n          if (myPid !== loader.currentUpdatePid) return\n          \n          const ds = getAllDataSources().find(ds => ds.id === dataSourceId)\n          if (!ds) {\n            console.error(`Data source ${dataSourceId} not found`)\n            return null\n          }\n          \n          if (!ds.isConnected()) {\n            console.warn(`Data source ${dataSourceId} is not connected.`)\n            return null\n          }\n          \n          try {\n            const value = await ds.fetchValues(query)\n            loader.dataTree.previewData[dataSourceId] = value\n            return { dataSourceId, value }\n          } catch (err) {\n            console.error(`Error fetching preview data for data source ${dataSourceId}:`, err)\n            loader.editor.runCommand('notifications:add', {\n              type: 'error',\n              group: NOTIFICATION_GROUP,\n              message: `Error fetching preview data for data source ${dataSourceId}: ${err}`,\n            })\n            return null\n          }\n        })\n    )\n\n    if (myPid !== loader.currentUpdatePid) return 'interrupted'\n\n    return results\n      .filter(result => result !== null)\n      .reduce((acc, result) => {\n        const { dataSourceId, value } = result!\n        acc[dataSourceId] = value\n        return acc\n      }, {} as Record<DataSourceId, unknown>)\n  } catch (err) {\n    console.error('Error while fetching preview data:', err)\n    loader.editor.runCommand('notifications:add', {\n      type: 'error',\n      group: NOTIFICATION_GROUP,\n      message: `Error while fetching preview data: ${err}`,\n    })\n    return {}\n  }\n}\n\n/**\n * Get current preview data\n */\nexport function getPreviewData(): Record<DataSourceId, unknown> {\n  return getLoader().dataTree.previewData\n}\n\n/**\n * Clear preview data\n */\nexport function clearPreviewData(): void {\n  getLoader().dataTree.previewData = {}\n}","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { COMPONENT_STATE_CHANGED, DATA_SOURCE_CHANGED, DATA_SOURCE_ERROR, DATA_SOURCE_READY, Filter, IDataSource, DataSourceEditorOptions } from '../types'\nimport { DataTree } from './DataTree'\nimport { Component, Editor } from 'grapesjs'\nimport { StoredState, onStateChange } from './state'\nimport getLiquidFilters from '../filters/liquid'\nimport {\n  initializeDataSourceRegistry,\n  getAllDataSources,\n  addDataSource as registryAddDataSource,\n  removeDataSource as registryRemoveDataSource,\n  setDataSources,\n  dataSourcesToJSON\n} from './dataSourceRegistry'\nimport { initializePreviewDataLoader, loadPreviewData } from './previewDataLoader'\n\n/**\n * Data source manager state\n */\nexport interface DataSourceManagerState {\n  dataTree: DataTree\n  editor: Editor\n  options: DataSourceEditorOptions\n  eventListeners: {\n    dataChangedBinded: (e?: CustomEvent) => void\n    dataSourceReadyBinded: (ds: IDataSource) => void\n    dataSourceErrorBinded: (message: string, ds: IDataSource) => void\n  }\n}\n\n// Global manager instance\nlet globalManager: DataSourceManagerState | null = null\n\n/**\n * Initialize filters from options\n */\nfunction initializeFilters(editor: Editor, options: DataSourceEditorOptions): Filter[] {\n  if (typeof options.filters === 'string') {\n    return [\n      ...getLiquidFilters(editor),\n    ]\n  } else {\n    return (options.filters as Filter[])\n      .flatMap((filter: Partial<Filter> | string): Filter[] => {\n        if (typeof filter === 'string') {\n          switch (filter) {\n          case 'liquid': return getLiquidFilters(editor)\n          default: throw new Error(`Unknown filters ${filter}`)\n          }\n        } else {\n          return [{\n            ...filter as Partial<Filter>,\n            type: 'filter',\n          } as Filter]\n        }\n      })\n      .map((filter: Filter) => ({ ...filter, type: 'filter' })) as Filter[]\n  }\n}\n\n/**\n * Initialize the global data source manager\n */\nexport function initializeDataSourceManager(\n  dataSources: IDataSource[],\n  editor: Editor,\n  options: DataSourceEditorOptions\n): void {\n  const filters = initializeFilters(editor, options)\n\n  // Initialize the registry\n  initializeDataSourceRegistry(editor)\n\n  // Set initial data sources\n  setDataSources(dataSources)\n\n  // Create data tree\n  const dataTree = new DataTree(editor, {\n    dataSources: getAllDataSources(),\n    filters,\n  })\n\n  // Initialize preview data loader\n  initializePreviewDataLoader(editor, dataTree)\n\n  // Create bound event handlers\n  const eventListeners = {\n    dataChangedBinded: (e?: CustomEvent) => {\n      editor.trigger(DATA_SOURCE_CHANGED, e?.detail)\n    },\n    dataSourceReadyBinded: (ds: IDataSource) => {\n      editor.trigger(DATA_SOURCE_READY, ds)\n      loadPreviewData(true) // force refresh when data source becomes ready\n    },\n    dataSourceErrorBinded: (message: string, ds: IDataSource) => {\n      editor.trigger(DATA_SOURCE_ERROR, message, ds)\n    }\n  }\n\n  globalManager = {\n    dataTree,\n    editor,\n    options,\n    eventListeners\n  }\n\n  // Set up event listeners\n  setupEventListeners()\n\n  // Listen for data source changes and re-setup event listeners\n  editor.on(DATA_SOURCE_CHANGED, () => {\n    setupEventListeners()\n  })\n\n  // Relay state changes to the editor\n  onStateChange((state: StoredState | null, component: Component) => {\n    loadPreviewData().then(() => editor.trigger(COMPONENT_STATE_CHANGED, { state, component }))\n  })\n}\n\n/**\n * Get the global manager (throws if not initialized)\n */\nfunction getManager(): DataSourceManagerState {\n  if (!globalManager) {\n    throw new Error('DataSourceManager not initialized. Call initializeDataSourceManager first.')\n  }\n  return globalManager\n}\n\n/**\n * Add a data source\n */\nexport async function addDataSource(dataSource: IDataSource): Promise<void> {\n  registryAddDataSource(dataSource)\n  setupEventListeners()\n}\n\n/**\n * Remove a data source\n */\nexport function removeDataSource(dataSource: IDataSource): void {\n  registryRemoveDataSource(dataSource)\n  setupEventListeners()\n  loadPreviewData(true) // force refresh when data source is removed\n}\n\n/**\n * Refresh all data sources data\n */\nexport function refreshDataSources(): void {\n  loadPreviewData(true) // force refresh when explicitly requested\n}\n\n/**\n * Reset all data sources\n */\nexport function resetDataSources(dataSources: IDataSource[]): void {\n  setDataSources(dataSources)\n  setupEventListeners()\n}\n\n/**\n * Get the data tree\n */\nexport function getDataTree(): DataTree {\n  return getManager().dataTree\n}\n\n/**\n * Get filters\n */\nexport function getFilters(): Filter[] {\n  return getManager().dataTree.filters\n}\n\n/**\n * Set filters\n */\nexport function setFilters(filters: Filter[]): void {\n  getManager().dataTree.filters = filters\n}\n\n/**\n * Convert to JSON for storage\n */\nexport function toJSON(): unknown[] {\n  return dataSourcesToJSON()\n}\n\n/**\n * Set up event listeners on all data sources\n */\nfunction setupEventListeners(): void {\n  const manager = getManager()\n  const dataSources = getAllDataSources()\n\n  // Update the data tree with current data sources\n  manager.dataTree.dataSources = [...dataSources]\n\n  // Remove all listeners\n  dataSources.forEach((dataSource: IDataSource) => {\n    if (typeof dataSource.off === 'function') {\n      dataSource.off(DATA_SOURCE_READY, manager.eventListeners.dataSourceReadyBinded)\n      dataSource.off(DATA_SOURCE_CHANGED, manager.eventListeners.dataChangedBinded)\n      dataSource.off(DATA_SOURCE_ERROR, manager.eventListeners.dataSourceErrorBinded)\n    }\n  })\n\n  // Add listeners on all data sources\n  dataSources.forEach((dataSource: IDataSource) => {\n    if (typeof dataSource.on === 'function') {\n      dataSource.on(DATA_SOURCE_READY, manager.eventListeners.dataSourceReadyBinded)\n      dataSource.on(DATA_SOURCE_CHANGED, manager.eventListeners.dataChangedBinded)\n      dataSource.on(DATA_SOURCE_ERROR, manager.eventListeners.dataSourceErrorBinded)\n    }\n  })\n}\n","import { DataSourceEditorOptions, COMMAND_REFRESH, COMMAND_PREVIEW_ACTIVATE, COMMAND_PREVIEW_DEACTIVATE, COMMAND_PREVIEW_REFRESH } from \"./types\"\nimport { refreshDataSources } from \"./model/dataSourceManager\"\nimport { Editor } from \"grapesjs\"\n\n// Global state for preview activation\nlet isPreviewActive = true\n\nexport function setPreviewActive(active: boolean) {\n  isPreviewActive = active\n}\n\nexport function getPreviewActive(): boolean {\n  return isPreviewActive\n}\n\n// Function to force GrapesJS to re-render all components\nfunction forceRender(editor: Editor) {\n  // Force a complete re-render by refreshing the canvas\n  editor.refresh()\n}\n\n// GrapesJS plugin to add commands to the editor\nexport default (editor: Editor, opts: DataSourceEditorOptions) => {\n  // Set initial preview state\n  isPreviewActive = opts.previewActive\n\n  // Refresh all data sources\n  editor.Commands.add(COMMAND_REFRESH, {\n    run() {\n      refreshDataSources()\n    },\n  })\n\n  // Activate preview mode\n  editor.Commands.add(COMMAND_PREVIEW_ACTIVATE, {\n    run() {\n      if (!isPreviewActive) {\n        isPreviewActive = true\n        // Force GrapesJS to re-render to show preview data\n        forceRender(editor)\n        console.log('📊 Data source preview activated')\n      }\n    },\n  })\n\n  // Deactivate preview mode\n  editor.Commands.add(COMMAND_PREVIEW_DEACTIVATE, {\n    run() {\n      if (isPreviewActive) {\n        isPreviewActive = false\n        // Force GrapesJS to re-render to show original content\n        forceRender(editor)\n        console.log('📊 Data source preview deactivated')\n      }\n    },\n  })\n\n  // Refresh preview data\n  editor.Commands.add(COMMAND_PREVIEW_REFRESH, {\n    run() {\n      if (isPreviewActive) {\n        // Refresh data sources and force re-render\n        refreshDataSources()\n        console.log('📊 Data source preview refreshed')\n      } else {\n        console.log('📊 Preview is deactivated - use preview:activate first')\n      }\n    },\n  })\n}\n","import GraphQL, { GraphQLOptions } from \"./datasources/GraphQL\"\nimport { IDataSource } from \"./types\"\nimport { resetDataSources, refreshDataSources } from \"./model/dataSourceManager\"\nimport { getAllDataSources, addDataSource } from \"./model/dataSourceRegistry\"\nimport { Editor } from \"grapesjs\"\n\nexport default (editor: Editor) => {\n  // Save and load data sources\n  editor.on('storage:start:store', (data: any) => {\n    data.dataSources = getAllDataSources()\n      .filter((ds: IDataSource) => typeof ds.readonly === 'undefined' || ds.readonly === false)\n      .map((ds: IDataSource) => ({\n        id: ds.id,\n        label: ds.label,\n        url: ds.url,\n        type: ds.type,\n        method: ds.method,\n        headers: ds.headers,\n        readonly: ds.readonly,\n        hidden: ds.hidden\n      }))\n  })\n\n  editor.on('storage:end:load', async (data: { dataSources: GraphQLOptions[] }) => {\n    // Connect the data sources\n    const newDataSources: IDataSource[] = (data.dataSources || [] as GraphQLOptions[])\n      .map((ds: GraphQLOptions) => new GraphQL(ds))\n\n    await Promise.all(newDataSources.map((ds: IDataSource) => ds.connect()))\n\n    // Get all data sources\n    const dataSources = getAllDataSources()\n      // Keep only data sources from the config\n      .filter((ds: IDataSource) => ds.readonly === true)\n\n    // Reset the data sources to the original config\n    resetDataSources(dataSources)\n\n    // Add the new data sources\n    await Promise.all(newDataSources.map(ds => {\n      addDataSource(ds)\n      return ds.connect()\n    }))\n    refreshDataSources()\n  })\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nexport const OPTIONS_STYLES = `\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    padding: 5px;\n    color: var(--ds-tertiary);\n    min-width: 300px;\n  }\n  form label {\n    text-align: left;\n    margin-top: 5px;\n  }\n  form .buttons {\n    display: flex;\n    justify-content: flex-end;\n    margin: 5px 0;\n    width: 100%;\n  }\n  form input {\n    padding: 4px;\n    background-color: transparent;\n    border-radius: 2px;\n    color: var(--ds-tertiary);\n    border: 1px solid rgba(0,0,0,.15);\n  }\n  form .buttons input {\n    margin-left: 5px;\n    cursor: pointer;\n    padding: 4px 10px;\n    background-color: var(--ds-button-bg);\n  }\n  form .buttons input[type=\"reset\"] {\n    border-color: transparent;\n  }\n  form .buttons input:hover {\n    color: var(--ds-primary);\n  }\n  form input.ds-expression-input__fixed {\n    color: black;\n  }\n`\nexport const PROPERTY_STYLES = `\n  :root {\n    --ds-primary: #d278c9;\n    --ds-secondary: #ddd;\n    --ds-tertiary: #3d3d3d;\n    --ds-highlight: #d278c9;\n    --ds-lowlight: #363636;\n    --ds-button-color: #fff;\n    --ds-button-bg: #606060;\n    --ds-button-border: var(--ds-button-bg);\n\n    --expression-input-dirty-background-color: var(--ds-lowlight);\n    --expression-input-dirty-border-color: var(--ds-lowlight);\n    --expression-input-dirty-color: var(--ds-highlight);\n    --expression-input-active-color: var(--ds-secondary);\n    --expression-input-active-background-color: var(--ds-button-bg);\n    --popin-dialog-background: var(--ds-secondary);\n    --popin-dialog-color: var(--ds-tertiary);\n    --popin-dialog-header-background: transparent;\n    --popin-dialog-body-background: transparent;\n    --popin-dialog-footer-background: transparent;\n    --expression-input-placeholder-margin: 0 10px;\n    --expression-input-item-button-margin: 0;\n    --expression-input-item-button-padding: 2px;\n    --expression-input-item-button-border-radius: 50%;\n    --expression-input-item-button-width: 20px;\n    --expression-input-item-button-height: 20px;\n    --expression-input-item-button-background-color: transparent;\n    --expression-input-item-button-color: var(--ds-button-color);\n    --expression-input-separator-color: var(--ds-button-color);\n    --expression-input-separator-font-size: 0.7em;\n    --expression-input-separator-margin: 0;\n    --expression-input-separator-padding: 0 3px 0 1px;\n    --expression-input-item-arrow-padding: 5px 5px 0 5px;\n    --expression-input-values-li-icon-margin-right: 0;\n    /*\n    --popin-dialog-header-color: #333;\n    --popin-dialog-body-color: #666;\n    --popin-dialog-footer-color: #333;\n    --popin-dialog-header-border-bottom: none;\n    --popin-dialog-footer-border-top: none;\n    --popin-dialog-header-padding: 0;\n    --popin-dialog-body-padding: 5px;\n    --popin-dialog-footer-padding: 0;\n    */\n  }\n  .ds-state-editor__options {\n    --ds-secondary: #363636;\n    --ds-tertiary: #ffffff;\n    --ds-lowlight: #ddd;\n    --ds-button-color: #606060;\n    --ds-button-bg: #fff;\n    --expression-input-dirty-background-color: var(--ds-lowlight);\n    --expression-input-dirty-border-color: var(--ds-lowlight);\n    --expression-input-dirty-color: var(--ds-highlight);\n    --expression-input-active-color: var(--ds-secondary);\n    --expression-input-active-background-color: var(--ds-button-bg);\n  }\n  .gjs-traits-label {\n    font-family: \"Ubuntu\", sans-serif;\n    font-size: 0.85rem;\n    padding: 9px 10px 9px 20px;\n    text-align: left;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  expression-input {\n    padding: 10px;\n    display: block;\n  }\n  expression-input::part(separator__delete) {\n    border-right: 1px solid var(--ds-button-border);\n    height: 20px;\n  }\n  expression-input::part(add-button) {\n    background-color: rgba(255,255,255,.15);\n    border-radius: 2px;\n    padding: 3px;\n    margin: 0;\n    border: 1px solid rgba(0,0,0,.15);\n    width: 24px;\n    height: 24px;\n    box-sizing: border-box;\n    cursor: pointer;\n  }\n  expression-input::part(delete-button) {\n    margin: 0;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    color: var(--ds-button);\n  }\n  expression-input::part(header) {\n    border: none;\n  }\n  expression-input::part(type) {\n    padding-bottom: 0;\n    padding-top: 4px;\n    display: none;\n  }\n  expression-input::part(name) {\n    font-weight: normal;\n    padding-bottom: 0;\n    padding-top: 0;\n    padding-left: 5px;\n  }\n  expression-input::part(property-input) {\n    padding: 4px;\n    border: medium;\n    flex: 1 1 auto;\n    background-color: transparent;\n    color: var(--ds-secondary);\n  }\n  expression-input::part(property-container) {\n    background-color: var(--ds-lowlight);\n    border-radius: 2px;\n    box-sizing: border-box;\n    padding: 5px;\n    margin: 5px 0;\n  }\n  expression-input::part(scroll-container) {\n    overflow: auto;\n    box-sizing: border-box;\n\n    /* inner shadow to make it visible when content is overflowing */\n    box-shadow: inset 0 0 5px 0 rgba(0,0,0,.2);\n\n  }\n  expression-input::part(steps-container) {\n    display: flex;\n    align-items: center;\n    background-color: rgba(0,0,0,.2);\n    border-radius: 2px;\n    padding: 5px;\n    margin: 5px 0;\n    width: max-content;\n    min-width: 100%;\n    box-sizing: border-box;\n  }\n  expression-input::part(dirty-icon) {\n    cursor: pointer;\n    margin: 0 10px;\n    color: var(--ds-highlight);\n  }\n  expression-input::part(dirty-icon) {\n    color: var(--ds-highlight);\n    vertical-align: bottom;\n    display: inline-flex;\n    margin: 0;\n  }\n  expression-input::part(expression-input-item) {\n    border: 1px solid rgba(0,0,0,.15);\n    background-color: rgba(255,255,255,.15);\n    border-radius: 2px;\n    margin-right: 5px;\n  }\n  .ds-section {\n    &:last-child {\n      margin-bottom: 100px;\n    }\n    details {\n      margin: 2px;\n      padding: 10px;\n      padding-top: 0;\n      background-color: transparent;\n      border-radius: 2px;\n      color: var(--ds-secondary);\n      text-align: left;\n    }\n    details[open] {\n      background-color: var(--ds-tertiary);\n    }\n    details summary {\n      color: var(--ds-secondary);\n      cursor: pointer;\n      padding: 10px 0;\n    }\n    details a {\n      color: var(--ds-link-color);\n    }\n    details .ds-states__help-link {\n      display: block;\n    }\n    .gjs-traits-label {\n      background-color: var(--ds-tertiary);\n    }\n    main {\n      display: flex;\n      flex-direction: column;\n    }\n    .ds-slot-fixed {\n      width: 100%;\n    }\n    select {\n      width: 150px;\n      flex: 0;\n      margin: 5px;\n      padding: 5px;\n      background-color: var(--ds-tertiary);\n      border-radius: 2px;\n      color: var(--ds-secondary);\n      border: 1px solid rgba(0,0,0,.15);\n      cursor: pointer;\n      font-size: medium;\n    }\n    input.ds-expression-input__fixed {\n      color: var(--ds-secondary);\n      padding: 10px;\n      border: none;\n      background-color: transparent;\n      width: 100%;\n      box-sizing: border-box;\n    }\n    .ds-expression-input__add {\n      max-width: 40px;\n      text-align: center;\n      font-size: large;\n      padding-right: 9px;\n      -webkit-appearance: none;\n      -moz-appearance: none;\n      text-indent: 1px;\n      text-overflow: '';\n    }\n    .ds-expression-input__add option {\n      font-size: medium;\n    }\n    .ds-expression-input__options-button {\n      background-color: transparent;\n      border: none;\n      color: var(--ds-secondary);\n      cursor: pointer;\n      padding: 0;\n      margin: 10px;\n      margin-left: 0;\n    }\n    label.ds-label {\n      display: flex;\n      align-items: center;\n      padding: 10px;\n      color: var(--ds-secondary);\n    }\n    label.ds-label--disabled {\n      justify-content: space-between;\n    }\n    label.ds-label--disabled .ds-label__message {\n      opacity: .5;\n    }\n    select.ds-visibility__condition-operator {\n      margin: 10px;\n    }\n  }\n  /* States CSS Styles */\n  .ds-states {\n    display: flex;\n    flex-direction: column;\n  }\n    .ds-states__buttons {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-end;\n      margin: 0 5px;\n    }\n    .ds-states__button {\n      cursor: pointer;\n      border: 1px solid var(--ds-button-border);\n      border-radius: 2px;\n      padding: 5px;\n      background: var(--ds-button-bg);\n      color: var(--ds-button-color);\n      flex: 1;\n      margin: 5px;\n      max-width: 40px;\n    }\n    .ds-states__button--disabled {\n      opacity: 0.5;\n      cursor: default;\n    }\n    .ds-states__remove-button {\n      margin-left: 1em;\n    }\n    .ds-states__sep {\n      width: 100%;\n      border: none;\n      height: 1px;\n      background: var(--ds-button-bg);\n    }\n  /* real data */\n  .ds-real-data {\n    code {\n      overflow-x: hidden;\n      text-wrap: nowrap;\n      display: block;\n      padding: 0 10px;\n      text-overflow: ellipsis;\n      margin-top: -5px;\n      margin-bottom: 10px;\n      text-align: right;\n    }\n    .ds-real-data__preview-index {\n      display: flex;\n      input {\n        margin: 10px;\n      }\n      input[type=\"range\"] {\n        flex-grow: 1;\n      }\n      input[type=\"number\"] {\n        color: white;\n        background-color: var(--ds-lowlight);\n        border-radius: 2px;\n        box-sizing: border-box;\n        margin: 10px;\n        border: none;\n        padding: 5px;\n        padding-left: 10px;\n      }\n    }\n  }\n`\n","import{_$LH as o}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{I:t}=o,i=o=>null===o||\"object\"!=typeof o&&\"function\"!=typeof o,n={HTML:1,SVG:2,MATHML:3},e=(o,t)=>void 0===t?void 0!==o?._$litType$:o?._$litType$===t,l=o=>null!=o?._$litType$?.h,c=o=>void 0!==o?._$litDirective$,d=o=>o?._$litDirective$,f=o=>void 0===o.strings,s=()=>document.createComment(\"\"),r=(o,i,n)=>{const e=o._$AA.parentNode,l=void 0===i?o._$AB:i._$AA;if(void 0===n){const i=e.insertBefore(s(),l),c=e.insertBefore(s(),l);n=new t(i,c,o,o.options)}else{const t=n._$AB.nextSibling,i=n._$AM,c=i!==o;if(c){let t;n._$AQ?.(o),n._$AM=o,void 0!==n._$AP&&(t=o._$AU)!==i._$AU&&n._$AP(t)}if(t!==l||c){let o=n._$AA;for(;o!==t;){const t=o.nextSibling;e.insertBefore(o,l),o=t}}}return n},v=(o,t,i=o)=>(o._$AI(t,i),o),u={},m=(o,t=u)=>o._$AH=t,p=o=>o._$AH,M=o=>{o._$AP?.(!1,!0);let t=o._$AA;const i=o._$AB.nextSibling;for(;t!==i;){const o=t.nextSibling;t.remove(),t=o}},h=o=>{o._$AR()};export{n as TemplateResultType,h as clearPart,p as getCommittedValue,d as getDirectiveClass,r as insertPart,l as isCompiledTemplateResult,c as isDirectiveResult,i as isPrimitive,f as isSingleExpression,e as isTemplateResult,M as removePart,v as setChildPartValue,m as setCommittedValue};\n//# sourceMappingURL=directive-helpers.js.map\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst t={ATTRIBUTE:1,CHILD:2,PROPERTY:3,BOOLEAN_ATTRIBUTE:4,EVENT:5,ELEMENT:6},e=t=>(...e)=>({_$litDirective$:t,values:e});class i{constructor(t){}get _$AU(){return this._$AM._$AU}_$AT(t,e,i){this._$Ct=t,this._$AM=e,this._$Ci=i}_$AS(t,e){return this.update(t,e)}update(t,e){return this.render(...e)}}export{i as Directive,t as PartType,e as directive};\n//# sourceMappingURL=directive.js.map\n","import{isSingleExpression as i}from\"./directive-helpers.js\";import{Directive as t,PartType as e}from\"./directive.js\";export{directive}from\"./directive.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const s=(i,t)=>{const e=i._$AN;if(void 0===e)return!1;for(const i of e)i._$AO?.(t,!1),s(i,t);return!0},o=i=>{let t,e;do{if(void 0===(t=i._$AM))break;e=t._$AN,e.delete(i),i=t}while(0===e?.size)},r=i=>{for(let t;t=i._$AM;i=t){let e=t._$AN;if(void 0===e)t._$AN=e=new Set;else if(e.has(i))break;e.add(i),c(t)}};function h(i){void 0!==this._$AN?(o(this),this._$AM=i,r(this)):this._$AM=i}function n(i,t=!1,e=0){const r=this._$AH,h=this._$AN;if(void 0!==h&&0!==h.size)if(t)if(Array.isArray(r))for(let i=e;i<r.length;i++)s(r[i],!1),o(r[i]);else null!=r&&(s(r,!1),o(r));else s(this,i)}const c=i=>{i.type==e.CHILD&&(i._$AP??=n,i._$AQ??=h)};class f extends t{constructor(){super(...arguments),this._$AN=void 0}_$AT(i,t,e){super._$AT(i,t,e),r(this),this.isConnected=i._$AU}_$AO(i,t=!0){i!==this.isConnected&&(this.isConnected=i,i?this.reconnected?.():this.disconnected?.()),t&&(s(this,i),o(this))}setValue(t){if(i(this._$Ct))this._$Ct._$AI(t,this);else{const i=[...this._$Ct._$AH];i[this._$Ci]=t,this._$Ct._$AI(i,this,0)}}disconnected(){}reconnected(){}}export{f as AsyncDirective,t as Directive,e as PartType};\n//# sourceMappingURL=async-directive.js.map\n","import{nothing as t}from\"../lit-html.js\";import{AsyncDirective as i}from\"../async-directive.js\";import{directive as s}from\"../directive.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const e=()=>new h;class h{}const o=new WeakMap,n=s(class extends i{render(i){return t}update(i,[s]){const e=s!==this.G;return e&&void 0!==this.G&&this.rt(void 0),(e||this.lt!==this.ct)&&(this.G=s,this.ht=i.options?.host,this.rt(this.ct=i.element)),t}rt(t){if(this.isConnected||(t=void 0),\"function\"==typeof this.G){const i=this.ht??globalThis;let s=o.get(i);void 0===s&&(s=new WeakMap,o.set(i,s)),void 0!==s.get(this.G)&&this.G.call(this.ht,void 0),s.set(this.G,t),void 0!==t&&this.G.call(this.ht,t)}else this.G.value=t}get lt(){return\"function\"==typeof this.G?o.get(this.ht??globalThis)?.get(this.G):this.G?.value}disconnected(){this.lt===this.ct&&this.rt(void 0)}reconnected(){this.rt(this.ct)}});export{e as createRef,n as ref};\n//# sourceMappingURL=ref.js.map\n","import{noChange as e}from\"../lit-html.js\";import{directive as s,Directive as t,PartType as r}from\"../directive.js\";import{getCommittedValue as l,setChildPartValue as o,insertPart as i,removePart as n,setCommittedValue as f}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nconst u=(e,s,t)=>{const r=new Map;for(let l=s;l<=t;l++)r.set(e[l],l);return r},c=s(class extends t{constructor(e){if(super(e),e.type!==r.CHILD)throw Error(\"repeat() can only be used in text expressions\")}dt(e,s,t){let r;void 0===t?t=s:void 0!==s&&(r=s);const l=[],o=[];let i=0;for(const s of e)l[i]=r?r(s,i):i,o[i]=t(s,i),i++;return{values:o,keys:l}}render(e,s,t){return this.dt(e,s,t).values}update(s,[t,r,c]){const d=l(s),{values:p,keys:a}=this.dt(t,r,c);if(!Array.isArray(d))return this.ut=a,p;const h=this.ut??=[],v=[];let m,y,x=0,j=d.length-1,k=0,w=p.length-1;for(;x<=j&&k<=w;)if(null===d[x])x++;else if(null===d[j])j--;else if(h[x]===a[k])v[k]=o(d[x],p[k]),x++,k++;else if(h[j]===a[w])v[w]=o(d[j],p[w]),j--,w--;else if(h[x]===a[w])v[w]=o(d[x],p[w]),i(s,v[w+1],d[x]),x++,w--;else if(h[j]===a[k])v[k]=o(d[j],p[k]),i(s,d[x],d[j]),j--,k++;else if(void 0===m&&(m=u(a,k,w),y=u(h,x,j)),m.has(h[x]))if(m.has(h[j])){const e=y.get(a[k]),t=void 0!==e?d[e]:null;if(null===t){const e=i(s,d[x]);o(e,p[k]),v[k]=e}else v[k]=o(t,p[k]),i(s,d[x],t),d[e]=null;k++}else n(d[j]),j--;else n(d[x]),x++;for(;k<=w;){const e=i(s,v[w+1]);o(e,p[k]),v[k++]=e}for(;x<=j;){const e=d[x++];null!==e&&n(e)}return this.ut=a,f(s,v),e}});export{c as repeat};\n//# sourceMappingURL=repeat.js.map\n","import{defaultConverter as t,notEqual as e}from\"../reactive-element.js\";\n/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const o={attribute:!0,type:String,converter:t,reflect:!1,hasChanged:e},r=(t=o,e,r)=>{const{kind:n,metadata:i}=r;let s=globalThis.litPropertyMetadata.get(i);if(void 0===s&&globalThis.litPropertyMetadata.set(i,s=new Map),\"setter\"===n&&((t=Object.create(t)).wrapped=!0),s.set(r.name,t),\"accessor\"===n){const{name:o}=r;return{set(r){const n=e.get.call(this);e.set.call(this,r),this.requestUpdate(o,n,t)},init(e){return void 0!==e&&this.C(o,void 0,t,e),e}}}if(\"setter\"===n){const{name:o}=r;return function(r){const n=this[o];e.call(this,r),this.requestUpdate(o,n,t)}}throw Error(\"Unsupported decorator location: \"+n)};function n(t){return(e,o)=>\"object\"==typeof o?r(t,e,o):((t,e,o)=>{const r=e.hasOwnProperty(o);return e.constructor.createProperty(o,t),r?Object.getOwnPropertyDescriptor(e,o):void 0})(t,e,o)}export{n as property,r as standardProperty};\n//# sourceMappingURL=property.js.map\n","import { createRef, Ref, ref } from 'lit/directives/ref.js'\nimport {repeat} from 'lit/directives/repeat.js'\nimport GraphQL, { GraphQLOptions } from '../datasources/GraphQL'\nimport { DATA_SOURCE_CHANGED, DATA_SOURCE_DATA_LOAD_END, DATA_SOURCE_ERROR, DATA_SOURCE_READY, DataSourceEditorViewOptions, IDataSource } from '../types'\nimport { getDefaultOptions, getElementFromOption } from '../utils'\nimport { getAllDataSources, addDataSource, removeDataSource } from '../model/dataSourceRegistry'\nimport { css, html, LitElement, render } from 'lit'\nimport { property } from 'lit/decorators.js'\nimport { Editor } from 'grapesjs'\n\nconst COMMON_STYLES = css`\n    :host {\n      font-family: var(--gjs-main-font);\n      font-size: var(--gjs-font-size);\n    }\n    .ds-field {\n      padding: 10px;\n    }\n    .ds-field > span {\n      display: block;\n    }\n    hr.ds-separator {\n      border: none;\n      border-top: 1px solid var(--ds-button-bg);\n    }\n    .ds-field input,\n    .ds-field select {\n      background-color: var(--gjs-main-dark-color);\n      border: none;\n      box-shadow: none;\n      border-radius: 2px;\n      box-sizing: border-box;\n      padding: 0;\n      position: relative;\n\n      padding: 10px;\n      color: inherit;\n      width: 100%;\n    }\n    .ds-btn-prim {\n      color:inherit;\n      background-color:var(--gjs-main-light-color);\n      border-radius:2px;\n      padding:3px 6px;\n      padding:var(--gjs-input-padding);\n      cursor:pointer;\n      border:none\n    }\n    .ds-btn-prim:active {\n      background-color:var(--gjs-main-light-color)\n    }\n    .ds-btn-danger {\n      color: var(--gjs-light-color);\n      background-color: transparent;\n    }\n    .ds-btn-danger:hover {\n      color: var(--ds-highlight);\n    }\n    [disabled],\n    [readonly] {\n      font-style: italic;\n    }\n`\n\nexport default (editor: Editor, options: Partial<DataSourceEditorViewOptions> = {}) => {\n  // Settings dialog\n  if (options.settingsEl) {\n    // Get the container element for the UI\n    const settingsEl = getElementFromOption(options.settingsEl, 'options.settingsEl')\n    const dsSettings: Ref<SettingsDataSources> = createRef()\n    editor.on(`${DATA_SOURCE_CHANGED} ${DATA_SOURCE_ERROR} ${DATA_SOURCE_READY} ${DATA_SOURCE_DATA_LOAD_END}`, () => {\n      if(dsSettings.value) {\n        dsSettings.value.dataSources = [...getAllDataSources()]\n        dsSettings.value.requestUpdate()\n      } else {\n        renderSettings(editor, dsSettings, settingsEl)\n      }\n    })\n    renderSettings(editor, dsSettings, settingsEl)\n  }\n}\n\nfunction renderSettings(editor: Editor, dsSettings: Ref, settingsEl: HTMLElement) {\n  render(html`\n    <ds-settings\n      ${ref(dsSettings)}\n      .dataSources=${[]}\n      @change=${(e: CustomEvent) => {\n    const ds = e.detail as IDataSource\n    // Handle data source changes - this may need to be reimplemented\n    // depending on how the data source update logic should work\n    console.log('Data source changed:', ds)\n  }}\n      @add=${(e: CustomEvent) => {\n    const ds = e.detail as GraphQLOptions\n    const newDS = new GraphQL(ds)\n    addDataSource(newDS)\n  }}\n      @add-top=${(e: CustomEvent) => {\n    const ds = e.detail as GraphQLOptions\n    const newDS = new GraphQL(ds)\n    addDataSource(newDS)\n  }}\n      @delete=${(e: CustomEvent) => {\n    const ds = e.detail as IDataSource\n    removeDataSource(ds)\n  }}\n      ></ds-settings>\n  `, settingsEl)\n}\n\n/**\n * <ds-settings> is a web component that renders the settings dialog for the DataSourceEditor plugin\n */\nclass SettingsDataSources extends LitElement {\n\n  @property({ type: Array })\n    dataSources: IDataSource[]\n\n  constructor() {\n    super()\n    this.dataSources = []\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n  }\n\n  static styles = [\n    COMMON_STYLES,\n    css`\n      .ds-btn-prim--large {\n        padding: 10px;\n        margin: auto;\n        display: block;\n      }\n      .ds-btn-prim--icon {\n        background-color: var(--ds-primary);\n        position: absolute;\n        right: 20px;\n      }\n    `,\n  ]\n\n  protected render() {\n    const dsDataSource: Ref<SettingsDataSources> = createRef()\n    const options: GraphQLOptions = getDefaultOptions(this.dataSources.length.toString())\n    return html`\n    <section>\n    <!--\n      <button\n        type=\"button\"\n        class=\"ds-btn-prim ds-btn-prim--icon\"\n        @click=${() => {\n    this.dispatchEvent(new CustomEvent('add-top', { detail: options }))\n  }}>\\u2795</button>\n    -->\n      <hr class=\"ds-separator\">\n      ${repeat(this.dataSources.filter(ds => !ds.hidden), (ds: IDataSource) => ds.id, (ds: IDataSource) => html`\n        <ds-settings__data-source\n          ${ref(dsDataSource)}\n          .dataSource=${ds}\n          @change=${(e: CustomEvent) => {\n    e.preventDefault()\n    e.stopImmediatePropagation()\n    this.dispatchEvent(new CustomEvent('change', { detail: ds }))\n  }}\n          @delete=${() => {\n    this.dispatchEvent(new CustomEvent('delete', { detail: ds }))\n  }}\n          ></ds-settings__data-source>\n          <hr class=\"ds-separator\">\n      `)}\n      <button\n        type=\"button\"\n        class=\"ds-btn-prim ds-btn-prim--large\"\n        @click=${() => {\n    this.dispatchEvent(new CustomEvent('add', { detail: options }))\n  }}>Add a Data Source</button>\n    </section>\n    `\n  }\n}\n\nif(!customElements.get('ds-settings')) {\n  customElements.define('ds-settings', SettingsDataSources)\n}\n\n\nclass SettingsDataSource extends LitElement {\n  @property({ type: Object })\n    dataSource: IDataSource | null\n  errorMessage: string = ''\n  connected: boolean = false\n\n  constructor() {\n    super()\n    this.dataSource = null\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n  }\n\n  connectDataSource() {\n    if(!this.dataSource) throw new Error('No data source provided')\n    this.dataSource.connect().then(() => {\n      this.dispatchEvent(new CustomEvent('change'))\n      this.errorMessage = ''\n      this.connected = true\n      this.requestUpdate()\n    }).catch((err: Error) => {\n      console.error('Data source connection error', { err })\n      this.errorMessage = err.message\n      this.connected = false\n      this.requestUpdate()\n    })\n  }\n\n  static styles = [\n    css`\n    form {\n      display: flex;\n      flex-direction: column;\n      align-items: stretch;\n    }\n    form :focus {\n      outline: 1px solid var(--ds-highlight);\n    }\n    .ds-field--large {\n      flex: 1 1 auto;\n    }\n    .ds-property__wrapper {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      flex-wrap: wrap;\n    }\n    .ds-property__wrapper--horiz {\n      flex-direction: row;\n    }\n    .ds-property__wrapper--vert {\n      flex-direction: column;\n    }\n    .ds-button-bar {\n      display: flex;\n      justify-content: space-between;\n    }\n    .ds-no-resize {\n      flex: 0 0 auto;\n    }\n    `,\n    COMMON_STYLES,\n  ]\n\n  protected render() {\n    if(!this.dataSource) throw new Error('No data source provided')\n    const dsHeaders: Ref<SettingsHeaders> = createRef()\n    return html`\n    <form\n      ?readonly=${this.dataSource.readonly !== false}\n      @submit=${(e: Event) => {\n    e.preventDefault()\n    e.stopImmediatePropagation()\n    this.connectDataSource()\n  }}\n      >\n      <h3 class=\"ds-property__title\">\n        ${this.dataSource.label || 'Unnamed'}\n        <small>${this.dataSource.readonly !== false ? ' (Read-only)' : ''}</small>\n      </h3>\n      <div class=\"ds-property__wrapper ds-property__wrapper--horiz\">\n      <label class=\"ds-field\">\n        <span>Label</span>\n        <input\n          type=\"text\"\n          name=\"label\"\n          value=${this.dataSource.label}\n          @input=${(e: Event) => {\n    if (this.dataSource) this.dataSource.label = (e.target as HTMLInputElement).value\n    // Update the label in the title\n    this.requestUpdate()\n  }}\n          ?readonly=${this.dataSource.readonly !== false}\n          />\n      </label>\n      <label class=\"ds-field ds-field--large\">\n        <span>URL</span>\n        <input\n          type=\"url\"\n          name=\"url\"\n          value=${this.dataSource.url}\n          @change=${(e: Event) => { if (this.dataSource) this.dataSource.url = (e.target as HTMLInputElement).value }}\n          ?readonly=${this.dataSource.readonly !== false}\n          />\n      </label>\n      <label class=\"ds-field\">\n        <span>ID</span>\n        <input\n          type=\"text\"\n          name=\"id\"\n          value=${this.dataSource.id}\n          readonly\n          disabled\n          />\n      </label>\n      <label class=\"ds-field\">\n        <span>Type</span>\n        <select\n          name=\"type\"\n          readonly\n          disabled\n          >\n          <option value=\"graphql\" selected>GraphQL</option>\n        </select>\n      </label>\n      <label class=\"ds-field\">\n        <span>Method</span>\n        <select\n          name=\"method\"\n          @change=${(e: Event) => { if (this.dataSource) this.dataSource.method = (e.target as HTMLInputElement).value as 'GET' | 'POST' }}\n          ?readonly=${this.dataSource.readonly !== false}\n          ?disabled=${this.dataSource.readonly !== false}\n          >\n          <option value=\"POST\" ?selected=${this.dataSource.method === 'POST'}>POST</option>\n          <option value=\"GET\" ?selected=${this.dataSource.method === 'GET'}>GET</option>\n        </select>\n      </label>\n      </div>\n      <div class=\"ds-field\">\n        <details>\n          <summary>HTTP Headers</summary>\n          <ds-settings__headers\n            ${ref(dsHeaders)}\n            .headers=${this.dataSource.headers}\n            @change=${() => {\n    if (this.dataSource) this.dataSource.headers = dsHeaders.value?.headers || {}\n    dsHeaders.value?.requestUpdate()\n  }}\n            ?readonly=${this.dataSource.readonly !== false}\n            ></ds-settings__headers>\n        </details>\n        <div class=\"ds-field ds-button-bar\">\n          <div>\n            <div>\n              <p>Status: ${this.dataSource.isConnected() ? '\\u2713 Connected' : '\\u2717 Unknown'}</p>\n              <p>${this.errorMessage}</p>\n            </div>\n          </div>\n          <div class=\"ds-no-resize\">\n            <div>\n              ${this.dataSource.readonly !== false ? '' : html`\n                <button\n                  type=\"button\"\n                  class=\"ds-btn-prim ds-btn-danger\"\n                  @click=${() => {\n    this.dispatchEvent(new CustomEvent('delete'))\n  }}\n                >Delete</button>\n              `}\n              <button\n                type=\"submit\"\n                class=\"ds-btn-prim ds-btn-primary\"\n                >Test connection</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n    `\n  }\n}\n\nif(!customElements.get('ds-settings__data-source')) {\n  customElements.define('ds-settings__data-source', SettingsDataSource)\n}\n\nclass SettingsHeaders extends LitElement {\n  @property({ type: Array })\n    headers: Record<string, string>\n\n  @property({ type: Boolean })\n    readonly: boolean\n\n  static styles = [\n    css`\n    fieldset {\n      display: block;\n      border: none;\n      padding: 0;\n    }\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n    ul > li {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n    ul > li > label {\n      flex: 1 1 auto;\n    }\n    ul > li > button {\n      margin: 10px;\n    }\n    `,\n    COMMON_STYLES,\n  ]\n\n  constructor() {\n    super()\n    this.headers = {}\n    this.readonly = false\n  }\n\n  connectedCallback() {\n    super.connectedCallback()\n  }\n\n  protected render() {\n    return html`\n      <div class=\"ds-field\">\n      <fieldset>\n      ${this.readonly ? '' : html`\n        <button\n          type=\"button\"\n          class=\"ds-btn-prim\"\n          @click=${() => {\n    // Default name and value\n    let name = 'Authorization'\n    let value = 'Bearer XXXXXX'\n    // Make sure the header name is unique\n    // Add a number if the header already exists\n    let i = 0\n    while(typeof this.headers[name] !== 'undefined') {\n      i++\n      name = `Header ${i}`\n      value = ''\n    }\n    // Add the header\n    this.headers = {\n      ...this.headers,\n      [name]: value,\n    }\n    this.dispatchEvent(new CustomEvent('change'))\n  }}\n        >Add a header</button>\n      `}\n      <ul>\n        ${Object.entries(this.headers).map(([name, value]) => html`\n          <li>\n            <label class=\"ds-field\">\n              <span>Name</span>\n              <input\n                type=\"text\"\n                value=${name}\n                name=${`header-key-${encodeURI(name)}`}\n                @change=${(e: Event) => {\n    const target = e.target as HTMLInputElement\n    if(!target.value) return\n    if (typeof this.headers[name] !== 'undefined') delete this.headers[name]\n    this.headers[target.value] = value\n    this.dispatchEvent(new CustomEvent('change'))\n  }}\n                />\n            </label>\n            <label class=\"ds-field\">\n              <span>Value</span>\n              <input\n                type=\"text\"\n                value=${value}\n                name=${`header-value-${encodeURI(value)}`}\n                @change=${(e: Event) => {\n    const target = e.target as HTMLInputElement\n    this.headers[name] = target.value\n    this.dispatchEvent(new CustomEvent('change'))\n  }}\n                />\n            </label>\n            ${this.readonly ? '' : html`\n              <button\n                type=\"button\"\n                class=\"ds-btn-prim\"\n                @click=${() => {\n    if (typeof this.headers[name] !== 'undefined') delete this.headers[name]\n    this.dispatchEvent(new CustomEvent('change'))\n  }}\n                .disabled=${this.readonly}\n              >Delete</button>\n            `}\n          </li>\n        `)}\n      </ul>\n      </fieldset>\n      </div>\n    `\n  }\n}\n\nif(!customElements.get('ds-settings__headers')) {\n  customElements.define('ds-settings__headers', SettingsHeaders)\n}\n","import{noChange as t}from\"../lit-html.js\";import{directive as s,Directive as i,PartType as r}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const e=s(class extends i{constructor(t){if(super(t),t.type!==r.ATTRIBUTE||\"class\"!==t.name||t.strings?.length>2)throw Error(\"`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.\")}render(t){return\" \"+Object.keys(t).filter((s=>t[s])).join(\" \")+\" \"}update(s,[i]){if(void 0===this.st){this.st=new Set,void 0!==s.strings&&(this.nt=new Set(s.strings.join(\" \").split(/\\s/).filter((t=>\"\"!==t))));for(const t in i)i[t]&&!this.nt?.has(t)&&this.st.add(t);return this.render(i)}const r=s.element.classList;for(const t of this.st)t in i||(r.remove(t),this.st.delete(t));for(const t in i){const s=!!i[t];s===this.st.has(t)||this.nt?.has(t)||(s?(r.add(t),this.st.add(t)):(r.remove(t),this.st.delete(t)))}return t}});export{e as classMap};\n//# sourceMappingURL=class-map.js.map\n","import { css } from 'lit';\nexport const inputChainStyles = css `\n  .header,\n  ::part(header) {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .fixed .hide-when-fixed,\n  .show-when-fixed {\n    visibility: hidden;\n    position: absolute;\n    top: -9999px;\n    left: -9999px;\n    display: none;\n  }\n  .fixed .show-when-fixed {\n    visibility: visible;\n    position: static;\n    display: block;\n  }\n  label {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: var(--input-chain-label-font-size, 1rem);\n  }\n  .dirty {\n    color: var(--expression-input-dirty-color, red);\n    cursor: pointer;\n  }\n  .fixed,\n  ::part(fixed) {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    overflow-x: auto;\n    width: 100%;\n  }\n  .dirty-icon,\n  ::part(dirty-icon) {\n    display: inline-block;\n    width: 1rem;\n  }\n  .property-container,\n  ::part(property-container) {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    overflow-x: auto;\n    padding: 10px;\n    scrollbar-width: thin;\n    scrollbar-color: var(--expression-input-active-color, #333)\n      var(--expression-input-active-background-color, #eee);\n  }\n  .fixed-selector,\n  ::part(fixed-selector) {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: 1px solid var(--expression-input-dirty-border-color, #ccc);\n    background-color: var(--expression-input-dirty-background-color, #ccc);\n    border-radius: var(--expression-input-dirty-border-radius, 3px);\n    padding: 3px;\n  }\n  ul[slot='tags'] {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n  /* an arrow between elements */\n  .steps-container__separator {\n    display: inline;\n  }\n  .steps-container__separator::after {\n    content: '▶';\n    color: var(--expression-input-separator-color, #333);\n    font-size: var(--expression-input-separator-font-size, 1.5em);\n    margin: var(--expression-input-separator-margin, 0);\n    padding: var(--expression-input-separator-padding, 0);\n  }\n  /* selector between fixed value (text input) and steps */\n  .fixed-selector span {\n    padding: 4px 4px 2px 4px;\n    font-size: small;\n  }\n  .fixed-selector span:not(.active):hover {\n    color: var(--expression-input-dirty-color, #0091ff);\n  }\n  .fixed-selector span:not(.active) {\n    cursor: pointer;\n  }\n  .fixed-selector span:last-child {\n    margin-left: 5px;\n  }\n  .fixed-selector span.active {\n    border-radius: var(--expression-input-active-border-radius, 3px);\n    background-color: var(--expression-input-active-background-color, #eee);\n    color: var(--expression-input-active-color, #333);\n    cursor: default;\n  }\n  ul.values-ul {\n    list-style: none;\n    padding: var(--expression-input-values-ul-padding, 0);\n    margin: var(--expression-input-values-ul-margin, 0);\n    color: var(--expression-input-values-ul-color, #000);\n    background-color: var(\n      --expression-input-values-ul-background-color,\n      transparent\n    );\n  }\n  li.values-li {\n    padding: var(--expression-input-values-li-padding, 5px);\n    margin: var(--expression-input-values-li-margin, 0);\n    background-color: var(\n      --expression-input-values-li-background-color,\n      transparent\n    );\n    border-bottom: var(--expression-input-values-li-border, 1px solid #ccc);\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n  }\n  li.values-li:last-child {\n    border-bottom: none;\n  }\n  li.values-li:hover {\n    background-color: var(\n      --expression-input-values-li-hover-background-color,\n      #eee\n    );\n  }\n  li.values-li.active {\n    background-color: var(\n      --expression-input-values-li-active-background-color,\n      #ccc\n    );\n    font-weight: var(--expression-input-values-li-active-font-weight, bold);\n  }\n  li.values-li.values__title {\n    /* Display this line as an array title */\n    color: var(--expression-input-values-li-title-color, #333);\n    background-color: var(--expression-input-values-li-background-color, #eee);\n    text-transform: var(\n      --expression-input-values-li-title-text-transform,\n      uppercase\n    );\n    cursor: default;\n  }\n  li.values-li.values__title .values__name {\n    margin: var(--expression-input-values-li-title-margin, auto);\n  }\n  li.values-li .values__icon {\n    margin-right: var(--expression-input-values-li-icon-margin-right, 5px);\n  }\n  li.values-li .values__name {\n    margin-right: var(--expression-input-values-li-name-margin-right, 25px);\n  }\n  li.values-li .values__type {\n    color: var(--expression-input-values-li-type-color, #999);\n    width: max-content;\n  }\n  .placeholder > * {\n    color: var(--expression-input-placeholder-color, #999);\n    font-style: var(--expression-input-placeholder-font-style, italic);\n    margin: var(--expression-input-placeholder-margin, 10px 0);\n  }\n`;\nexport const stepsSelectorItemStyles = css `\n  :host {\n    display: inline-flex;\n    flex-direction: column;\n    flex-shrink: 0;\n  }\n  :host header {\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    border: solid 1px gray;\n  }\n  :host .value {\n    display: flex;\n    align-items: center;\n  }\n  :host .buttons {\n    display: flex;\n    align-items: center;\n  }\n  :host .button {\n    border: none;\n    background-color: transparent;\n  }\n  :host .svg-icon {\n    border: var(--expression-input-item-button-border, none);\n    cursor: pointer;\n    margin: var(--expression-input-item-button-margin, 3px);\n    padding: var(--expression-input-item-button-padding, 3px);\n    border-radius: var(--expression-input-item-button-border-radius, 50%);\n    width: var(--expression-input-item-button-width, 20px);\n    height: var(--expression-input-item-button-height, 20px);\n    background-color: var(\n      --expression-input-item-button-background-color,\n      transparent\n    );\n  }\n  /* button svg path white and size 10px\n  */\n  :host .svg-icon svg path {\n    fill: var(--expression-input-item-button-color, #333);\n  }\n  /*\n  :host popin-form {\n    position: absolute;\n  }\n  */\n  slot[name='helpTitle'] {\n    display: flex;\n    align-items: center;\n    width: 20px;\n    height: 20px;\n  }\n  slot[name='name'] {\n    font-weight: bold;\n    cursor: pointer;\n  }\n  ::slotted([slot='name']),\n  ::slotted([slot='type']) {\n    cursor: pointer;\n    flex-shrink: 0;\n  }\n  ::slotted([slot='name']) {\n    font-weight: var(--expression-input-item-name-font-weight, bold);\n    font-size: var(--expression-input-item-name-font-size, 1rem);\n    padding: var(--expression-input-item-name-padding, 5px);\n  }\n  ::slotted([slot='type']),\n  ::slotted([slot='type']) {\n    font-weight: var(--expression-input-item-type-font-weight, normal);\n    font-size: var(--expression-input-item-type-font-size, 0.8rem);\n    padding: var(--expression-input-item-type-padding, 5px);\n  }\n  .with-arrow::after {\n    content: '▼';\n    float: right;\n    padding: var(--expression-input-item-arrow-padding, 5px);\n  }\n`;\nexport const popinStyles = css `\n  :host {\n    display: inline-block;\n    position: fixed;\n    max-width: 100vw;\n    max-height: 80vh;\n    box-sizing: border-box;\n    z-index: 1000; /* Ensure it's on top of other content */\n    border-radius: var(--popin-form-border-radius, 3px);\n    overflow: hidden; /* To ensure border-radius applies to children elements */\n    overflow-y: auto;\n    outline: none;\n    border: var(--popin-form-border, 1px solid #ccc);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    display: inline-flex;\n    flex-direction: column;\n    background-color: var(--popin-form-background, #fff);\n    color: var(--popin-form-color, #000);\n  }\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  header {\n    border-bottom: var(--popin-form-header-border-bottom, #f5f5f5);\n    background-color: var(--popin-form-header-background, transparent);\n    padding: var(--popin-form-header-padding, 0);\n    color: var(--popin-form-header-color, #000);\n  }\n\n  footer {\n    border-top: var(--popin-form-footer-border-top, 1px solid #f5f5f5);\n    display: flex;\n    justify-content: flex-end;\n    background-color: var(--popin-form-footer-background, transparent);\n    padding: var(--popin-form-footer-padding);\n    color: var(--popin-form-footer-color, #000);\n  }\n\n  button {\n    border: var(--popin-button-border, 1px solid #ccc);\n    border-radius: var(--popin-button-border-radius, 3px);\n    background-color: var(--popin-button-background, #f5f5f5);\n    color: var(--popin-button-color, #000);\n    padding: var(--popin-button-padding, 5px);\n    margin: var(--popin-button-margin, 5px);\n    cursor: pointer;\n  }\n\n  button:hover {\n    background-color: var(--popin-button-hover-background, #eee);\n    color: var(--popin-button-hover-color, #000);\n    border: var(--popin-button-border, 1px solid #ccc);\n    padding: var(--popin-button-hover-padding, 5px);\n    margin: var(--popin-button-hover-margin, 5px);\n  }\n\n  button.secondary {\n    background-color: var(--popin-button-background--secondary, transparent);\n    color: var(--popin-button-color--secondary, #000);\n    border: var(--popin-button-border--secondary, none);\n    padding: var(--popin-button-padding--secondary, 5px);\n    margin: var(--popin-button-margin--secondary, 5px);\n  }\n\n  button.secondary:hover {\n    background-color: var(--popin-button-hover-background--secondary, #eee);\n    color: var(--popin-button-hover-color--secondary, #000);\n    border: var(--popin-button-hover-border--secondary, none);\n    padding: var(--popin-button-hover-padding--secondary, 5px);\n    margin: var(--popin-button-hover-margin--secondary, 5px);\n  }\n\n  main {\n    background-color: var(--popin-form-body-background, transparent);\n    padding: var(--popin-form-body-padding, 5px);\n    color: var(--popin-form-body-color, #000);\n    display: flex;\n    flex-direction: column;\n  }\n\n  ::slotted([slot='header']) {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n  ::slotted([slot='body']) * {\n    background: red !important;\n  }\n`;\n//# sourceMappingURL=styles.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { inputChainStyles } from './styles.js';\n/**\n * @element input-chain\n * Web component to select a sequence of steps, each step being a <select> element.\n *\n * Children are expected to be input or select html elements\n *\n * Features\n * - Nested Select Elements: Allows embedding <select> elements as children.\n * - Dynamic Interaction: Automatically updates subsequent select elements upon a change in any select element, resetting them to a default state.\n * - Event Handling: Emits change events whenever the value of a child select element changes.\n * - Validation Support: Supports form validation attributes like required, minlength, and maxlength.\n * - Combined Options Property: Holds a property with a concatenation of all options from child select elements.\n * - Supports option groups: Allows grouping options in the same select element.\n *\n * It has these events:\n * - [x] change\n *\n * It has these attributes:\n * - [x] name for form submission\n * - [x] for (form id)\n * - [x] reactive (the parent app needs to update the options on change)\n * - [x] select-tag-name (default: select) to change the tag name of the select elements\n * - [x] option-tag-name (default: option) to change the tag name of the option elements\n * - [ ] required\n * - [ ] maxlength\n * - [ ] minlength\n *\n * It has these properties:\n * - [x] options: a concatenation of all options from child select elements\n *\n * It has these slots:\n * - [x] default: contains the select elements\n *\n */\nexport class InputChain extends LitElement {\n    get selectTagName() {\n        return this._selectTagName;\n    }\n    set selectTagName(newTagName) {\n        this._selectTagName = newTagName;\n        this.SELECT_QUERY = `:scope > ${this._selectTagName}`;\n        this.OPTION_QUERY = `:scope > ${this._selectTagName} > ${this._optionTagName}, :scope > ${this._selectTagName} > optgroup > ${this._optionTagName}`;\n        this.requestUpdate();\n    }\n    get optionTagName() {\n        return this._optionTagName;\n    }\n    set optionTagName(newTagName) {\n        this._optionTagName = newTagName;\n        this.OPTION_QUERY = `:scope > ${this._selectTagName} > ${newTagName}, :scope > ${this._selectTagName} > optgroup > ${newTagName}`;\n        this.requestUpdate();\n    }\n    constructor() {\n        super();\n        this.SELECT_QUERY = ':scope > select, :scope > custom-select';\n        this.OPTION_QUERY = ':scope > select > option, :scope > select > optgroup > option, :scope > custom-select > custom-option';\n        /**\n         * Form id\n         * This is the same API as input elements\n         */\n        this.for = '';\n        /**\n         * Name of the property\n         * This is the same API as input elements\n         */\n        this.name = '';\n        this.reactive = false;\n        this._selectTagName = 'select';\n        this._optionTagName = 'option';\n        /**\n         * Form setter\n         * Handle formdata event to add the current value to the form\n         */\n        this._form = null;\n        this.onChange_ = this.onChangeValue.bind(this);\n        /**\n         * Handle formdata event to add the current value to the form\n         */\n        this.onFormdata = (event) => {\n            if (!this.name) {\n                throw new Error('Attribute name is required for input-chain');\n            }\n            this.options\n                .filter((option) => option.selected)\n                .forEach((option) => {\n                event.formData.append(this.name, option.value);\n            });\n        };\n        this.redrawing = false;\n    }\n    set form(newForm) {\n        if (this._form) {\n            this._form.removeEventListener('formdata', this.onFormdata);\n        }\n        if (newForm) {\n            newForm.addEventListener('formdata', this.onFormdata);\n        }\n    }\n    get form() {\n        return this._form;\n    }\n    /**\n     * All selected options\n     * @readonly\n     */\n    get options() {\n        return Array.from(this.querySelectorAll(this.OPTION_QUERY));\n    }\n    /**\n     * Render the component\n     */\n    render() {\n        return html ` <slot></slot> `;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Use the form to add formdata\n        if (this.for) {\n            const form = document.querySelector(`form#${this.for}`);\n            if (form) {\n                this.form = form;\n            }\n        }\n        else {\n            this.form = this.closest('form');\n        }\n        // Listen to slots changes\n        this.shadowRoot.addEventListener('change', this.onChange_);\n    }\n    disconnectedCallback() {\n        this.shadowRoot.removeEventListener('change', this.onChange_);\n        this.form = null;\n        super.disconnectedCallback();\n    }\n    /**\n     * The data changed\n     * Reset the steps after the change\n     */\n    onChangeValue(event) {\n        const target = event.target;\n        const children = Array.from(this.querySelectorAll(this.SELECT_QUERY));\n        if (!children.includes(target)) {\n            return;\n        }\n        this.changeAt(children.indexOf(target));\n        // Dispatch our own event\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        this.requestUpdate();\n    }\n    /**\n     * Reset the steps after the given index\n     */\n    changeAt(idx, reset = false) {\n        if (this.redrawing)\n            return;\n        this.redrawing = true;\n        if (this.reactive) {\n            if (reset) {\n                const children = Array.from(this.querySelectorAll(':scope > select, :scope > custom-select'));\n                children[0].value = '';\n            }\n            this.dispatchEvent(new CustomEvent('change', { detail: { idx } }));\n        }\n        else {\n            // Messes with lit:\n            const children = Array.from(this.querySelectorAll(':scope > select, :scope > custom-select'));\n            const target = idx >= 0 ? children[idx] : children[0];\n            const next = (target === null || target === void 0 ? void 0 : target.value) ? children[idx + 1] : target || children[0];\n            const nextIndex = (target === null || target === void 0 ? void 0 : target.value) ? idx + 1 : idx;\n            if (next) {\n                // Remove all elements after next\n                children.slice(nextIndex + 1).forEach((child) => child.remove());\n                // Reset next\n                next.value = '';\n            }\n            this.dispatchEvent(new Event('change'));\n        }\n        this.redrawing = false;\n    }\n}\nInputChain.styles = inputChainStyles;\n__decorate([\n    property({ type: String, attribute: 'for' })\n], InputChain.prototype, \"for\", void 0);\n__decorate([\n    property({ type: String })\n], InputChain.prototype, \"name\", void 0);\n__decorate([\n    property({ type: Boolean })\n], InputChain.prototype, \"reactive\", void 0);\n__decorate([\n    property({ type: String, attribute: 'select-tag-name' })\n], InputChain.prototype, \"selectTagName\", null);\n__decorate([\n    property({ type: String, attribute: 'option-tag-name' })\n], InputChain.prototype, \"optionTagName\", null);\n__decorate([\n    property({ type: Array })\n], InputChain.prototype, \"options\", null);\nif (!window.customElements.get('input-chain')) {\n    window.customElements.define('input-chain', InputChain);\n}\n//# sourceMappingURL=input-chain.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { property } from 'lit/decorators.js';\nimport { InputChain } from './input-chain.js';\n/**\n * @element expression-input\n * Web component to create an expression\n * Extends the InputChain component and adds\n * - [x] fixed value UI\n * - [x] dirty state\n * - [x] placeholder\n * - [x] reset mechanism\n * - [ ] copy/paste hole expressions (using clipboard API)\n *\n * It adds these properties\n * - [x] value and initial value\n * - [ ] dirty\n *\n * It adds these attributes\n * - [x] allowFixed\n * - [x] fixed\n *\n * It has these spots\n *\n * - [x] default: the select elements for the expression\n * - [x] label\n * - [x] dirty-icon\n */\nexport class ExpressionInput extends InputChain {\n    constructor() {\n        super(...arguments);\n        /**\n         * Initial value to be set to track changes\n         */\n        //initialValue: string[] = []\n        //initialContent: Node[] = []\n        this.allowFixed = true;\n        this._fixed = false;\n        this.placeholder = 'Enter a fixed value or switch to expression';\n    }\n    /**\n     * Read only property dirty\n     * @readonly\n     */\n    get dirty() {\n        //return JSON.stringify(this.value) !== JSON.stringify(this.initialValue)\n        return this.value.length > 0;\n    }\n    /**\n     * Value is the concatenation of all options' values\n     * @readonly\n     */\n    get value() {\n        var _a;\n        return this.fixed\n            ? [(_a = this.getFixedInput()) === null || _a === void 0 ? void 0 : _a.value].filter((v) => !!v)\n            : this.options.filter((o) => o.selected && o.value).map((o) => o.value);\n    }\n    get fixed() {\n        return this._fixed;\n    }\n    set fixed(value) {\n        this._fixed = value;\n        this.dispatchEvent(new Event('fixedChange'));\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        //this.save()\n    }\n    /**\n     * Render the component\n     */\n    render() {\n        const dirty = this.dirty;\n        return html `\n      <!-- header -->\n      <header part=\"header\" class=\"header\">\n        <label>\n          <div\n            class=${classMap({ dirty, 'property-name': true })}\n            part=\"property-name\"\n          >\n            <slot name=\"label\"></slot>\n            ${dirty\n            ? html `\n                  <slot\n                    name=\"dirty-icon\"\n                    part=\"dirty-icon\"\n                    class=\"dirty-icon\"\n                    @click=${this.reset}\n                  >\n                    <svg viewBox=\"0 0 24 24\">\n                      <path\n                        fill=\"currentColor\"\n                        d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n                      ></path>\n                    </svg>\n                  </slot>\n                `\n            : html ``}\n          </div>\n          ${this.allowFixed\n            ? html `\n                <div part=\"fixed-selector\" class=\"fixed-selector\">\n                  <span\n                    class=${classMap({\n                active: this.fixed,\n                'fixed-selector-fixed': true,\n            })}\n                    @click=${() => (this.fixed = true)}\n                    part=\"fixed-selector-fixed\"\n                    >Fixed</span\n                  >\n                  <span\n                    class=${classMap({\n                active: !this.fixed,\n                'fixed-selector-expression': true,\n            })}\n                    @click=${() => (this.fixed = false)}\n                    part=\"fixed-selector-expression\"\n                    >Expression</span\n                  >\n                </div>\n              `\n            : html ``}\n        </label>\n      </header>\n      <div\n        part=\"property-container\"\n        class=${classMap({ 'property-container': true, fixed: this.fixed })}\n      >\n        <slot class=\"hide-when-fixed\"\n          >${this.options.length ? '' : this.placeholder}</slot\n        >\n        <slot name=\"fixed\" part=\"fixed\" class=\"show-when-fixed\"></slot>\n      </div>\n    `;\n    }\n    /**\n     * Reset dirty flag and restore the initial value\n     */\n    reset() {\n        if (this.fixed) {\n            const input = this.getFixedInput();\n            if (input) {\n                input.value = '';\n            }\n            else {\n                throw new Error('Input not found for fixed value');\n            }\n        }\n        else {\n            this.changeAt(-1, true);\n        }\n        this.dispatchEvent(new Event('change'));\n        this.requestUpdate();\n    }\n    getFixedInput() {\n        return this.querySelector('input, textarea');\n    }\n}\n__decorate([\n    property({ type: Boolean, attribute: 'allow-fixed' })\n], ExpressionInput.prototype, \"allowFixed\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'fixed', reflect: true })\n], ExpressionInput.prototype, \"fixed\", null);\n__decorate([\n    property()\n], ExpressionInput.prototype, \"placeholder\", void 0);\nif (!window.customElements.get('expression-input')) {\n    window.customElements.define('expression-input', ExpressionInput);\n}\n//# sourceMappingURL=expression-input.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { popinStyles } from './styles.js';\n/**\n * This PopinOverlay component is a simple dialog that can be used to display any html on top of your UI\n * It is not a modal, it is not blocking the UI, it is just a simple dialog that will catch focus and hide when the user press escape or click outside of it\n * The dialog will be automatically positioned where placed in the DOM but it will be moved and resized to be fully visible on all screen sizes\n *\n * Usage:\n *\n * ```\n * <popin-overlay hidden style=\"width: 400px\" no-auto-close>\n *   <div slot=\"header\">Header</div>\n *   <div slot=\"body\">Body</div>\n *   <div slot=\"footer\">Footer</div>\n * </popin-overlay>\n * ```\n *\n * @element popin-overlay\n * @htmltag popin-overlay\n * @htmlslot The content of the dialog\n * @htmlattr hidden - Hide the dialog\n * @htmlattr no-auto-close - Do not close the dialog when the user click outside of it\n * @fires {CustomEvent} popin-closed - Fires when the dialog is closed\n * @fires {CustomEvent} popin-opened - Fires when the dialog is opened\n * @cssprop {Color} --popin-background - The background color of the dialog\n * @cssprop {Color} --popin-color - The text color of the dialog\n *\n */\nexport class PopinOverlay extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.hidden = false;\n        this.noAutoClose = false;\n        this.resized_ = this.ensureElementInView.bind(this);\n        this.blured_ = this.blured.bind(this);\n        this.keydown_ = this.keydown.bind(this);\n    }\n    render() {\n        setTimeout(() => this.ensureElementInView());\n        return html ` <slot></slot> `;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Make the element focusable\n        this.setAttribute('tabindex', '0');\n        // Attach events on this instance\n        this.addEventListener('blur', this.blured_);\n        this.addEventListener('keydown', this.keydown_);\n        // Attach elements on window\n        window.addEventListener('resize', this.resized_);\n        window.addEventListener('blur', this.blured_);\n    }\n    disconnectedCallback() {\n        window.removeEventListener('resize', this.resized_);\n        window.removeEventListener('blur', this.blured_);\n        this.removeEventListener('blur', this.blured_);\n        this.removeEventListener('keydown', this.keydown_);\n        super.disconnectedCallback();\n    }\n    getActiveElementRecursive(element = document.activeElement) {\n        if (element === null || element === void 0 ? void 0 : element.shadowRoot) {\n            return this.getActiveElementRecursive(element.shadowRoot.activeElement);\n        }\n        return element;\n    }\n    blured() {\n        if (this.noAutoClose)\n            return;\n        // Give the time to the click event to be processed\n        setTimeout(() => {\n            // Check if the focus is still inside the dialog\n            const focusedElement = this.getActiveElementRecursive();\n            let popin = focusedElement;\n            while (popin && popin !== this) {\n                popin = popin.parentNode || popin.host;\n            }\n            if (popin !== this) {\n                // Hide the dialog\n                this.close();\n            }\n            else {\n                // Focus the dialog again so that this function\n                // will be called again when the user click outside\n                //this.focus()\n            }\n        });\n    }\n    close() {\n        this.setAttribute('hidden', '');\n        this.blur();\n    }\n    keydown(event) {\n        if (event.key === 'Escape') {\n            this.close();\n        }\n    }\n    attributeChangedCallback(name, _old, value) {\n        super.attributeChangedCallback(name, _old, value);\n        if (name === 'hidden' && value === null) {\n            this.focus();\n            this.dispatchEvent(new CustomEvent('popin-opened'));\n        }\n        if (name === 'hidden' && value !== null) {\n            this.dispatchEvent(new CustomEvent('popin-closed'));\n        }\n    }\n    ensureElementInView() {\n        var _a;\n        // Set our position to the parent element position\n        const parentStyle = (_a = this.parentElement) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n        this.style.left = `${parentStyle === null || parentStyle === void 0 ? void 0 : parentStyle.left}px`;\n        this.style.top = `${parentStyle === null || parentStyle === void 0 ? void 0 : parentStyle.top}px`;\n        const offsetX = 0;\n        const offsetY = 0;\n        // // Get the element's bounding rectangle\n        const rect = this.getBoundingClientRect();\n        const viewportWidth = window.innerWidth;\n        const viewportHeight = window.innerHeight;\n        // Check if the element is out of the viewport on the right side\n        if (rect.left + rect.width + offsetX > viewportWidth) {\n            this.style.left = `${viewportWidth - rect.width - offsetX}px`;\n        }\n        // Check if the element is out of the viewport on the left side\n        if (rect.left + offsetX < 0) {\n            this.style.left = `${-offsetX}px`;\n        }\n        // Check if the element is out of the viewport on the bottom\n        if (rect.top + rect.height + offsetY > viewportHeight) {\n            this.style.top = `${viewportHeight - rect.height - offsetY}px`;\n        }\n        // Check if the element is out of the viewport on the top\n        if (rect.top + offsetY < 0) {\n            this.style.top = `${-offsetY}px`;\n        }\n    }\n}\nPopinOverlay.styles = popinStyles;\n__decorate([\n    property()\n], PopinOverlay.prototype, \"hidden\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'no-auto-close' })\n], PopinOverlay.prototype, \"noAutoClose\", void 0);\nif (!window.customElements.get('popin-overlay')) {\n    window.customElements.define('popin-overlay', PopinOverlay);\n}\n//# sourceMappingURL=popin-overlay.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { PopinOverlay } from './popin-overlay.js';\n/**\n * This component extends the `<popin-overlay>` component and the native `<form>` tag\n * It handles form submissions both as an input for the parent form and with it's children inputs\n *\n * Usage:\n *\n * ```\n * <popin-form hidden style=\"width: 400px\" no-auto-close>\n *   <div slot=\"header\">Header</div>\n *   <div slot=\"body\">Body</div>\n *   <div slot=\"footer\">Footer</div>\n * </popin-form>\n * ```\n *\n * @element popin-form\n * @htmltag popin-form\n * @htmlslot header - The header of the dialog\n * @htmlslot default - The body of the dialog\n * @htmlslot footer - The footer of the dialog\n * @cssprop {Color} --popin-form-header-background - The background color of the header\n * @cssprop {Color} --popin-form-body-background - The background color of the body\n * @cssprop {Color} --popin-form-footer-background - The background color of the footer\n * @cssprop {Color} --popin-form-header-color - The text color of the header\n * @cssprop {Color} --popin-form-body-color - The text color of the body\n * @cssprop {Color} --popin-form-footer-color - The text color of the footer\n * @cssprop {Border} --popin-form-header-border-bottom - The border of the header\n * @cssprop {Border} --popin-form-footer-border-top - The border of the footer\n * @cssprop {Padding} --popin-form-header-padding - The padding of the header\n * @cssprop {Padding} --popin-form-body-padding - The padding of the body\n * @cssprop {Padding} --popin-form-footer-padding - The padding of the footer\n * @cssprop {Color} --popin-button-background - The background color of the button\n * @cssprop {Color} --popin-button-color - The text color of the button\n * @cssprop {Color} --popin-button-hover-background - The background color of the button when hovered\n * @cssprop {Color} --popin-button-hover-color - The text color of the button when hovered\n * @cssprop {Border} --popin-button-border - The border of the button\n * @cssprop {Border} --popin-button-hover-border - The border of the button when hovered\n * @cssprop {Padding} --popin-button-padding - The padding of the button\n * @cssprop {Padding} --popin-button-hover-padding - The padding of the button when hovered\n * @cssprop {Margin} --popin-button-margin - The margin of the button\n * @cssprop {Margin} --popin-button-hover-margin - The margin of the button when hovered\n * @cssprop {BorderRadius} --popin-form-border-radius - The border radius of the dialog\n * @cssprop {Color} --popin-button-background--secondary - The background color of the secondary button\n * @cssprop {Color} --popin-button-color--secondary - The text color of the secondary button\n * @cssprop {Color} --popin-button-hover-background--secondary - The background color of the secondary button when hovered\n * @cssprop {Color} --popin-button-hover-color--secondary - The text color of the secondary button when hovered\n * @cssprop {Border} --popin-button-border--secondary - The border of the secondary button\n * @cssprop {Border} --popin-button-hover-border--secondary - The border of the secondary button when hovered\n * @cssprop {Padding} --popin-button-padding--secondary - The padding of the secondary button\n * @cssprop {Padding} --popin-button-hover-padding--secondary - The padding of the secondary button when hovered\n * @cssprop {Margin} --popin-button-margin--secondary - The margin of the secondary button\n * @cssprop {Margin} --popin-button-hover-margin--secondary - The margin of the secondary button when hovered\n *\n */\nexport class PopinForm extends PopinOverlay {\n    constructor() {\n        super(...arguments);\n        /**\n         * Form id\n         * This is the same API as input elements\n         */\n        this.for = '';\n        this.name = '';\n        this.formData = new FormData();\n        this.onFormdata_ = this.onFormdata.bind(this);\n        this.slotChanged_ = this.slotChanged.bind(this);\n        /**\n         * Form setter\n         * Handle formdata event to add the current value to the form\n         */\n        this._form = null;\n        /**\n         * Handle slot change to update the form\n         */\n        this.inputs = [];\n    }\n    set form(newForm) {\n        if (this._form) {\n            this._form.removeEventListener('formdata', this.onFormdata_);\n        }\n        if (newForm) {\n            newForm.addEventListener('formdata', this.onFormdata_);\n        }\n    }\n    get form() {\n        return this._form;\n    }\n    get value() {\n        this.updateFormData();\n        return Object.fromEntries(this.formData.entries());\n    }\n    render() {\n        super.render(); // For placement\n        return html `\n      <form @submit=${this.submit} @change=${this.change}>\n        <header>\n          <slot class=\"header\" name=\"header\"></slot>\n        </header>\n        <main>\n          <slot class=\"body\" part=\"body\"></slot>\n        </main>\n        <footer>\n          <slot class=\"footer\" name=\"footer\">\n            <button type=\"button\" class=\"secondary\" @click=${this.close}>\n              Cancel\n            </button>\n            <button type=\"submit\">Apply</button>\n          </slot>\n        </footer>\n      </form>\n    `;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Use the form to add formdata\n        if (this.for) {\n            const form = document.querySelector(`form#${this.for}`);\n            if (form) {\n                this.form = form;\n            }\n        }\n        else {\n            this.form = this.closest('form');\n        }\n        // Listen to slots changes\n        this.shadowRoot.addEventListener('slotchange', this.slotChanged_);\n        // Update current list of inputs\n        this.slotChanged();\n    }\n    disconnectedCallback() {\n        this.removeEventListener('slotchange', this.slotChanged_);\n        this.form = null;\n        super.disconnectedCallback();\n    }\n    slotChanged() {\n        this.inputs = Array.from(this.querySelectorAll('input, select, textarea, [data-is-input]'));\n    }\n    /**\n     * Handle formdata event to add the current value to the form\n     */\n    onFormdata(event) {\n        event.preventDefault();\n        const formData = event.formData;\n        for (const [key, value] of this.formData.entries()) {\n            formData.set(`${this.name}-${key}`, value);\n        }\n    }\n    updateFormData() {\n        this.formData = new FormData();\n        for (const input of this.inputs) {\n            this.formData.set(input.getAttribute('name'), input.value);\n        }\n    }\n    submit(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        this.updateFormData();\n        this.close();\n        this.dispatchEvent(new Event('change'));\n    }\n    change(event) {\n        const me = event.target.closest(this.tagName);\n        if (me === this) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n__decorate([\n    property({ type: String, attribute: 'for' })\n], PopinForm.prototype, \"for\", void 0);\n__decorate([\n    property({ type: String })\n], PopinForm.prototype, \"name\", void 0);\nif (!window.customElements.get('popin-form')) {\n    window.customElements.define('popin-form', PopinForm);\n}\n//# sourceMappingURL=popin-form.js.map","import{noChange as t}from\"../lit-html.js\";import{directive as e,Directive as r,PartType as s}from\"../directive.js\";\n/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const n=\"important\",i=\" !\"+n,o=e(class extends r{constructor(t){if(super(t),t.type!==s.ATTRIBUTE||\"style\"!==t.name||t.strings?.length>2)throw Error(\"The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.\")}render(t){return Object.keys(t).reduce(((e,r)=>{const s=t[r];return null==s?e:e+`${r=r.includes(\"-\")?r:r.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g,\"-$&\").toLowerCase()}:${s};`}),\"\")}update(e,[r]){const{style:s}=e.element;if(void 0===this.ft)return this.ft=new Set(Object.keys(r)),this.render(r);for(const t of this.ft)null==r[t]&&(this.ft.delete(t),t.includes(\"-\")?s.removeProperty(t):s[t]=null);for(const t in r){const e=r[t];if(null!=e){this.ft.add(t);const r=\"string\"==typeof e&&e.endsWith(i);t.includes(\"-\")||r?s.setProperty(t,r?e.slice(0,-11):e,r?n:\"\"):s[t]=e}}return t}});export{o as styleMap};\n//# sourceMappingURL=style-map.js.map\n","import { Component } from 'grapesjs'\nimport { Context, Expression, Field, Filter, Property, State, StateId, Token, Type, TypeId } from '../types'\nimport { DataTree } from './DataTree'\nimport { getOrCreatePersistantId, getState, getStateIds } from './state'\nimport { getExpressionResultType, getTokenOptions } from './token'\nimport { getFixedToken } from '../utils'\n\n/**\n * Get the context of a component\n * This includes all parents states, data sources queryable values, values provided in the options\n */\nexport function getContext(component: Component, dataTree: DataTree, currentStateId?: StateId, hideLoopData = false): Context {\n  if (!component) {\n    console.error('Component is required for context')\n    throw new Error('Component is required for context')\n  }\n  // Get all queryable values from all data sources\n  const queryable: Property[] = dataTree.queryables\n    .map((field: Field) => {\n      if (!field.dataSourceId) throw new Error(`Type ${field.id} has no data source`)\n      return fieldToToken(field)\n    })\n  // Get all states in the component scope\n  const states: State[] = []\n  const loopProperties: Token[] = []\n  let parent = component\n  while (parent) {\n    // Get explicitely set states\n    states\n      .push(...(getStateIds(parent, true, parent === component ? currentStateId : undefined)\n        .map((stateId: StateId): State => ({\n          type: 'state',\n          storedStateId: stateId,\n          previewIndex: 8888,\n          label: getState(parent, stateId, true)?.label || stateId,\n          componentId: getOrCreatePersistantId(parent),\n          exposed: true,\n        }))))\n    // Get states from loops\n    if (parent !== component || !hideLoopData) { // If it is a loop on the parent or if we don't hide the loop data\n      const loopDataState = getState(parent, '__data', false)\n      if (loopDataState) {\n        try {\n          const loopDataField = getExpressionResultType(loopDataState.expression, parent, dataTree)\n          if (loopDataField) {\n            const displayName = (label: string) => `${parent.getName() ?? 'Unknown'}'s ${loopDataField.label} ${label}`\n            if (loopDataField.kind === 'list') {\n              loopProperties.push({\n                type: 'state',\n                storedStateId: '__data',\n                componentId: getOrCreatePersistantId(parent),\n                previewIndex: loopDataField.previewIndex,\n                exposed: false,\n                forceKind: 'object', // FIXME: this may be a scalar\n                label: `Loop data (${loopDataField.label})`,\n              }, {\n                type: 'property',\n                propType: 'field',\n                fieldId: 'forloop.index0',\n                label: displayName('forloop.index0'),\n                kind: 'scalar',\n                typeIds: ['number'],\n              }, {\n                type: 'property',\n                propType: 'field',\n                fieldId: 'forloop.index',\n                label: displayName('forloop.index'),\n                kind: 'scalar',\n                typeIds: ['number'],\n              })\n            } else {\n              console.warn('Loop data is not a list for component', parent, 'and state', loopDataState)\n            }\n          } else {\n            console.warn('Loop data type not found for component', parent, 'and state', loopDataState)\n          }\n        } catch {\n          console.error('Error while getting loop data for component', parent, 'and state', loopDataState)\n        }\n      }\n    }\n    // Go up to parent\n    parent = parent.parent() as Component\n  }\n  // Get filters which accept no input\n  const filters: Filter[] = dataTree.filters\n    .filter(filter => {\n      try {\n        return filter.validate(null)\n      } catch (e) {\n        console.warn('Filter validate error:', e, {filter})\n        return false\n      }\n    })\n  // Add a fixed value\n  const fixedValue = getFixedToken('')\n  // Return the context\n  return [\n    ...queryable,\n    ...states,\n    ...loopProperties,\n    ...filters,\n    fixedValue,\n  ]\n}\n\n/**\n * Create a property token from a field\n */\nexport function fieldToToken(field: Field): Property {\n  if (!field) throw new Error('Field is required for token')\n  if (!field.dataSourceId) throw new Error(`Field ${field.id} has no data source`)\n  return {\n    type: 'property',\n    propType: 'field',\n    fieldId: field.id,\n    label: field.label,\n    typeIds: field.typeIds,\n    dataSourceId: field.dataSourceId,\n    kind: field.kind,\n    ...getTokenOptions(field) ?? {},\n  }\n}\n\n/**\n * Auto complete an expression\n * @returns a list of possible tokens to add to the expression\n */\nexport function getCompletion(options: { component: Component, expression: Expression, dataTree: DataTree, rootType?: TypeId, currentStateId?: StateId, hideLoopData?: boolean}): Context {\n  const { component, expression, dataTree, rootType, currentStateId, hideLoopData } = options\n  if (!component) throw new Error('Component is required for completion')\n  if (!expression) throw new Error('Expression is required for completion')\n  if (expression.length === 0) {\n    if (rootType) {\n      const type = dataTree.getType(rootType, null, component.getId())\n      if (!type) {\n        console.warn('Root type not found', rootType)\n        return []\n      }\n      return type.fields\n        .map((field: Field) => fieldToToken(field))\n    }\n    return getContext(component, dataTree, currentStateId, hideLoopData)\n  }\n  const field = getExpressionResultType(expression, component, dataTree)\n  if (!field) {\n    console.warn('Result type not found for expression', expression)\n    return []\n  }\n  return ([] as Token[])\n    // Add fields if the kind is object\n    .concat(field.kind === 'object' ? field.typeIds\n      // Find possible types\n      .map((typeId: TypeId) => dataTree.getType(typeId, field.dataSourceId ?? null, component.getId()))\n      // Add all of their fields\n      .flatMap((type: Type | null) => type?.fields ?? [])\n      // To token\n      .flatMap(\n        (fieldOfField: Field): Token[] => {\n          // const t: Type | null = this.findType(field.typeIds, field.dataSourceId)\n          // if(!t) throw new Error(`Type ${field.typeIds} not found`)\n          return fieldOfField.typeIds.map((typeId: TypeId) => ({\n            ...fieldToToken(fieldOfField),\n            typeIds: [typeId],\n          }))\n        }\n      ) : [])\n    // Add filters\n    .concat(\n      dataTree.filters\n        // Match input type\n        .filter(filter => {\n          try {\n            return filter.validate(field)\n          } catch (e) {\n            console.warn('Filter validate error:', e, {filter, field})\n            return false\n          }\n        })\n    )\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {LitElement, TemplateResult, html} from 'lit'\nimport {property} from 'lit/decorators.js'\nimport { Ref, createRef, ref } from 'lit/directives/ref.js'\nimport { styleMap } from 'lit/directives/style-map.js'\nimport { PROPERTY_STYLES } from './defaultStyles'\nimport { DATA_SOURCE_CHANGED, DATA_SOURCE_DATA_LOAD_END, Filter, Property, State, StoredProperty, Token } from '../types'\nimport { FIXED_TOKEN_ID, fromString, getFixedToken, getTokenDisplayName, groupByType, toExpression, toId, toValue, getDataTreeFromUtils } from '../utils'\nimport { ExpressionInput, PopinForm } from '@silexlabs/expression-input'\nimport { Component, Editor } from 'grapesjs'\n\nimport '@silexlabs/expression-input'\nimport { getCompletion } from '../model/completion'\nimport { fromStored, getExpressionResultType } from '../model/token'\nimport { StoredState, StoredStateWithId } from '../model/state'\n\nconst PREVIEW_INDEX_CHANGED = 'PREVIEW_INDEX_CHANGED'\n\n/**\n * Editor for a state of the selected element's properties\n *\n * Usage:\n *\n * ```\n * <state-editor\n *  name=\"state\"\n *  disabled\n *  hide-loop-data\n *  parent-name=\"parent\"\n *  no-filters\n *  root-type=\"root\"\n *  default-fixed\n *  dismiss-current-component-states\n *  ></state-editor>\n * ```\n *\n */\n\nexport class StateEditor extends LitElement {\n  @property({type: Boolean})\n    disabled = false\n\n  @property({type: String})\n    name = ''\n\n  @property({type: Boolean, attribute: 'hide-loop-data'})\n    hideLoopData = false\n\n  /**\n   * If true, will show a UI to edit previewIndex of __data\n   */\n  @property({type: Boolean, attribute: 'show-preview-index-ui'})\n    showPreviewIndexUi = false\n  /**\n   * used in the expressions found in filters options\n   * This will be used to filter states which are not defined yet\n   */\n  @property({type: String, attribute: 'parent-name'})\n    parentName = ''\n\n  @property({type: Boolean, attribute: 'no-filters'})\n    noFilters = false\n\n  @property({type: String, attribute: 'root-type'})\n    rootType = ''\n\n  @property({type: Boolean, attribute: 'default-fixed'})\n    defaultFixed = false\n\n  // Note: dismissCurrentComponentStates not used in this project anymore\n  @property({type: Boolean, attribute: 'dismiss-current-component-states'})\n    dismissCurrentComponentStates = false\n\n  private _selected: Component | null = null\n  @property({type: Object})\n  get selected(): Component | null {\n    return this._selected\n  }\n  set selected(value: Component | null) {\n    this._selected = value\n    // Update selected preview index\n    const token = this._data.slice(-1)[0]\n    if(token) {\n      this.previewIndex = token.previewIndex || 0\n    }\n    this.requestUpdate()\n  }\n\n  /**\n   * Value string for for submissions\n   */\n  @property()\n  get value(): string {\n    return JSON.stringify(this.data)\n  }\n  set value(newValue: string) {\n    const expression = toExpression(newValue)\n    if (!expression) {\n      this.data = newValue\n      return\n    }\n    this.data = expression as Token[]\n  }\n\n  /**\n   * Form id\n   * This is the same API as input elements\n   */\n  @property({type: String, attribute: 'for'})\n    for = ''\n\n  /**\n   * The previewIndex for the loop data\n   */\n  @property({ type: Number }) previewIndex = 0\n\n  /**\n   * Binded listeners\n   */\n  private onFormdata_ = this.onFormdata.bind(this)\n  private renderBinded = () => this.requestUpdate()\n\n  override connectedCallback() {\n    super.connectedCallback()\n    // Use the form to add formdata\n    if(this.for) {\n      const form = document.querySelector<HTMLFormElement>(`form#${this.for}`)\n      if(form) {\n        this.form = form\n      }\n    } else {\n      this.form = this.closest('form')\n    }\n\n    this.editor?.on(`${DATA_SOURCE_CHANGED} ${PREVIEW_INDEX_CHANGED} ${DATA_SOURCE_DATA_LOAD_END}`, this.renderBinded)\n  }\n\n  override disconnectedCallback() {\n    this.form = null\n    super.disconnectedCallback()\n    this.editor?.off(`${DATA_SOURCE_CHANGED} ${PREVIEW_INDEX_CHANGED} ${DATA_SOURCE_DATA_LOAD_END}`, this.renderBinded)\n  }\n\n  /**\n   * Handle formdata event to add the current value to the form\n   */\n  private onFormdata(event: FormDataEvent) {\n    event.preventDefault()\n    const formData = event.formData\n    formData.set(this.name, this.value)\n  }\n\n  /**\n   * Form setter\n   * Handle formdata event to add the current value to the form\n   */\n  protected _form: HTMLFormElement | null = null\n  set form(newForm: HTMLFormElement | null) {\n    if(this._form) {\n      this._form.removeEventListener('formdata', this.onFormdata_)\n    }\n    if(newForm) {\n      newForm.addEventListener('formdata', this.onFormdata_)\n    }\n  }\n  get form() {\n    return this._form\n  }\n\n  /**\n   * Structured data\n   */\n  private _data: Token[] = []\n  get data(): Token[] {\n    const input = this.expressionInputRef.value\n    if(!this._selected || !this.editor) {\n      console.error('selected and editor are required', this._selected, this.editor)\n      //throw new Error('selected and editor are required')\n      return []\n    }\n    if(!input || input.value.length === 0) return []\n    if(input.fixed) {\n      return [getFixedToken(input.value[0] || '')]\n    } else {\n      const ids = input.value\n      return ids\n        .filter(id => !!id)\n        .map(id => {\n          try {\n            return fromString(this.editor!, id, this.selected!.getId())\n          } catch(e) {\n            console.error(`Error while getting token from id ${id}`, e)\n            // Return unknown\n            return {\n              type: 'property',\n              propType: 'field',\n              fieldId: 'unknown',\n              label: 'Unknown',\n              kind: 'scalar',\n              typeIds: [],\n              options: {},\n            } as Property\n          }\n        })\n        // Here the data is missing options as data comes from completion\n        // Add the options\n        .map((token, idx) => {\n          const popin = this.popinsRef[idx]?.value\n          switch(token.type) {\n          case 'property':\n          case 'filter':\n            token.options = popin?.value || token.options\n            break\n          default:\n            break\n          }\n          return token\n        })\n    }\n  }\n  set data(value: Token[] | string) {\n    if(typeof value === 'string') {\n      this._data = value === '' ? [] : [getFixedToken(value)]\n    } else {\n      this._data = value\n    }\n    if (this.editor) this.requestUpdate()\n  }\n\n  private _editor: Editor | null = null\n  @property({type: Object})\n  get editor(): Editor | null {\n    return this._editor\n  }\n  set editor(value: Editor | null) {\n    this._editor = value\n    this.requestUpdate()\n  }\n\n  private redrawing = false\n  private expressionInputRef = createRef<ExpressionInput>()\n  private popinsRef: Ref<PopinForm>[] = []\n\n  override render() {\n    this.redrawing = true\n    super.render()\n    if(!this.name) throw new Error('name is required on state-editor')\n    if(!this.editor || !this.selected) {\n      console.error('editor and selected are required', this.editor, this.selected)\n      return html`<div class=\"ds-section\n        ds-section--error\">Error rendering state-editor component: editor and selected are required</div>`\n    }\n\n    const selected = this.selected\n    const dataTree = getDataTreeFromUtils(this.editor)\n    // FIXME: fromStored every time we render is not efficient, it is supposed to have been done before\n    const _currentValue = this._data.map(token => fromStored(token, dataTree, selected.getId()))\n\n    // Get the data to show in the \"+\" drop down\n    const completion = getCompletion({\n      component: this.dismissCurrentComponentStates ? selected.parent()! : selected,\n      expression: _currentValue || [],\n      dataTree,\n      rootType: this.rootType,\n      currentStateId: this.parentName || this.name,\n      hideLoopData: this.hideLoopData,\n    })\n      .filter(token => token.type !== 'filter' || !this.noFilters)\n\n    const groupedCompletion = groupByType(this.editor, selected, completion, _currentValue)\n\n    // Check if the expression has a fixed value and nothing else\n    const fixed = (_currentValue?.length === 1 && _currentValue[0].type === 'property' && _currentValue[0].fieldId === FIXED_TOKEN_ID)\n      // If the value is empty and the default is fixed, then the input is fixed\n      || (this.defaultFixed && _currentValue.length === 0)\n      // If there is no completion and the value is empty\n      || (completion.length === 0 && _currentValue.length === 0)\n\n    // Fixed text\n    const text = fixed ? (_currentValue![0] as Property)?.options?.value || '' : ''\n\n    let currentData = '' as unknown\n    try {\n      const realData = dataTree.getValue(_currentValue || [], selected, !this.showPreviewIndexUi)\n      currentData = realData\n    } catch(e) {\n      console.error('Current data could not be retrieved:', e)\n    }\n    if (typeof currentData === 'undefined' || currentData === null) currentData = ''\n    const currentDataArrayLength = Array.isArray(currentData) ? (currentData as Array<unknown>).length : 0\n    const previewIndex = (_currentValue[_currentValue.length - 1] as State)?.previewIndex\n    // Update selected preview index\n    if(this.previewIndex !== previewIndex) {\n      this.previewIndex = previewIndex || 0\n    }\n    const rangeInputRef = createRef<HTMLInputElement>()\n    const numberInputRef = createRef<HTMLInputElement>()\n    // Build the expression input\n    const result = html`\n      <expression-input\n        @change=${(event: Event) => this.onChangeValue(event)}\n        data-is-input\n        ${ref(this.expressionInputRef)}\n        .fixed=${fixed}\n        class=\"ds-section\"\n        name=${this.name}\n        reactive\n      >\n        <style>\n          ${PROPERTY_STYLES}\n        </style>\n        <slot name=\"label\" slot=\"label\"></slot>\n        <div slot=\"fixed\" class=\"ds-slot-fixed\">\n          <input\n            type=\"text\"\n            class=\"ds-expression-input__fixed\"\n            placeholder=\"Enter a text or switch to expression mode\"\n            .value=${text}\n            />\n        </div>\n        ${ _currentValue && _currentValue.length > 0 ? html`\n          ${ _currentValue.map((token: Token, idx: number) => {\n    this.popinsRef[idx] = createRef<PopinForm>()\n    const optionsForm = this.getOptions(selected, _currentValue, idx)\n    const partialExpression = _currentValue.slice(0, idx)\n\n    const _partialCompletion = getCompletion({\n      component: this.dismissCurrentComponentStates ? selected.parent()! : selected,\n      expression: partialExpression,\n      dataTree,\n      rootType: this.rootType,\n      currentStateId: idx === 0 ? this.parentName || this.name : undefined,\n      hideLoopData: this.hideLoopData,\n    })\n    const partialCompletion = this.noFilters ? _partialCompletion\n      .filter(token => token.type !== 'filter')\n      : _partialCompletion\n    const partialGroupedCompletion = groupByType(this.editor!, selected, partialCompletion, _currentValue.slice(0, idx))\n    const id = toId(token)\n    return html`\n              <select>\n                <option value=\"\">-</option>\n                ${ Object.entries(partialGroupedCompletion)\n    .reverse()\n    .map(([type, completion]) => {\n      return html`\n                      <optgroup label=\"${type}\">\n                      ${ completion\n    .map(partialToken => ({\n      displayName: getTokenDisplayName(selected, partialToken),\n      partialToken,\n    }))\n    .sort((a, b) => a.displayName.localeCompare(b.displayName))\n    .map(({partialToken, displayName}) => {\n      const partialId = toId(partialToken)\n      return html`\n                            <option value=${toValue(partialToken)} .selected=${partialId === id}>${displayName}</option>\n                          `\n    })\n}\n                      </optgroup>\n                    `\n    })\n}\n              </select>\n              <button\n                class=\"ds-expression-input__options-button\"\n                style=${styleMap({ display: optionsForm === '' ? 'none' : '' })}\n                @click=${() => {\n    this.popinsRef[idx].value?.removeAttribute('hidden')\n  }}\n              >...</button>\n              <popin-form\n                ${ref(this.popinsRef[idx])}\n                hidden\n                name=${`${this.name}_options_${idx}`}\n                @change=${(event: Event) => this.onChangeOptions(event, selected, this.popinsRef[idx].value!, idx)}\n              >\n                ${optionsForm}\n              </popin-form>\n              `\n  })\n}\n        ` : '' }\n        ${Object.entries(groupedCompletion).length ? html`\n          <select\n            class=\"ds-expression-input__add\"\n            ${ref(el => el && ((el as HTMLSelectElement).value = ''))}\n            >\n            <option value=\"\" selected>+</option>\n            ${ Object.entries(groupedCompletion)\n    .reverse()\n    .map(([type, completion]) => {\n      return html`\n                    <optgroup label=\"${type}\">\n                    ${ completion\n    .map(token => ({\n      displayName: getTokenDisplayName(selected, token),\n      token,\n    }))\n    .sort((a, b) => a.displayName.localeCompare(b.displayName))\n    .map(({displayName, token}) => {\n      return html`<option value=\"${toValue(token)}\">${displayName}</option>`\n    })\n}\n                    </optgroup>\n                `\n    })\n}\n          </select>\n      ` : ''}\n      </expression-input>\n      <div class=\"ds-real-data\">\n        <code class=\"ds-real-data__display\">\n          ${Array.isArray(currentData) ? html`${currentData.length} objects with ${Object.keys(currentData[0] || {}).filter(k => k !== '__typename').join(', ')}` : currentData}\n        </code>\n        ${this.showPreviewIndexUi && (currentDataArrayLength > 0 && typeof previewIndex !== 'undefined') ? html`\n        <div class=\"ds-real-data__preview-index\">\n          <input\n            ${ref(rangeInputRef)}\n            type=\"range\"\n            step=\"1\"\n            min=\"0\"\n            .max=${currentDataArrayLength - 1}\n            .value=${this.previewIndex}\n            @input=${(event: InputEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    this.onChangePreview(parseInt(value))\n    if (numberInputRef.value) numberInputRef.value.value = value\n  }}\n          >\n          <input\n              ${ref(numberInputRef)}\n              type=\"number\"\n            step=\"1\"\n            min=\"0\"\n            .max=${currentDataArrayLength - 1}\n            .value=${this.previewIndex}\n            @input=${(event: InputEvent) => {\n    const value = (event.target as HTMLInputElement).value\n    this.onChangePreview(parseInt(value))\n    if (rangeInputRef.value) rangeInputRef.value.value =  value\n  }}\n            >\n            ` : ''}\n        </div>\n        `\n    this.redrawing = false\n    return result\n  }\n\n  private onChangePreview(index: number) {\n    const state = this._selected?.attributes.privateStates.find((s: StoredStateWithId) => s.id === '__data') as StoredState\n    if(state?.expression.length > 0) {\n      const token = state.expression[state.expression.length - 1] as StoredProperty\n      token.previewIndex = index\n    }\n    this.editor?.trigger(PREVIEW_INDEX_CHANGED)\n  }\n\n  private onChangeValue(event: Event) {\n    if(this.redrawing) return\n    const idx = (event as CustomEvent).detail?.idx\n    if(idx >= 0) {\n      // Custom event coming from the expression input\n      // Remove the tokens after the changed one\n      const data = this.data.slice(0, idx + 1)\n      if(data.length > idx) {\n        // Clear options\n        if(data[idx].type === 'property' || data[idx].type === 'filter') {\n          (data[idx] as Property | Filter).options = {}\n        }\n      } else {\n        // We selected the \"-\" option, do nothing, this step will be removed\n      }\n      this.data = data\n    } else {\n      // Event coming from the options\n    }\n    // Stop default behavior of inputs\n    event.preventDefault()\n    event.stopImmediatePropagation()\n    event.stopPropagation()\n    // Let the redraw update this.data\n    setTimeout(() => this.dispatchEvent(new Event('change', { bubbles: true })))\n  }\n\n  private onChangeOptions(event: Event, component: Component, popin: PopinForm, idx: number) {\n    if(this.redrawing) return\n    if(!this.editor) throw new Error('editor is required')\n    const input = this.expressionInputRef.value!\n    const tokensStrings = input.value\n    // Get tokens as objects\n    const tokens = tokensStrings\n      .filter(id => !!id)\n      .map(id => {\n        try {\n          return fromString(this.editor!, id, component.getId())\n        } catch(e) {\n          // FIXME: notify user\n          console.error('Error while getting token from string', {id}, e)\n          // Return unknown\n          return {\n            type: 'property',\n            propType: 'field',\n            fieldId: 'unknown',\n            label: 'Unknown',\n            kind: 'scalar',\n            typeIds: [],\n            options: {},\n          } as Property\n        }\n      })\n    // Get the selected options\n    const options = input.options\n      .filter(o => o.selected)\n    // Update the options of the token\n    ;(tokens[idx] as Property | Filter).options = popin.value\n    // Update the dom\n    options[idx].value = toValue(tokens[idx])\n    // Update the state\n    this.requestUpdate()\n    // Stop the original event\n    event.preventDefault()\n    event.stopImmediatePropagation()\n    event.stopPropagation()\n    // Notify the owner\n    this.dispatchEvent(new Event('change', { bubbles: true }))\n  }\n\n  private getOptions(component: Component, tokens: Token[], idx: number): TemplateResult | '' {\n    if(!this.editor) throw new Error('editor is required')\n    const dataTree = getDataTreeFromUtils(this.editor)\n    const token = tokens[idx]\n    const beforeToken = tokens.slice(0, idx)\n    const fields = beforeToken\n      .map(token => {\n        try {\n          return getExpressionResultType(tokens.concat(token), component, dataTree)\n        } catch(e) {\n          // FIXME: notify the user\n          console.error(`Error while getting expression result type for token ${token} on component ${component.getName()}#${component.get('id')}.${component.getClasses().join('.')} (${component.cid})`, e)\n          return null\n        }\n      })\n\n    switch(token.type) {\n    case 'property':\n    case 'filter':\n      if(token.optionsForm) {\n        const form = token.optionsForm(component, fields[fields.length - 1], token.options || {}, this.parentName || this.name)\n        return form || ''\n      }\n      return ''\n    default:\n      return ''\n    }\n  }\n}\n\nif(!window.customElements.get('state-editor')) {\n  window.customElements.define('state-editor', StateEditor)\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {LitElement, html} from 'lit'\nimport { ref } from 'lit/directives/ref.js'\nimport {property} from 'lit/decorators.js'\n\nimport './state-editor'\nimport { StateEditor } from './state-editor'\nimport { Component, Editor } from 'grapesjs'\nimport { PROPERTY_STYLES } from './defaultStyles'\nimport { fromStored } from '../model/token'\nimport { BinariOperator, Properties, Token, UnariOperator } from '../types'\nimport { getState, setState } from '../model/state'\nimport { DataTree } from '../model/DataTree'\nimport { getFixedToken, getDataTreeFromUtils } from '../utils'\n\n/**\n * Editor for selected element's properties\n *\n * Usage:\n *\n * ```\n * <properties-editor disabled>\n *   <style> / * Custom styles * / </style>\n * </properties-editor>\n * ```\n *\n */\n\nexport class PropertiesEditor extends LitElement {\n  @property({type: Boolean})\n    disabled = false\n\n  @property({type: Boolean, attribute: 'default-fixed'})\n    defaultFixed = false\n\n  inputs: Record<Properties, {stateEditor: StateEditor, selected: Component | undefined} | undefined> = {\n    innerHTML: undefined,\n    condition: undefined,\n    condition2: undefined,\n    __data: undefined,\n  }\n\n  private editor: Editor | null = null\n  private redrawing = false\n\n  setEditor(editor: Editor) {\n    if (this.editor) {\n      console.warn('property-editor setEditor already set')\n      return\n    }\n    this.editor = editor\n\n    // Update the UI when a page is added/renamed/removed\n    this.editor.on('page', () => this.requestUpdate())\n\n    // Update the UI on component selection change\n    this.editor.on('component:selected', () => this.requestUpdate())\n\n    // Update the UI on component change\n    this.editor.on('component:update', () => this.requestUpdate())\n  }\n\n  override render() {\n    super.render()\n    this.redrawing = true\n    const selected = this.editor?.getSelected()\n    const head = html`\n      <style>\n        ${PROPERTY_STYLES}\n      </style>\n      <slot></slot>\n    `\n    const empty = html`\n      ${head}\n      <p class=\"ds-empty\">Select an element to edit its properties</p>\n    `\n    if(!this.editor || this.disabled) {\n      this.resetInputs()\n      this.redrawing = false\n      return html``\n    }\n    if(!selected || selected.get('tagName') === 'body') {\n      this.resetInputs()\n      this.redrawing = false\n      return empty\n    }\n    const result =  html`\n      ${head}\n      <section class=\"ds-section\">\n        <div>\n          <div class=\"gjs-traits-label\">Properties</div>\n        </div>\n        <details class=\"ds-states__help\">\n          <summary>Help</summary>\n          Elements properties are expressions that can replace the HTML attributes of the element or it's whole content (innerHTML).\n          <a target=\"_blank\" href=\"https://docs.silex.me/en/user/cms-concepts#properties\">Learn more about element properties</a>\n        </details>\n        <main>\n          ${[\n    {label: 'HTML content', name: Properties.innerHTML, publicState: false},\n  ].map(({label, name, publicState}) => this.renderStateEditor(selected, label, name, publicState))}\n        </main>\n      </section>\n      <section class=\"ds-section\">\n        <div>\n          <div class=\"gjs-traits-label\">Visibility</div>\n        </div>\n        <main>\n          ${this.renderStateEditor(selected, 'Condition', Properties.condition, false)}\n          <div>\n          <span>... is</span>\n          <select\n            class=\"ds-visibility__condition-operator\"\n            @change=${(e: Event) => {\n    const select = e.target as HTMLSelectElement\n    const value = select.value\n    if(!value) throw new Error('Selection required for operator select element')\n    selected.set('conditionOperator', value)\n    this.requestUpdate()\n  }}\n          >\n          </div>\n          ${ Object.values<string>(UnariOperator)\n    .concat(Object.values(BinariOperator))\n    .map(operator => html`\n                <option value=\"${operator}\" .selected=${selected.get('conditionOperator') === operator} >${operator}</option>\n              `)\n}\n          </select>\n          ${ this.renderStateEditor(selected, '', Properties.condition2, false, false, selected.has('conditionOperator') && Object.values(BinariOperator).includes(selected.get('conditionOperator'))) }\n        </main>\n      </section>\n      <section class=\"ds-section\">\n        <div>\n          <label class=\"gjs-traits-label ds-label\">Loop</label>\n        </div>\n        <main>\n          ${this.renderStateEditor(selected, 'Data', Properties.__data, false, true)}\n        </main>\n      </section>\n    `\n    this.redrawing = false\n    return result\n  }\n\n  resetInputs() {\n    this.inputs = {\n      innerHTML: undefined,\n      condition: undefined,\n      condition2: undefined,\n      __data: undefined,\n    }\n  }\n\n  renderStateEditor(selected: Component, label: string, name: Properties, publicState: boolean, hideLoopData = false, visible = true) {\n    return html`\n      <state-editor\n        .style=${visible ? '' : 'display: none;'}\n        .selected=${selected}\n        .editor=${this.editor}\n        id=\"${name}\"\n        name=${name}\n        default-fixed=${this.defaultFixed}\n        ?hide-loop-data=${hideLoopData}\n        ?show-preview-index-ui=${name === Properties.__data}\n        ${ref(el => {\n    // Get the stateEditor ref\n    if (el) {\n      // Set the editor - we could do this only once\n      const stateEditor = el as StateEditor\n      // Store the stateEditor ref and the component it is representing\n      if (!this.inputs[name]) {\n        this.inputs[name] = {\n          stateEditor,\n          selected: undefined, // clear the selected component so that we update the data\n        }\n      }\n    }\n    // Finally update the data\n    if (this.inputs[name]) {\n      const stateEditorFinally = this.inputs[name]!.stateEditor\n      this.redrawing = true\n      try {\n        stateEditorFinally.data = this.getTokens(getDataTreeFromUtils(this.editor!), selected, name, publicState)\n      } catch (e) {\n        console.error('Error setting data', e)\n        stateEditorFinally.data = [getFixedToken(`Error setting data: ${e}`)]\n      }\n      this.redrawing = false\n      // Store the selected component\n      this.inputs[name]!.selected = selected\n    }\n  })}\n        @change=${() => this.onChange(selected, name, publicState)}\n        ?disabled=${this.disabled}\n      >\n        <label slot=\"label\">${label}</label>\n      </state-editor>\n    `\n  }\n\n  onChange(component: Component, name: Properties, publicState: boolean) {\n    const {stateEditor} = this.inputs[name]!\n    if(this.redrawing) return\n    if (name === Properties.__data) {\n      setState(component, name, {\n        expression: stateEditor.data.slice(0, -1).concat({\n          ...stateEditor.data[stateEditor.data.length - 1],\n          previewIndex: 0,\n        } as unknown as Token),\n      }, publicState)\n    } else {\n      setState(component, name, {\n        expression: stateEditor.data,\n      }, publicState)\n    }\n  }\n\n  getTokens(dataTree: DataTree, component: Component, name: Properties, publicState: boolean): Token[] {\n    const state = getState(component, name, publicState)\n    if(!state || !state.expression) return []\n    return state.expression.map(token => fromStored(token, dataTree, component.getId()))\n  }\n}\n\nif(!window.customElements.get('properties-editor')) {\n  window.customElements.define('properties-editor', PropertiesEditor)\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {LitElement, html} from 'lit'\nimport { ref } from 'lit/directives/ref.js'\nimport {property} from 'lit/decorators.js'\nimport { StoredState, getState, getStateIds, removeState, setState } from '../model/state'\nimport { Token  } from '../types'\n\nimport './state-editor'\nimport { StateEditor } from './state-editor'\nimport { Component, Editor } from 'grapesjs'\nimport { PROPERTY_STYLES } from './defaultStyles'\nimport { fromStored } from '../model/token'\nimport { DataTree } from '../model/DataTree'\nimport { cleanStateName, getDataTreeFromUtils } from '../utils'\n\ninterface Item {\n  name: string\n  publicState?: boolean\n  state: StoredState\n}\n\n/**\n * Editor for selected element's states\n *\n */\nexport class CustomStatesEditor extends LitElement {\n  @property({type: Boolean})\n    disabled = false\n\n  @property({type: Boolean, attribute: 'private-state'})\n    privateState = false\n\n  @property({type: String})\n    title = 'Custom states'\n\n  @property({type: Boolean, attribute: 'default-fixed'})\n    defaultFixed = false\n\n  @property({type: String, attribute: 'create-prompt'})\n    createPrompt = 'Name this state'\n\n  @property({type: String, attribute: 'rename-prompt'})\n    renamePrompt = 'Rename this state'\n\n  @property({type: String, attribute: 'default-name'})\n    defaultName = 'New state'\n\n  // This is a comma separated list of reserved names\n  // Or an array of reserved names\n  @property({type: String, attribute: 'reserved-names'})\n  get reservedNames() { return this._reservedNames }\n  set reservedNames(value: string | string[]) {\n    if(typeof value === 'string') this._reservedNames = value.split(',').map(s => s.trim())\n    else this._reservedNames = value\n  }\n\n  @property({type: Boolean, attribute: 'hide-loop-data'})\n    hideLoopData = false\n\n  @property({type: String, attribute: 'help-text'})\n    helpText = ''\n\n  @property({type: String, attribute: 'help-link'})\n    helpLink = ''\n\n  private _reservedNames: string[] = []\n  private editor: Editor | null = null\n  private redrawing = false\n\n  setEditor(editor: Editor) {\n    if (this.editor) {\n      console.warn('property-editor setEditor already set')\n      return\n    }\n    this.editor = editor\n\n    // Update the UI when a page is added/renamed/removed\n    this.editor.on('page', () => this.requestUpdate())\n\n    // Update the UI on component selection change\n    this.editor.on('component:selected', () => this.requestUpdate())\n\n    // Update the UI on component change\n    this.editor.on('component:update', () => this.requestUpdate())\n  }\n\n  getHead(selected: Component | null) {\n    return html`\n      <style>\n        ${PROPERTY_STYLES}\n      </style>\n      <slot></slot>\n      <section class=\"ds-section\">\n        <div>\n          <div class=\"gjs-traits-label\">\n            <span>${this.title}</span>\n            ${ selected ? html`\n            <button\n              title=\"Add a new state\"\n              class=\"ds-states__add-button ds-states__button\"\n              @click=${() => {\n    const item = this.createCustomState(selected)\n    if(!item) return\n    this.setState(selected, item.name, item.state)\n  }}\n              >+</button>\n            ` : ''}\n          </div>\n        </div>\n        ${this.helpText ? html`\n        <details class=\"ds-states__help\">\n          <summary>Help</summary>\n          <span>${ this.helpText }</span>\n          ${this.helpLink ? html`\n          <a\n            class=\"ds-states__help-link\"\n            href=\"${this.helpLink}\"\n            target=\"_blank\"\n            >\\u{1F517} Read more...</a>\n          ` : ''}\n        </details>\n        ` : ''}\n      </section>\n    `\n  }\n\n  override render() {\n    super.render()\n    this.redrawing = true\n    const selected = this.editor?.getSelected()\n    const empty = html`\n      ${this.getHead(null)}\n      <p class=\"ds-empty\">Select an element to edit its states</p>\n    `\n    if(!this.editor || this.disabled) {\n      this.redrawing = false\n      return html``\n    }\n    if(!selected) {\n      this.redrawing = false\n      return empty\n    }\n    const items: Item[] = this.getStateIds(selected)\n      .map(stateId => ({\n        name: stateId,\n        publicState: !this.privateState,\n        state: this.getState(selected, stateId)!,\n      }))\n      .filter(item => item.state && !item.state.hidden)\n    const result =  html`\n      ${this.getHead(selected)}\n      <div class=\"ds-states\">\n        <div class=\"ds-states__items\">\n          ${items\n    .map((item, index) => html`\n            <div class=\"ds-states__item\">\n              ${this.getStateEditor(selected, item.state.label || '', item.name)}\n              <div class=\"ds-states__buttons\">\n                <button\n                  title=\"Remove this state\"\n                  class=\"ds-states__remove-button ds-states__button\"\n                  @click=${() => {\n    this.removeState(selected, item.name)\n    this.requestUpdate()\n  }}\n                  >x</button>\n                <button\n                  title=\"Rename this state\"\n                  class=\"ds-states__rename-button ds-states__button\"\n                  @click=${() => {\n    const newItem = this.renameCustomState(item)\n    if(!newItem || newItem === item) return\n    this.removeState(selected, item.name)\n    this.setState(selected, newItem.name, newItem.state)\n    this.requestUpdate()\n  }}\n                  >\\u270F</button>\n                  <button\n                    title=\"Move this state up\"\n                    class=\"ds-states__item-move-up ds-states__button${ index === 0 ? ' ds-states__button--disabled' : '' }\"\n                    @click=${() => {\n    items.splice(index - 1, 0, items.splice(index, 1)[0])\n    this.updateOrderCustomStates(selected, items)\n  }}\n                    >\\u2191</button>\n                  <button\n                    title=\"Move this state down\"\n                    class=\"ds-states__item-move-down ds-states__button${ index === items.length - 1 ? ' ds-states__button--disabled' : '' }\"\n                    @click=${() => {\n    items.splice(index + 1, 0, items.splice(index, 1)[0])\n    this.updateOrderCustomStates(selected, items)\n  }}\n                  >\\u2193</button>\n              </div>\n            </div>\n            <hr class=\"ds-states__sep\" />\n          `)}\n        </div>\n      </div>\n    `\n    this.redrawing = false\n    return result\n  }\n\n  /**\n   * Get the states for this type of editor\n   */\n  getStateIds(component: Component): string[] {\n    return getStateIds(component, !this.privateState)\n      // Filter out the states which are properties\n      .filter(stateId => !this.reservedNames.includes(stateId))\n  }\n\n  /**\n   * Get the states for this type of editor\n   */\n  getState(component: Component, name: string): StoredState | null {\n    return getState(component, name, !this.privateState)\n  }\n\n  /**\n   * Set the states for this type of editor\n   */\n  setState(component: Component, name: string, state: StoredState) {\n    setState(component, name, state, !this.privateState)\n  }\n\n  /**\n   * Remove the states for this type of editor\n   */\n  removeState(component: Component, name: string) {\n    removeState(component, name, !this.privateState)\n  }\n\n  getStateEditor(selected: Component, label: string, name: string) {\n    return html`\n      <state-editor\n        .selected=${selected}\n        .editor=${this.editor}\n        id=\"${name}\"\n        name=${name}\n        ?hide-loop-data=${this.hideLoopData}\n        default-fixed=${this.defaultFixed}\n        ${ref(el => {\n    if (el) {\n      const stateEditor = el as StateEditor\n      stateEditor.data = this.getTokens(getDataTreeFromUtils(this.editor!), selected, name)\n    }\n  })}\n        @change=${() => this.onChange(selected, name, label)}\n        .disabled=${this.disabled}\n      >\n        <label slot=\"label\">${label || name}</label>\n      </state-editor>\n    `\n  }\n\n  onChange(component: Component, name: string, label: string) {\n    if(this.redrawing) return\n    const stateEditor = this.shadowRoot!.querySelector(`#${name}`) as StateEditor\n    this.setState(component, name, {\n      expression: stateEditor.data,\n      label,\n    })\n  }\n\n  getTokens(dataTree: DataTree, component: Component, name: string): Token[] {\n    const state = this.getState(component, name)\n    if(!state || !state.expression) return []\n    return state.expression.map(token => {\n      try {\n        return fromStored(token, dataTree, component.getId())\n      } catch {\n        // FIXME: notify user\n        console.error('Error while getting expression result type in getTokens', {expression: state.expression, component, dataTree, name})\n        return {\n          type: 'property',\n          propType: 'field',\n          fieldId: 'unknown',\n          label: 'unknown',\n          kind: 'scalar',\n          typeIds: [],\n        }\n      }\n    })\n  }\n\n  /**\n   * Rename a custom state\n   */\n  renameCustomState(item: Item): Item {\n    const label = prompt(this.renamePrompt, item.state.label)\n      ?.toLowerCase()\n      ?.replace(/[^a-z0-9]/g, '-')\n      ?.replace(/^-+|-+$/g, '')\n    if (!label || label === item.state.label) return item\n    return {\n      ...item,\n      state: {\n        ...item.state,\n        label: label,\n      }\n    }\n  }\n\n  /**\n   * Update the custom states, in the order of the list\n   */\n  updateOrderCustomStates(component: Component, items: Item[]) {\n    const stateIds = this.getStateIds(component)\n    // Remove all states\n    stateIds.forEach(stateId => {\n      if(items.map(item => item.name).includes(stateId)) {\n        this.removeState(component, stateId)\n      }\n    })\n    // Add states in the order of the list\n    items.forEach(item => {\n      this.setState(component, item.name, item.state)\n    })\n  }\n\n  /**\n   * Create a new custom state\n   */\n  createCustomState(component: Component): Item | null {\n    const label = cleanStateName(prompt(this.createPrompt, this.defaultName))\n    if (!label) return null\n\n    if(this.reservedNames.includes(label)) {\n      alert(`The name ${label} is reserved, please choose another name`)\n      return null\n    }\n    const stateId = `${component.getId()}-${Math.random().toString(36).slice(2)}`\n    const state: StoredState = {\n      label,\n      expression: [],\n    }\n    this.setState(component, stateId, state)\n    return {\n      name: stateId,\n      state,\n      publicState: !this.privateState,\n    }\n  }\n}\n\nif(!customElements.get('custom-states-editor')) {\n  customElements.define('custom-states-editor', CustomStatesEditor)\n}\n","import { Editor, Component } from 'grapesjs'\nimport { getState, StoredState } from '../model/state'\nimport { Properties, DATA_SOURCE_CHANGED, DATA_SOURCE_DATA_LOAD_END, StoredToken, BinariOperator, UnariOperator } from '../types'\nimport { fromStored } from '../model/token'\nimport { DataTree } from '../model/DataTree'\nimport { getDataTreeFromUtils } from '../utils'\n\nfunction getPrivateState(component: Component, stateId: string): StoredState | null {\n  return getState(component, stateId, false)\n}\n\n// Pure function to evaluate a single condition\nfunction evaluateCondition(expression: StoredToken[], component: Component, dataTree: DataTree): unknown | null {\n  try {\n    const tokens = expression.map(token => fromStored(token, dataTree, component.getId?.() || null))\n    return dataTree.getValue(tokens, component, true)\n  } catch (e) {\n    console.warn('Error evaluating condition:', e)\n    return null\n  }\n}\n\n// Pure function to render innerHTML for a component at a specific loop index\nfunction renderInnerHTML(component: Component, dataTree: DataTree, loopIndex?: number): string | null {\n  const innerHTML = getPrivateState(component, Properties.innerHTML)\n  if (innerHTML === null) {\n    return null\n  }\n  try {\n    // Set preview index for loop context\n    if (typeof loopIndex === 'number') {\n      setPreviewIndex(component, loopIndex)\n    }\n    const value = evaluateCondition(innerHTML.expression, component, dataTree)\n    return value !== null && value !== undefined ? String(value) : null\n  } catch (e) {\n    console.warn('Error rendering innerHTML:', e)\n    return null\n  }\n}\n\n// Pure function to set preview index on all tokens in a component\nfunction setPreviewIndex(component: Component, index: number): void {\n  const privateStates = component.get('privateStates') || []\n  privateStates.forEach((state: {id: string, expression: StoredToken[]}) => {\n    if (state.expression && state.expression.length > 0) {\n      state.expression.forEach((token: StoredToken & {previewIndex?: number}) => {\n        if (token.type === 'state' && token.storedStateId === '__data') {\n          token.previewIndex = index\n        } else if (token.type === 'property' || token.type === 'filter') {\n          token.previewIndex = index\n        }\n      })\n    }\n  })\n}\n\nfunction renderLoopData(\n  component: Component,\n  dataTree: DataTree,\n): unknown[] | null {\n  try {\n    const dataState = getPrivateState(component, Properties.__data)!\n    if (dataState === null) {\n      return null\n    }\n    const result = dataTree.getValue(dataState.expression, component, false) // Get full array\n    return Array.isArray(result) ? result : null\n  } catch (e) {\n    console.warn('Error getting loop data:', e)\n    return null\n  }\n}\n\n// Export for tests\nexport function isComponentVisible(\n  component: Component,\n  dataTree: DataTree,\n): boolean {\n  const condition1State = getPrivateState(component, Properties.condition)\n  const condition2State = getPrivateState(component, Properties.condition2)\n  const conditionOperator = component.get('conditionOperator')\n\n  // If no condition is set, component is visible\n  if (!condition1State || !condition1State?.expression || condition1State?.expression.length === 0) {\n    return true\n  }\n\n  const condition1Value = dataTree.getValue(condition1State.expression, component, true)\n\n  // For unary operators, only condition1 is needed\n  switch (conditionOperator) {\n  case UnariOperator.TRUTHY:\n    return !!condition1Value\n  case UnariOperator.FALSY:\n    return !condition1Value\n  case UnariOperator.EMPTY_ARR:\n    return Array.isArray(condition1Value) && condition1Value.length === 0\n  case UnariOperator.NOT_EMPTY_ARR:\n    return Array.isArray(condition1Value) && condition1Value.length > 0\n  default:\n  }\n\n  // For binary operators, we need condition2\n  if (!condition2State || !condition2State.expression || condition2State.expression.length === 0) {\n    return false\n  }\n\n  const condition2Value = dataTree.getValue(condition2State.expression, component, true)\n\n  // Apply binary operator\n  switch (conditionOperator) {\n  case BinariOperator.EQUAL:\n    return condition1Value == condition2Value\n  case BinariOperator.NOT_EQUAL:\n    return condition1Value !== condition2Value\n  case BinariOperator.GREATER_THAN:\n    return Number(condition1Value) > Number(condition2Value)\n  case BinariOperator.LESS_THAN:\n    return Number(condition1Value) < Number(condition2Value)\n  case BinariOperator.GREATER_THAN_OR_EQUAL:\n    return Number(condition1Value) >= Number(condition2Value)\n  case BinariOperator.LESS_THAN_OR_EQUAL:\n    return Number(condition1Value) <= Number(condition2Value)\n  default:\n    throw new Error(`Unknown operator ${conditionOperator}`)\n  }\n}\n\nfunction renderAttributes(\n  component: Component,\n  dataTree: DataTree,\n): void {\n  const privateStates = component.get('privateStates') || []\n  privateStates.forEach((state: {id: string, expression: StoredToken[], label?: string}) => {\n    // Skip condition states and internal data states - they should not become HTML attributes\n    if (state.id &&\n        state.id !== Properties.innerHTML &&\n        state.id !== Properties.__data &&\n        state.id !== Properties.condition &&\n        state.id !== Properties.condition2 &&\n        state.expression) {\n      try {\n        const value = dataTree.getValue(state.expression, component, true)\n        if (value !== null && value !== undefined) {\n          component.view?.el.setAttribute(state.label || state.id, String(value))\n        }\n      } catch (e) {\n        console.warn(`Error evaluating attribute ${state.id}:`, e)\n      }\n    }\n  })\n}\n\n// // Helper to extend a component instance\n// function extendComponent(comp: Component, onRender: (c: Component) => void) {\n//   // Extend view\n//   if (comp.view) {\n//     const origOnRender = comp.view.onRender?.bind(comp.view)\n//     comp.view.onRender = function (opts: ClbObj) {\n//       if (origOnRender) origOnRender(opts)\n//       onRender(comp)\n//     }\n//   }\n// }\n//\n// /**\n//  * Applies extended model/view logic to all existing components in the editor.\n//  * @param editor The GrapesJS editor instance\n//  */\n// function extendAllComponents(editor: Editor, onRender: (c: Component) => void, parents: Components = editor.getComponents()) {\n//   parents.forEach((comp) => {\n//     extendComponent(comp, onRender)\n//     extendAllComponents(editor, onRender, comp.components())\n//   })\n// }\n//\n\nfunction renderContent(comp: Component, dataTree: DataTree, deep: number) {\n  const innerHtml = renderInnerHTML(comp, dataTree)\n  if (innerHtml === null) {\n    comp.view!.render()\n    comp.components()\n      .forEach(c => onRender(c, dataTree, deep+1))\n  } else {\n    comp.view!.el.innerHTML = innerHtml!\n  }\n}\n\n// exported for unit tests only\nexport function onRender(comp: Component, dataTree: DataTree, deep = 0) {\n  const view = comp.view\n  if (!view) {\n    return\n  }\n  const el = view.el\n  const __data = renderLoopData(comp, dataTree)\n  if (__data) {\n    if (__data.length === 0) {\n      el.remove()\n    } else {\n      // Render each loop iteration\n      // Render first iteration in the original element\n      setPreviewIndex(comp, 0)\n      if(isComponentVisible(comp, dataTree)) {\n        comp.components().forEach(c => onRender(c, dataTree, deep+1))\n        renderAttributes(comp, dataTree)\n      } else {\n        el.remove()\n      }\n\n      // For subsequent iterations: clone first, then render into original, then clone again\n      for (let idx = 1; idx < __data.length; idx++) {\n        // Clone the current state (with previous iteration's content)\n        const clone = el.cloneNode(true) as HTMLElement\n        el.insertAdjacentElement('afterend', clone)\n\n        // Set preview index for the next iteration and render into original element\n        setPreviewIndex(comp, idx)\n        if (isComponentVisible(comp, dataTree)) {\n          renderContent(comp, dataTree, deep)\n          renderAttributes(comp, dataTree)\n        } else {\n          // el.setAttribute('data-hidden', '')\n          // el.style.display = 'none'\n          // el.innerHTML = 'xxxx'\n          el.remove()\n        }\n      }\n    }\n  } else {\n    if(isComponentVisible(comp, dataTree)) {\n      renderContent(comp, dataTree, deep)\n      renderAttributes(comp, dataTree)\n    } else {\n      el.remove()\n    }\n  }\n}\n\n// GrapesJS plugin setup\nexport default (editor: Editor) => {\n  const dataTree = getDataTreeFromUtils()\n\n  // Listen for data source changes\n  editor.on(`${DATA_SOURCE_CHANGED} ${DATA_SOURCE_DATA_LOAD_END} component style:change storage:after:load`, () => {\n    console.log('Data changed, need to refresh the canvas')\n    onRender(editor.getWrapper()!, dataTree)\n  })\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { DataSourceEditorOptions, DataSourceEditorViewOptions, Properties } from '../types'\nimport { PROPERTY_STYLES } from './defaultStyles'\n\nimport { PropertiesEditor } from './properties-editor'\nimport { CustomStatesEditor } from './custom-states-editor'\n\nimport settings from './settings'\nimport { Editor } from 'grapesjs'\n\nimport '@silexlabs/expression-input'\nimport './properties-editor'\nimport './custom-states-editor'\nimport canvas from './canvas'\nimport { getElementFromOption } from '../utils'\n\nexport default (editor: Editor, opts: DataSourceEditorOptions) => {\n  if (opts.view.el) {\n    const options: DataSourceEditorViewOptions = {\n      styles: PROPERTY_STYLES,\n      defaultFixed: false,\n      disableStates: false,\n      disableAttributes: false,\n      disableProperties: false,\n      ...opts.view,\n    }\n\n    // create a wrapper for our UI\n    const wrapper = document.createElement('section')\n    wrapper.classList.add('gjs-one-bg', 'ds-wrapper')\n\n    // Add the web components\n    const states = options.disableStates ? '' : `\n      <custom-states-editor\n        class=\"ds-states\"\n        title=\"States\"\n        default-fixed=${options.defaultFixed}\n        create-prompt=\"Create a new state\"\n        rename-prompt=\"Rename the state\"\n        default-name=\"New state\"\n        reserved-names=${Object.keys(Properties).join(',')}\n        hide-loop-data\n        help-text=\"\n          Custom states are used to store data in the component.\\n\n          They are useful to store data that is not displayed in the page, but that is used in the expressions everywhere inside the element.\n        \"\n        help-link=\"https://docs.silex.me/en/user/cms-concepts#states\"\n        >\n        <style>\n          ${options.styles}\n        </style>\n      </custom-states-editor>\n    `\n    const attributes = options.disableAttributes ? '' : `\n      <custom-states-editor\n        class=\"ds-attributes\"\n        private-state\n        title=\"Attributes\"\n        default-fixed=${options.defaultFixed}\n        create-prompt=\"Name of the attribute\"\n        rename-prompt=\"Rename the attribute\"\n        default-name=\"New attribute\"\n        reserved-names=${Object.keys(Properties).join(',')}\n        help-text=\"\n          HTML attributes of the element.\\n\n          For example you can set the 'href' attribute of a link, or the 'src' attribute of an image.\n        \"\n        help-link=\"https://docs.silex.me/en/user/cms-concepts#attributes\"\n        >\n        <style>\n          ${options.styles}\n        </style>\n      </custom-states-editor>\n    `\n    const properties = options.disableProperties ? '' : `\n      <properties-editor\n        class=\"ds-properties\"\n        default-fixed=${options.defaultFixed}\n      >\n        <style>\n          ${options.styles}\n        </style>\n      </properties-editor>\n    `\n    wrapper.innerHTML = `\n      ${states}\n      ${attributes}\n      ${properties}\n    `\n\n    // Build the settings view\n    settings(editor, options)\n\n    // The options el and button can be functions which use editor so they need to be called asynchronously\n    editor.onReady(() => {\n      // Get the container element for the UI\n      const el = getElementFromOption(options.el, 'options.el')\n\n      // Append the wrapper to the container\n      el.appendChild(wrapper)\n\n      // Get references to the web components\n      const propertiesUi = wrapper.querySelector('properties-editor.ds-properties') as PropertiesEditor\n      const statesUi = wrapper.querySelector('custom-states-editor.ds-states') as CustomStatesEditor\n      const attributesUi = wrapper.querySelector('custom-states-editor.ds-attributes') as CustomStatesEditor\n\n      // Init web components\n      propertiesUi?.setEditor(editor)\n      statesUi?.setEditor(editor)\n      attributesUi?.setEditor(editor)\n\n      // Show the UI when the button is clicked\n      if (options.button) {\n        const button = typeof options.button === 'function' ? options.button() : options.button\n        if (!button) throw new Error(`Element ${options.button} not found`)\n        button.on('change', () => {\n          if (button.active) {\n            // Move at the bottom\n            el.appendChild(wrapper)\n            // Show the UI\n            wrapper.style.display = 'block'\n            // Change web components state\n            propertiesUi?.removeAttribute('disabled')\n            statesUi?.removeAttribute('disabled')\n            attributesUi?.removeAttribute('disabled')\n          } else {\n            // Hide the UI\n            wrapper.style.display = 'none'\n            // Change web components state\n            propertiesUi?.setAttribute('disabled', '')\n            statesUi?.setAttribute('disabled', '')\n            attributesUi?.setAttribute('disabled', '')\n          }\n        })\n        wrapper.style.display = button.active ? 'block' : 'none'\n      }\n      canvas(editor)\n    })\n  } else {\n    console.warn('Dynamic data UI not enabled, please set the el option to enable it')\n  }\n}\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n/**\n * Public API for @silexlabs/grapesjs-data-source\n *\n * This file contains all the functions that calling apps should use.\n * It provides clean, simple APIs that hide internal complexity like DataTree management.\n */\n\nimport { Page, Editor, Component } from 'grapesjs'\nimport { DataSourceId, IDataSource, Expression, StateId, StoredToken, Token, Field, Context, TypeId } from './types'\n\n// Internal imports\nimport { getPageQuery as getPageQueryInternal, buildPageQueries as buildPageQueriesInternal } from './model/queryBuilder'\nimport { getDataTree as getDataTreeInternal, refreshDataSources as refreshDataSourcesInternal } from './model/dataSourceManager'\nimport {\n  getAllDataSources as getAllDataSourcesInternal,\n  getDataSource as getDataSourceInternal,\n  addDataSource as addDataSourceInternal,\n  removeDataSource as removeDataSourceInternal\n} from './model/dataSourceRegistry'\nimport {\n  loadPreviewData as loadPreviewDataInternal,\n  getPreviewData as getPreviewDataInternal,\n  clearPreviewData as clearPreviewDataInternal\n} from './model/previewDataLoader'\nimport {\n  fromStored as fromStoredInternal,\n  getExpressionResultType as getExpressionResultTypeInternal\n} from './model/token'\nimport {\n  getPersistantId as getPersistantIdInternal,\n  getOrCreatePersistantId as getOrCreatePersistantIdInternal,\n  getState as getStateInternal,\n  getStateIds as getStateIdsInternal,\n  setState as setStateInternal,\n  removeState as removeStateInternal,\n  getStateVariableName as getStateVariableNameInternal,\n  COMPONENT_NAME_PREFIX as COMPONENT_NAME_PREFIX_INTERNAL,\n  type PersistantId,\n  type StoredState\n} from './model/state'\nimport { NOTIFICATION_GROUP as NOTIFICATION_GROUP_INTERNAL, FIXED_TOKEN_ID as FIXED_TOKEN_ID_INTERNAL, toExpression as toExpressionInternal, createDataSource as createDataSourceInternal } from './utils'\nimport { COMMAND_REFRESH, DATA_SOURCE_CHANGED, DATA_SOURCE_ERROR } from './types'\nimport { GraphQLOptions } from './datasources/GraphQL'\nimport { getCompletion as getCompletionInternal } from './model/completion'\nimport getLiquidFiltersInternal from './filters/liquid'\n\n// ===============================\n// QUERY GENERATION\n// ===============================\n\n/**\n * Generate GraphQL query for a single page\n * Used by both preview and production (11ty site generation)\n *\n * @param page - The GrapesJS page to generate query for\n * @param editor - The GrapesJS editor instance\n * @returns Record of data source ID to GraphQL query string\n */\nexport function getPageQuery(page: Page, editor: Editor): Record<DataSourceId, string> {\n  const dataTree = getDataTreeInternal()\n  return getPageQueryInternal(page, editor, dataTree)\n}\n\n/**\n * Generate queries for multiple pages\n * Useful for batch operations like static site generation\n *\n * @param pages - Array of GrapesJS pages\n * @param editor - The GrapesJS editor instance\n * @returns Record of page ID to data source queries\n */\nexport function buildPageQueries(pages: Page[], editor: Editor): Record<string, Record<DataSourceId, string>> {\n  const dataTree = getDataTreeInternal()\n  return buildPageQueriesInternal(pages, editor, dataTree)\n}\n\n// ===============================\n// DATA SOURCE MANAGEMENT\n// ===============================\n\n/**\n * Get all data sources\n * @returns Array of all registered data sources\n */\nexport function getAllDataSources(): IDataSource[] {\n  return getAllDataSourcesInternal()\n}\n\n/**\n * Get a specific data source by ID\n * @param id - The data source ID\n * @returns The data source or undefined if not found\n */\nexport function getDataSource(id: DataSourceId): IDataSource | undefined {\n  return getDataSourceInternal(id)\n}\n\n/**\n * Add a new data source\n * @param dataSource - The data source to add\n */\nexport function addDataSource(dataSource: IDataSource): void {\n  return addDataSourceInternal(dataSource)\n}\n\n/**\n * Remove a data source\n * @param dataSource - The data source to remove\n */\nexport function removeDataSource(dataSource: IDataSource): void {\n  return removeDataSourceInternal(dataSource)\n}\n\n/**\n * Refresh preview data from all data sources\n * Triggers data loading for the current page\n */\nexport function refreshDataSources(): void {\n  return refreshDataSourcesInternal()\n}\n\n// ===============================\n// PREVIEW DATA MANAGEMENT\n// ===============================\n\n/**\n * Load preview data for the current page\n * @param forceRefresh - If true, bypass query comparison and force refresh\n * @returns Promise that resolves when data is loaded\n */\nexport function loadPreviewData(forceRefresh: boolean = false): Promise<void> {\n  return loadPreviewDataInternal(forceRefresh)\n}\n\n/**\n * Get current preview data\n * @returns Record of data source ID to preview data\n */\nexport function getPreviewData(): Record<DataSourceId, unknown> {\n  return getPreviewDataInternal()\n}\n\n/**\n * Clear all preview data\n */\nexport function clearPreviewData(): void {\n  return clearPreviewDataInternal()\n}\n\n// ===============================\n// DATA TREE OPERATIONS\n// ===============================\n\n\n/**\n * Evaluate an expression with current preview data\n * @param expression - The expression to evaluate\n * @param component - The component context\n * @returns The evaluated result\n */\nexport function getValue(expression: Expression, component: Component, resolvePreviewIndex = true): unknown {\n  const dataTree = getDataTreeInternal()\n  return dataTree.getValue(expression, component, resolvePreviewIndex)\n}\n\n/**\n * Get all expressions used by components on a page\n * @param page - The page to analyze\n * @returns Array of component expressions\n */\nexport function getPageExpressions(page: Page) {\n  const dataTree = getDataTreeInternal()\n  return dataTree.getPageExpressions(page)\n}\n\n/**\n * Get auto-completion options for expressions\n * @param options - Completion options including component, expression, etc.\n * @returns Context with available tokens for completion\n */\nexport function getCompletion(options: { component: Component, expression: Expression, rootType?: TypeId, currentStateId?: StateId, hideLoopData?: boolean}): Context {\n  const dataTree = getDataTreeInternal()\n  return getCompletionInternal({\n    ...options,\n    dataTree\n  })\n}\n\n/**\n * Convert a stored token to its full form with methods and properties\n * @param token - The stored token to convert\n * @param componentId - The component ID for context (can be null)\n * @returns The full token with all properties and methods\n */\nexport function fromStored<T extends Token = Token>(token: StoredToken, componentId: string | null): T {\n  const dataTree = getDataTreeInternal()\n  return fromStoredInternal(token, dataTree, componentId)\n}\n\n/**\n * Get the result type of an expression\n * @param expression - The expression to analyze\n * @param component - The component context\n * @returns The field describing the result type, or null if invalid\n */\nexport function getExpressionResultType(expression: Expression, component: Component): Field | null {\n  const dataTree = getDataTreeInternal()\n  return getExpressionResultTypeInternal(expression, component, dataTree)\n}\n\n// ===============================\n// STATE MANAGEMENT\n// ===============================\n\n/**\n * Get the persistent ID of a component\n * @param component - The component to get ID for\n * @returns The persistent ID or null if not set\n */\nexport function getPersistantId(component: Component): PersistantId | null {\n  return getPersistantIdInternal(component)\n}\n\n/**\n * Get or create the persistent ID of a component\n * @param component - The component to get/create ID for\n * @returns The persistent ID\n */\nexport function getOrCreatePersistantId(component: Component): PersistantId {\n  return getOrCreatePersistantIdInternal(component)\n}\n\n/**\n * Get a state from a component\n * @param component - The component to get state from\n * @param id - The state ID\n * @param exported - Whether to get exported (public) or private state\n * @returns The state or null if not found\n */\nexport function getState(component: Component, id: StateId, exported: boolean = true): StoredState | null {\n  return getStateInternal(component, id, exported)\n}\n\n/**\n * Get all state IDs from a component\n * @param component - The component to get state IDs from\n * @param exported - Whether to get exported (public) or private state IDs\n * @param before - Optional state ID to get IDs before\n * @returns Array of state IDs\n */\nexport function getStateIds(component: Component, exported: boolean = true, before?: StateId): StateId[] {\n  return getStateIdsInternal(component, exported, before)\n}\n\n/**\n * Set a state on a component\n * @param component - The component to set state on\n * @param id - The state ID\n * @param state - The state to set\n * @param exported - Whether to set as exported (public) or private state\n * @param index - Optional index to insert at\n */\nexport function setState(component: Component, id: StateId, state: StoredState, exported: boolean = true, index: number = -1): void {\n  return setStateInternal(component, id, state, exported, index)\n}\n\n/**\n * Remove a state from a component\n * @param component - The component to remove state from\n * @param id - The state ID to remove\n * @param exported - Whether to remove from exported (public) or private states\n */\nexport function removeState(component: Component, id: StateId, exported: boolean = true): void {\n  return removeStateInternal(component, id, exported)\n}\n\n/**\n * Get the variable name for a state\n * @param componentId - The component ID\n * @param stateId - The state ID\n * @returns The variable name\n */\nexport function getStateVariableName(componentId: string, stateId: StateId): string {\n  return getStateVariableNameInternal(componentId, stateId)\n}\n\n// ===============================\n// TOKEN AND EXPRESSION UTILITIES\n// ===============================\n\n/**\n * Convert JSON or string to an Expression object\n * @param json - The JSON or string to convert\n * @returns The Expression object or null if invalid\n */\nexport function toExpression(json: unknown | string): Expression | null {\n  return toExpressionInternal(json)\n}\n\n// ===============================\n// UTILITY FUNCTIONS\n// ===============================\n\n/**\n * Create a data source instance\n * @param options - The data source configuration\n * @returns The created data source\n */\nexport function createDataSource(opts: Partial<GraphQLOptions> = {}): IDataSource {\n  return createDataSourceInternal(opts)\n}\n\nexport function getLiquidFilters(editor: Editor) {\n  return getLiquidFiltersInternal(editor)\n}\n\n// ===============================\n// CONSTANTS\n// ===============================\n\n/**\n * Notification group name for data source notifications\n */\nexport const NOTIFICATION_GROUP = NOTIFICATION_GROUP_INTERNAL\n\n/**\n * Component name prefix for data source components\n */\nexport const COMPONENT_NAME_PREFIX = COMPONENT_NAME_PREFIX_INTERNAL\n\n/**\n * Command name for refreshing data sources\n */\nexport { COMMAND_REFRESH }\n\n/**\n * Event name for data source changes\n */\nexport { DATA_SOURCE_CHANGED }\n\n/**\n * Event name for data source errors\n */\nexport { DATA_SOURCE_ERROR }\n\n/**\n * Fixed token ID for hard-coded values\n */\nexport const FIXED_TOKEN_ID = FIXED_TOKEN_ID_INTERNAL\n","/*\n * Silex website builder, free/libre no-code tool for makers.\n * Copyright (c) 2023 lexoyo and Silex Labs foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport commands from './commands'\nimport { initializeDataSourceManager, refreshDataSources } from './model/dataSourceManager'\nimport storage from './storage'\nimport { COMMAND_REFRESH, COMMAND_PREVIEW_ACTIVATE, COMMAND_PREVIEW_DEACTIVATE, COMMAND_PREVIEW_REFRESH, DATA_SOURCE_ERROR, DataSourceEditorOptions, IDataSource, IDataSourceOptions } from './types'\nimport { createDataSource, NOTIFICATION_GROUP } from './utils'\nimport view from './view'\nimport { Editor } from 'grapesjs'\n\n/**\n * Export the public API\n */\n// Main public API - this is what apps should use\nexport * from './api'\n\n// Types and interfaces that apps need\nexport * from './types'\n\n/**\n * GrapeJs plugin entry point\n */\nexport default (editor: Editor, opts: Partial<DataSourceEditorOptions> = {}) => {\n  const options: DataSourceEditorOptions = {\n    dataSources: [],\n    filters: [],\n    previewActive: true, // Default to preview active\n    ...opts,\n    view: {\n      el: '.gjs-pn-panel.gjs-pn-views-container',\n      ...opts?.view,\n    },\n  }\n\n  const dataSources = options.dataSources\n    // Make sure the data sources from the config are readonly\n    .map(ds => ({ ...ds, readonly: true }))\n    // Create the data sources from config\n    .map((ds: IDataSourceOptions) => createDataSource(ds))\n\n  // Connect the data sources (async)\n  Promise.all(dataSources\n    .map(ds => ds.connect()))\n    // .then(() => console.info('Data sources connected'))\n    .catch(err => console.error('Error while connecting data sources', err))\n\n  // Initialize the global data source manager\n  initializeDataSourceManager(dataSources, editor, options)\n\n  // Register the UI for component properties\n  view(editor, options)\n\n  // Save and load data sources\n  storage(editor)\n\n  // Register the commands\n  commands(editor, options)\n\n  // Use grapesjs-notifications plugin for errors\n  editor.on(DATA_SOURCE_ERROR, (msg: string, ds: IDataSource) => editor.runCommand('notifications:add', { type: 'error', message: `Data source \\`${ds.id}\\` error: ${msg}`, group: NOTIFICATION_GROUP }))\n\n  // Load data after editor is fully loaded\n  editor.on('load', () => {\n    refreshDataSources()\n  })\n\n  // Also refresh data when storage loads (to handle website data loading)\n  editor.on('storage:end:load', () => {\n    // Use setTimeout to ensure components are fully loaded\n    setTimeout(() => {\n      refreshDataSources()\n    }, 100)\n  })\n}\n\n/**\n * Version of the plugin\n * This is replaced by the build script\n */\nexport const version = '__VERSION__'\n"],"names":["root","factory","exports","module","define","amd","globalThis","window","this","templateStrings","values","_i","arguments","length","matches","strings","slice","replace","i","match","push","apply","size","Math","min","map","value","pattern","RegExp","string","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","DATA_SOURCE_READY","DATA_SOURCE_ERROR","DATA_SOURCE_CHANGED","COMPONENT_STATE_CHANGED","COMMAND_REFRESH","COMMAND_PREVIEW_ACTIVATE","COMMAND_PREVIEW_DEACTIVATE","COMMAND_PREVIEW_REFRESH","DATA_SOURCE_DATA_LOAD_START","DATA_SOURCE_DATA_LOAD_END","DATA_SOURCE_DATA_LOAD_CANCEL","builtinTypeIds","builtinTypes","id","label","fields","UnariOperator","BinariOperator","Properties","EXPORTED_STATES_KEY","PRIVATE_STATES_KEY","PERSISTANT_ID_KEY","COMPONENT_NAME_PREFIX","getPersistantId","component","getOrCreatePersistantId","persistantId","newPersistantId","ccid","round","random","set","getParentByPersistentId","parent","_callbacks","fireChange","state","forEach","callback","getStateIds","exported","before","allStates","sort","hidden","index","indexOf","e","console","error","getStates","expression","getState","find","setState","states","existing","s","splice","removeState","newStates","filter","ShadowRoot","ShadyCSS","nativeShadow","Document","CSSStyleSheet","WeakMap","constructor","t","_$cssResult$","Error","cssText","styleSheet","replaceSync","toString","reduce","c","cssRules","is","getOwnPropertyDescriptor","h","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","trustedTypes","l","emptyScript","p","reactiveElementPolyfillSupport","u","toAttribute","Boolean","Array","JSON","stringify","fromAttribute","Number","parse","f","b","attribute","type","String","converter","reflect","useDefault","hasChanged","metadata","litPropertyMetadata","y","HTMLElement","addInitializer","_$Ei","observedAttributes","finalize","_$Eh","keys","createProperty","create","wrapped","elementProperties","noAccessor","getPropertyDescriptor","requestUpdate","configurable","getPropertyOptions","Map","finalized","properties","_$Eu","elementStyles","finalizeStyles","styles","isArray","Set","flat","reverse","unshift","toLowerCase","super","_$Ep","isUpdatePending","hasUpdated","_$Em","_$Ev","_$ES","Promise","enableUpdating","_$AL","_$E_","addController","_$EO","add","renderRoot","isConnected","hostConnected","removeController","delete","createRenderRoot","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","document","createElement","litNonce","setAttribute","textContent","appendChild","connectedCallback","disconnectedCallback","hostDisconnected","attributeChangedCallback","_$AK","_$ET","removeAttribute","_$Ej","hasAttribute","C","_$EP","has","_$Eq","reject","scheduleUpdate","performUpdate","shouldUpdate","willUpdate","hostUpdate","update","_$EM","_$AE","hostUpdated","firstUpdated","updated","updateComplete","getUpdateComplete","mode","ReactiveElement","reactiveElementVersions","createPolicy","createHTML","toFixed","createComment","iterator","v","_","m","g","$","_$litType$","T","for","E","A","createTreeWalker","P","V","lastIndex","exec","test","x","startsWith","N","parts","el","currentNode","content","firstChild","replaceWith","childNodes","nextNode","nodeType","hasAttributes","getAttributeNames","endsWith","getAttribute","split","name","ctor","H","I","L","k","tagName","append","data","innerHTML","_$Co","_$Cl","_$litDirective$","_$AO","_$AT","_$AS","M","_$AV","_$AN","_$AD","_$AM","parentNode","_$AU","creationScope","importNode","R","nextSibling","z","_$AI","_$Cv","_$AH","_$AA","_$AB","options","startNode","endNode","_$AR","O","insertBefore","createTextNode","_$AC","_$AP","remove","setConnected","element","fill","j","toggleAttribute","capture","once","passive","removeEventListener","addEventListener","handleEvent","host","Z","D","U","B","F","litHtmlPolyfillSupport","litHtmlVersions","renderBefore","_$litPart$","renderOptions","_$Do","render","_$litElement$","litElementHydrateSupport","LitElement","litElementPolyfillSupport","fromStored","token","dataTree","componentId","optionsForm","original","filters","field","propertyToField","fieldId","getTokenOptions","tokenToField","prev","getFilterFromToken","validate","output","warn","getId","storedStateId","exposed","getExpressionResultType","kind","forceKind","property","typeNames","typeIds","typeId","getType","dataSourceId","args","entries","defaultValue","join","previewIndex","arr","arg","selected","input","getOptionObject","option1","option2","result","isEmpty","keys1","keys2","isString","isJsonString","str","isJson","json","litElementVersions","GraphQL","method","headers","types","queryables","queryType","ready","eventListeners","url","queryable","readonly","on","event","off","cb","trigger","triggerError","message","loadData","__schema","allTypes","concat","query","nonQueryables","graphQLToType","queryableTypes","getOfTypeProp","ofKindToKind","queryableFields","graphQLToField","graphQLToTypes","graphQLToKind","getOfTypePropRecursive","ofType","ofTypeResult","possibleTypes","validKind","includes","ofKind","foundKind","queryableOverride","connect","getTypes","getQueryables","response","fetch","body","ok","status","statusText","getQuery","children","getQueryRecursive","tree","indent","fragment","typeOrFragment","buildArgs","FIXED_TOKEN_ID","fieldTypes","child","fieldType","fragmentsQuery","childQuery","fetchValues","globalRegistry","getRegistry","getAllDataSources","dataSources","addDataSource","dataSource","registry","editor","removeDataSource","getDataSource","ds","setDataSources","NOTIFICATION_GROUP","getDataTreeFromUtils","getComponentDebug","parentName","getName","parentTagName","parentDebug","cid","classes","getClasses","classesStr","getTokenDisplayName","typeIdsStr","getTypeDisplayName","prefix","getStateDisplayName","groupByType","completion","acc","runCommand","group","getFixedToken","propType","toValue","toId","fromString","toExpression","every","isExpression","convertKind","from","to","getElementFromOption","option","optionNameForError","querySelector","getDefaultOptions","postFix","createDataSource","opts","STANDARD_TYPES","DataTree","_allTypes","_queryables","previewData","getAllTypes","getAllQueryables","standardType","flatMap","getValue","resolvePreviewIndex","prevValues","rest","resolvedExpression","resolveState","isItems","prevObj","handlePreviewIndex","valueType","isNull","getAllPagesExpressions","Pages","getAll","page","expressions","getPageExpressions","getComponentExpressionsRecursive","getMainComponent","queries","getComponentExpressions","components","publicStates","privateStates","getTrees","next","trees","isRelative","exp","resolved","parentFieldsTypes","some","toTrees","grouped","mergeTrees","tree1","tree2","errors","child1","child2","different","same","storedState","isNumber","scalarOnly","stateName","item","quotedOptions","optionsKeys","separator","getFieldType","start","end","num","abs","ceil","floor","max","isDate","date","Date","toLocaleDateString","format","timeZone","search","lastIndexOf","toUpperCase","charAt","count","parseInt","log","getPageQuery","dsExpressions","componentExpression","first","globalLoader","getLoader","forceRefresh","loader","getSelected","currentQueries","queriesChanged","queries1","queries2","areQueriesEqual","lastQueries","currentUpdatePid","myPid","results","all","err","fetchPagePreviewData","globalManager","initializeDataSourceManager","initializeFilters","initializeDataSourceRegistry","initializePreviewDataLoader","dataChangedBinded","detail","dataSourceReadyBinded","dataSourceErrorBinded","setupEventListeners","then","getManager","refreshDataSources","getDataTree","manager","isPreviewActive","forceRender","refresh","newDataSources","resetDataSources","PROPERTY_STYLES","_$AQ","_$Ct","_$Ci","reconnected","disconnected","setValue","G","rt","lt","ct","ht","dt","ut","w","init","COMMON_STYLES","renderSettings","dsSettings","settingsEl","SettingsDataSources","dsDataSource","dispatchEvent","CustomEvent","preventDefault","stopImmediatePropagation","customElements","SettingsDataSource","errorMessage","connected","connectDataSource","catch","dsHeaders","target","SettingsHeaders","encodeURI","st","nt","classList","inputChainStyles","popinStyles","__decorate","decorators","desc","Reflect","decorate","InputChain","selectTagName","_selectTagName","newTagName","SELECT_QUERY","OPTION_QUERY","_optionTagName","optionTagName","reactive","_form","onChange_","onChangeValue","bind","onFormdata","formData","redrawing","form","newForm","querySelectorAll","closest","changeAt","stopPropagation","idx","reset","nextIndex","Event","ExpressionInput","allowFixed","_fixed","placeholder","dirty","_a","fixed","getFixedInput","active","PopinOverlay","noAutoClose","resized_","ensureElementInView","blured_","blured","keydown_","keydown","setTimeout","getActiveElementRecursive","activeElement","popin","close","blur","_old","focus","parentStyle","parentElement","getBoundingClientRect","style","left","top","offsetX","offsetY","rect","viewportWidth","innerWidth","viewportHeight","innerHeight","width","height","PopinForm","FormData","onFormdata_","slotChanged_","slotChanged","inputs","updateFormData","fromEntries","submit","change","ft","removeProperty","setProperty","fieldToToken","getCompletion","rootType","currentStateId","hideLoopData","loopProperties","stateId","loopDataState","loopDataField","displayName","fixedValue","getContext","fieldOfField","PREVIEW_INDEX_CHANGED","StateEditor","disabled","showPreviewIndexUi","noFilters","defaultFixed","dismissCurrentComponentStates","_selected","renderBinded","_data","_editor","expressionInputRef","popinsRef","newValue","_currentValue","groupedCompletion","text","currentData","currentDataArrayLength","_c","rangeInputRef","numberInputRef","getOptions","partialExpression","_partialCompletion","partialCompletion","partialGroupedCompletion","partialToken","localeCompare","partialId","display","onChangeOptions","onChangePreview","attributes","bubbles","tokens","PropertiesEditor","condition","condition2","__data","setEditor","head","empty","resetInputs","publicState","renderStateEditor","operator","visible","stateEditor","stateEditorFinally","getTokens","onChange","CustomStatesEditor","privateState","title","createPrompt","renamePrompt","defaultName","helpText","helpLink","_reservedNames","reservedNames","trim","getHead","createCustomState","items","getStateEditor","newItem","renameCustomState","updateOrderCustomStates","prompt","alert","getPrivateState","renderInnerHTML","loopIndex","setPreviewIndex","evaluateCondition","isComponentVisible","condition1State","condition2State","conditionOperator","condition1Value","TRUTHY","FALSY","EMPTY_ARR","NOT_EMPTY_ARR","condition2Value","EQUAL","NOT_EQUAL","GREATER_THAN","LESS_THAN","GREATER_THAN_OR_EQUAL","LESS_THAN_OR_EQUAL","renderAttributes","view","renderContent","comp","deep","innerHtml","onRender","dataState","renderLoopData","clone","cloneNode","insertAdjacentElement","disableStates","disableAttributes","disableProperties","wrapper","settings","onReady","propertiesUi","statesUi","attributesUi","button","getWrapper","canvas","pages","buildPageQueries","getStateVariableName","getLiquidFilters","previewActive","storage","Commands","run","commands","msg","version"],"sourceRoot":""}